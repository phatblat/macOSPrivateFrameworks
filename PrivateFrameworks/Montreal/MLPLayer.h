//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MLPNetwork, MPSKernel, MontrealNNModelNode, NSString;

@interface MLPLayer : NSObject
{
    int _neuronType;
    float _neuronA;
    float _neuronB;
    float _neuronC;
    NSString *_name;
    unsigned long long _layerType;
    MontrealNNModelNode *_node;
    unsigned long long _inputLength;
    unsigned long long _inputChannels;
    unsigned long long _outputChannels;
    unsigned long long _outputLength;
    MPSKernel *_forwardKernel;
    MPSKernel *_secondaryForwardKernel;
    MPSKernel *_primaryGradientKernel;
    MPSKernel *_secondaryGradientKernel;
    MLPLayer *_previousLayer;
    MLPLayer *_nextLayer;
    MLPNetwork *_network;
}

+ (id)layerWithMontrealNode:(id)arg1 modelContainer:(void *)arg2;
@property __weak MLPNetwork *network; // @synthesize network=_network;
@property __weak MLPLayer *nextLayer; // @synthesize nextLayer=_nextLayer;
@property __weak MLPLayer *previousLayer; // @synthesize previousLayer=_previousLayer;
@property(retain) MPSKernel *secondaryGradientKernel; // @synthesize secondaryGradientKernel=_secondaryGradientKernel;
@property(retain) MPSKernel *primaryGradientKernel; // @synthesize primaryGradientKernel=_primaryGradientKernel;
@property(retain) MPSKernel *secondaryForwardKernel; // @synthesize secondaryForwardKernel=_secondaryForwardKernel;
@property(retain) MPSKernel *forwardKernel; // @synthesize forwardKernel=_forwardKernel;
@property unsigned long long outputLength; // @synthesize outputLength=_outputLength;
@property unsigned long long outputChannels; // @synthesize outputChannels=_outputChannels;
@property unsigned long long inputChannels; // @synthesize inputChannels=_inputChannels;
@property unsigned long long inputLength; // @synthesize inputLength=_inputLength;
@property(readonly) float neuronC; // @synthesize neuronC=_neuronC;
@property(readonly) float neuronB; // @synthesize neuronB=_neuronB;
@property(readonly) float neuronA; // @synthesize neuronA=_neuronA;
@property(readonly) int neuronType; // @synthesize neuronType=_neuronType;
@property(retain) MontrealNNModelNode *node; // @synthesize node=_node;
@property(readonly) unsigned long long layerType; // @synthesize layerType=_layerType;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (long long)montrealTypeFromMPSNeuronType:(int)arg1;
- (int)mpsNeuronTypeFromMontrealType:(long long)arg1;
- (void)printMatrix:(id)arg1 name:(id)arg2 cmdBuf:(id)arg3;
- (void)updatePreviousLayer:(id)arg1 nextLayer:(id)arg2 network:(id)arg3;
- (void)createKernel;
- (id)generateNode:(id)arg1 model:(id)arg2 weightIter:(unsigned long long *)arg3 params:(CDStruct_96916c69 *)arg4 inputChunks:(id)arg5 outputChunks:(id)arg6;
- (id)generateNode:(id)arg1 model:(id)arg2 weightIter:(unsigned long long *)arg3;
- (struct NSArray *)seqBackward:(id)arg1 dataBatch:(id)arg2 inputGradient:(struct NSArray *)arg3;
- (struct NSArray *)seqForward:(id)arg1 input:(struct NSArray *)arg2 dataBatch:(id)arg3 runInference:(BOOL)arg4;
- (struct NSArray *)backward:(id)arg1 inputGradient:(struct NSArray *)arg2;
- (struct NSArray *)forward:(id)arg1 input:(struct NSArray *)arg2 labels:(id)arg3 runInference:(BOOL)arg4;
- (id)initWithName:(id)arg1 parameters:(CDStruct_96916c69 *)arg2;
- (id)initWithLayerType:(unsigned long long)arg1 name:(id)arg2 parameters:(CDStruct_96916c69 *)arg3;
- (id)initWithLayerType:(unsigned long long)arg1 name:(id)arg2 neuronType:(int)arg3 neuronParams:(id)arg4;

@end

