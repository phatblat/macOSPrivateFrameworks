//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PLAgent.h"

@class AudioDevice, NSDate, NSDictionary, NSMutableArray, NSString, PLEntry, PLEntryNotificationOperatorComposition, PLXPCListenerOperatorComposition;

@interface PLAudioAgent : PLAgent
{
    BOOL _headsetIsPlayingAudio;
    BOOL _speakerIsPlayingAudio;
    int _accessoryPowerState;
    NSMutableArray *_nsOutputNotifications;
    NSMutableArray *_nsRoutingNotifications;
    PLEntryNotificationOperatorComposition *_accessoryPowerCallback;
    PLXPCListenerOperatorComposition *_audioAppXPCListener;
    PLXPCListenerOperatorComposition *_screenMirroringXPCListener;
    PLXPCListenerOperatorComposition *_speakerAmpXPCListener;
    PLXPCListenerOperatorComposition *_hapticsXPCListener;
    PLEntry *_entryRoutingOld;
    double _currentVolume;
    NSString *_audioHardware;
    NSDictionary *_audioPowerModel;
    NSDate *_lastAudioStateChangeDate;
    AudioDevice *_defaultOutputDevice;
    AudioDevice *_defaultInputDevice;
    CDUnknownBlockType _defaultOutputDeviceHandlerBlock;
    CDUnknownBlockType _defaultInputDeviceHandlerBlock;
}

+ (id)entryEventNoneDefinitions;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventForwardDefinitionAudioDevice;
+ (id)entryEventForwardDefinitionNowPlaying;
+ (id)entryEventForwardDefinitionRouting;
+ (id)entryEventForwardDefinitionOutput;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventPointDefinitionHaptics;
+ (id)entryEventPointDefinitionSpeakerAmp;
+ (id)entryEventPointDefinitionAudioApp;
+ (id)entryEventPointDefinitions;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType defaultInputDeviceHandlerBlock; // @synthesize defaultInputDeviceHandlerBlock=_defaultInputDeviceHandlerBlock;
@property(copy, nonatomic) CDUnknownBlockType defaultOutputDeviceHandlerBlock; // @synthesize defaultOutputDeviceHandlerBlock=_defaultOutputDeviceHandlerBlock;
@property(retain, nonatomic) AudioDevice *defaultInputDevice; // @synthesize defaultInputDevice=_defaultInputDevice;
@property(retain, nonatomic) AudioDevice *defaultOutputDevice; // @synthesize defaultOutputDevice=_defaultOutputDevice;
@property(retain) NSDate *lastAudioStateChangeDate; // @synthesize lastAudioStateChangeDate=_lastAudioStateChangeDate;
@property(readonly) NSDictionary *audioPowerModel; // @synthesize audioPowerModel=_audioPowerModel;
@property(readonly) NSString *audioHardware; // @synthesize audioHardware=_audioHardware;
@property double currentVolume; // @synthesize currentVolume=_currentVolume;
@property BOOL speakerIsPlayingAudio; // @synthesize speakerIsPlayingAudio=_speakerIsPlayingAudio;
@property BOOL headsetIsPlayingAudio; // @synthesize headsetIsPlayingAudio=_headsetIsPlayingAudio;
@property(retain) PLEntry *entryRoutingOld; // @synthesize entryRoutingOld=_entryRoutingOld;
@property(retain) PLXPCListenerOperatorComposition *hapticsXPCListener; // @synthesize hapticsXPCListener=_hapticsXPCListener;
@property(retain) PLXPCListenerOperatorComposition *speakerAmpXPCListener; // @synthesize speakerAmpXPCListener=_speakerAmpXPCListener;
@property(retain) PLXPCListenerOperatorComposition *screenMirroringXPCListener; // @synthesize screenMirroringXPCListener=_screenMirroringXPCListener;
@property(retain) PLXPCListenerOperatorComposition *audioAppXPCListener; // @synthesize audioAppXPCListener=_audioAppXPCListener;
@property(retain) PLEntryNotificationOperatorComposition *accessoryPowerCallback; // @synthesize accessoryPowerCallback=_accessoryPowerCallback;
@property(readonly) NSMutableArray *nsRoutingNotifications; // @synthesize nsRoutingNotifications=_nsRoutingNotifications;
@property(readonly) NSMutableArray *nsOutputNotifications; // @synthesize nsOutputNotifications=_nsOutputNotifications;
@property int accessoryPowerState; // @synthesize accessoryPowerState=_accessoryPowerState;
- (void).cxx_destruct;
- (void)createBluetoothAccountingEvents:(id)arg1;
- (void)createCarPlayAccountingEvents:(id)arg1;
- (void)createAirPlayAccountingEvents:(id)arg1;
- (void)createAudioAccountingEvents:(id)arg1;
- (void)modelAudioPowerSpeaker:(id)arg1;
- (void)modelAudioPowerCodec:(id)arg1;
- (double)modelAudioPowerWithVolume:(double)arg1;
- (void)modelAudioPower;
- (BOOL)shouldModelAudioPowerSpeakerTemp;
- (void)logEventForwardAudioDevice:(id)arg1;
- (void)logEventForwardRouting;
- (void)logEventForwardOutput;
- (void)logEventPointHaptics:(id)arg1;
- (void)logEventPointSpeakerAmp:(id)arg1;
- (void)logEventPointAudioApp:(id)arg1;
- (void)log;
- (void)addDefaultAudioDeviceListener:(BOOL)arg1;
- (BOOL)initDefaultAudioDevice:(BOOL)arg1;
- (id)buildCallBack:(id)arg1 withGroup:(BOOL)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)initOperatorDependancies;
- (BOOL)active;
- (id)volume;
- (id)outputCategory;
- (id)returnVolumeOrOutPutCategory:(int)arg1;
- (int)nowPlayingAppPID;
- (BOOL)muted;
- (id)activeRoute;
- (BOOL)headsetHasInput;
- (BOOL)headphonesConnected;
- (void)setupAVSystemController;
- (void)handleNowPlayingApplicationIsPlayingDidChange;
- (id)nowPlayingAppBundleID;
- (id)init;

@end

