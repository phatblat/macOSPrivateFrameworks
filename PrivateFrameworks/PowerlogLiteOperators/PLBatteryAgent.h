//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PLAgent.h"

@class NSDate, NSDictionary, NSMutableArray, NSNumber, NSString, PLEntry, PLEntryNotificationOperatorComposition, PLIOKitOperatorComposition, PLMonotonicTimer, PLSemaphore, PLTimer, PLXPCListenerOperatorComposition, PLXPCResponderOperatorComposition;

@interface PLBatteryAgent : PLAgent
{
    _Bool _isPingPongCharging;
    _Bool _isFirstTimeCheckingPingPong;
    _Bool _lifetimeDataLogged;
    BOOL _allowGasGaugeRead;
    _Bool _inPenaltyBox;
    BOOL _rejudgeBattery;
    int _presentMaxRa;
    int _lifetimeMaxRa;
    int _previousCurrentAccumulator;
    int _previousCurrentAccumulatorCount;
    int _gasGaugeConsecutiveEmptyEntriesCount;
    int _priIOAccessoryPowerMode;
    int _prevConnectedState;
    int _prevChargingState;
    int _presentChemicalWeightedRa;
    int _presentWeightedRa;
    int _presentBatteryHealthMetric;
    int _presentPeakPerformanceCapacity;
    int _lastUILevel;
    PLIOKitOperatorComposition *_iokitPowerSource;
    PLIOKitOperatorComposition *_iokitPPM;
    PLEntryNotificationOperatorComposition *_batteryLevelChanged;
    NSNumber *_deviceIsPluggedIn;
    double _batteryLevelPercent;
    double _rawBatteryVoltageVolt;
    NSDictionary *_lastITMiscStatus;
    NSDate *_previousCurrentAccumulatorDate;
    PLTimer *_EABatteryTimer;
    PLMonotonicTimer *_significantBatteryChangeTimer;
    NSString *_entryKeyEABattery;
    NSString *_entryKeyEAPencilStats;
    double _EAEnergyDrained;
    NSNumber *_lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
    PLTimer *_periodicAggdTimer;
    PLTimer *_xFlagsRetryTimer;
    PLEntry *_lastBatteryConfigEntry;
    NSNumber *_lastDOD0;
    PLXPCResponderOperatorComposition *_batteryInfoResponder;
    PLXPCResponderOperatorComposition *_batteryTemperatureResponder;
    PLXPCResponderOperatorComposition *_batteryDischargeCurrentResponder;
    PLIOKitOperatorComposition *_chargerIOService;
    PLEntry *_lastChargerEntry;
    PLEntryNotificationOperatorComposition *_canSleepEntryNotifications;
    PLSemaphore *_canSleepSemaphore;
    PLEntryNotificationOperatorComposition *_wakeEntryNotifications;
    PLTimer *_gasGaugeTimer;
    NSDate *_lastGasGaugeLogTime;
    PLIOKitOperatorComposition *_ioAccessoryManager;
    PLXPCResponderOperatorComposition *_batteryShutdownDataResponder;
    PLXPCResponderOperatorComposition *_batteryUPOStepperResponder;
    PLXPCResponderOperatorComposition *_batteryConfigResponder;
    PLXPCListenerOperatorComposition *_UPOStepperListener;
    PLXPCListenerOperatorComposition *_smartChargingListener;
    NSMutableArray *_trackedAccessories;
    NSDate *_lastTimeChargingInfoUpdated;
    PLEntry *_entryChargingOld;
    NSDate *_lastTimePenaltyBoxIntervalUpdated;
    NSDate *_lastTimeInPenaltyBox;
    NSNumber *_prevGGResetCount;
    NSNumber *_mitigatedUPOCount;
    long long _ppmEventLoggingCount;
    PLTimer *_ppmEventThresholdTimer;
}

+ (BOOL)hasChargingInfoLogging;
+ (BOOL)hasLPEMLogging;
+ (id)defaults;
+ (id)entryAggregateDefinitionUILevel;
+ (id)entryAggregateDefinitions;
+ (id)entryEventBackwardDefinitionKioskMode;
+ (id)entryEventBackwardDefinitionDischargingHeatMap;
+ (id)entryEventBackwardDefinitionChargingHeatMapB;
+ (id)entryEventBackwardDefinitionChargingHeatMapA;
+ (id)entryEventBackwardDefinitionCurrentAccumulator;
+ (id)entryEventBackwardDefinitionEABattery;
+ (id)entryEventBackwardDefinitionBatteryUI;
+ (id)entryEventBackwardDefinitionBattery;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventForwardDefinitionSmartChargingStatus;
+ (id)entryEventForwardDefinitionSmartCharging;
+ (id)entryEventForwardDefinitionMitigationState;
+ (id)entryEventForwardDefinitionUPOStepper;
+ (id)connectStateStringToEnum:(id)arg1;
+ (id)entryEventForwardDefinitionExternalCharger;
+ (id)entryEventForwardDefinitionLightningConnectorStatus;
+ (id)entryEventForwardDefinitionEAPencil;
+ (id)entryEventForwardDefinitionEAPencilCharging;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventPointDefinitionUPOStepper;
+ (id)entryEventPointDefinitionChargingInfo;
+ (id)entryEventPointDefinitionBatteryUILogging;
+ (id)entryEventPointDefinitionBatteryShutdown;
+ (id)entryEventPointDefinitionEAPencil;
+ (id)entryEventPointDefinitionGasGaugeReconnect;
+ (id)entryEventPointDefinitionPPMClientMetrics;
+ (id)entryEventPointDefinitionPPMDebug;
+ (id)entryEventForwardDefinitionIOPMUBootLPMLog;
+ (BOOL)shouldLogPPMDebugDetail;
+ (BOOL)shouldLogCPMS;
+ (id)entryEventPointDefinitions;
+ (id)entryEventNoneDefinitionBatteryConfig;
+ (id)entryEventNoneDefinitions;
+ (id)entryEventIntervalDefinitionGasGauge;
+ (id)entryEventIntervalDefinitions;
+ (void)load;
+ (BOOL)supportsxFlags;
+ (BOOL)hasWirelessCharger;
+ (BOOL)hasLightning;
+ (BOOL)hasExternalAccessory;
@property(retain) PLTimer *ppmEventThresholdTimer; // @synthesize ppmEventThresholdTimer=_ppmEventThresholdTimer;
@property long long ppmEventLoggingCount; // @synthesize ppmEventLoggingCount=_ppmEventLoggingCount;
@property int lastUILevel; // @synthesize lastUILevel=_lastUILevel;
@property BOOL rejudgeBattery; // @synthesize rejudgeBattery=_rejudgeBattery;
@property(retain) NSNumber *mitigatedUPOCount; // @synthesize mitigatedUPOCount=_mitigatedUPOCount;
@property int presentPeakPerformanceCapacity; // @synthesize presentPeakPerformanceCapacity=_presentPeakPerformanceCapacity;
@property int presentBatteryHealthMetric; // @synthesize presentBatteryHealthMetric=_presentBatteryHealthMetric;
@property int presentWeightedRa; // @synthesize presentWeightedRa=_presentWeightedRa;
@property int presentChemicalWeightedRa; // @synthesize presentChemicalWeightedRa=_presentChemicalWeightedRa;
@property(retain) NSNumber *prevGGResetCount; // @synthesize prevGGResetCount=_prevGGResetCount;
@property _Bool inPenaltyBox; // @synthesize inPenaltyBox=_inPenaltyBox;
@property(retain) NSDate *lastTimeInPenaltyBox; // @synthesize lastTimeInPenaltyBox=_lastTimeInPenaltyBox;
@property(retain) NSDate *lastTimePenaltyBoxIntervalUpdated; // @synthesize lastTimePenaltyBoxIntervalUpdated=_lastTimePenaltyBoxIntervalUpdated;
@property(retain) PLEntry *entryChargingOld; // @synthesize entryChargingOld=_entryChargingOld;
@property int prevChargingState; // @synthesize prevChargingState=_prevChargingState;
@property int prevConnectedState; // @synthesize prevConnectedState=_prevConnectedState;
@property(retain) NSDate *lastTimeChargingInfoUpdated; // @synthesize lastTimeChargingInfoUpdated=_lastTimeChargingInfoUpdated;
@property int priIOAccessoryPowerMode; // @synthesize priIOAccessoryPowerMode=_priIOAccessoryPowerMode;
@property(retain) NSMutableArray *trackedAccessories; // @synthesize trackedAccessories=_trackedAccessories;
@property(retain) PLXPCListenerOperatorComposition *smartChargingListener; // @synthesize smartChargingListener=_smartChargingListener;
@property(retain) PLXPCListenerOperatorComposition *UPOStepperListener; // @synthesize UPOStepperListener=_UPOStepperListener;
@property(retain) PLXPCResponderOperatorComposition *batteryConfigResponder; // @synthesize batteryConfigResponder=_batteryConfigResponder;
@property(retain) PLXPCResponderOperatorComposition *batteryUPOStepperResponder; // @synthesize batteryUPOStepperResponder=_batteryUPOStepperResponder;
@property(retain) PLXPCResponderOperatorComposition *batteryShutdownDataResponder; // @synthesize batteryShutdownDataResponder=_batteryShutdownDataResponder;
@property(readonly) PLIOKitOperatorComposition *ioAccessoryManager; // @synthesize ioAccessoryManager=_ioAccessoryManager;
@property BOOL allowGasGaugeRead; // @synthesize allowGasGaugeRead=_allowGasGaugeRead;
@property int gasGaugeConsecutiveEmptyEntriesCount; // @synthesize gasGaugeConsecutiveEmptyEntriesCount=_gasGaugeConsecutiveEmptyEntriesCount;
@property(retain) NSDate *lastGasGaugeLogTime; // @synthesize lastGasGaugeLogTime=_lastGasGaugeLogTime;
@property(retain) PLTimer *gasGaugeTimer; // @synthesize gasGaugeTimer=_gasGaugeTimer;
@property(readonly) PLEntryNotificationOperatorComposition *wakeEntryNotifications; // @synthesize wakeEntryNotifications=_wakeEntryNotifications;
@property(retain) PLSemaphore *canSleepSemaphore; // @synthesize canSleepSemaphore=_canSleepSemaphore;
@property(readonly) PLEntryNotificationOperatorComposition *canSleepEntryNotifications; // @synthesize canSleepEntryNotifications=_canSleepEntryNotifications;
@property(retain) PLEntry *lastChargerEntry; // @synthesize lastChargerEntry=_lastChargerEntry;
@property(retain) PLIOKitOperatorComposition *chargerIOService; // @synthesize chargerIOService=_chargerIOService;
@property(retain) PLXPCResponderOperatorComposition *batteryDischargeCurrentResponder; // @synthesize batteryDischargeCurrentResponder=_batteryDischargeCurrentResponder;
@property(retain) PLXPCResponderOperatorComposition *batteryTemperatureResponder; // @synthesize batteryTemperatureResponder=_batteryTemperatureResponder;
@property(retain) PLXPCResponderOperatorComposition *batteryInfoResponder; // @synthesize batteryInfoResponder=_batteryInfoResponder;
@property(retain) NSNumber *lastDOD0; // @synthesize lastDOD0=_lastDOD0;
@property(retain) PLEntry *lastBatteryConfigEntry; // @synthesize lastBatteryConfigEntry=_lastBatteryConfigEntry;
@property(retain) PLTimer *xFlagsRetryTimer; // @synthesize xFlagsRetryTimer=_xFlagsRetryTimer;
@property(retain) PLTimer *periodicAggdTimer; // @synthesize periodicAggdTimer=_periodicAggdTimer;
@property _Bool lifetimeDataLogged; // @synthesize lifetimeDataLogged=_lifetimeDataLogged;
@property _Bool isFirstTimeCheckingPingPong; // @synthesize isFirstTimeCheckingPingPong=_isFirstTimeCheckingPingPong;
@property _Bool isPingPongCharging; // @synthesize isPingPongCharging=_isPingPongCharging;
@property(retain) NSNumber *lastkIOPSAppleBatteryCaseCumulativeCurrentKey; // @synthesize lastkIOPSAppleBatteryCaseCumulativeCurrentKey=_lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
@property double EAEnergyDrained; // @synthesize EAEnergyDrained=_EAEnergyDrained;
@property(readonly) NSString *entryKeyEAPencilStats; // @synthesize entryKeyEAPencilStats=_entryKeyEAPencilStats;
@property(readonly) NSString *entryKeyEABattery; // @synthesize entryKeyEABattery=_entryKeyEABattery;
@property(retain) PLMonotonicTimer *significantBatteryChangeTimer; // @synthesize significantBatteryChangeTimer=_significantBatteryChangeTimer;
@property(retain) PLTimer *EABatteryTimer; // @synthesize EABatteryTimer=_EABatteryTimer;
@property(retain) NSDate *previousCurrentAccumulatorDate; // @synthesize previousCurrentAccumulatorDate=_previousCurrentAccumulatorDate;
@property int previousCurrentAccumulatorCount; // @synthesize previousCurrentAccumulatorCount=_previousCurrentAccumulatorCount;
@property int previousCurrentAccumulator; // @synthesize previousCurrentAccumulator=_previousCurrentAccumulator;
@property(retain) NSDictionary *lastITMiscStatus; // @synthesize lastITMiscStatus=_lastITMiscStatus;
@property int lifetimeMaxRa; // @synthesize lifetimeMaxRa=_lifetimeMaxRa;
@property int presentMaxRa; // @synthesize presentMaxRa=_presentMaxRa;
@property double rawBatteryVoltageVolt; // @synthesize rawBatteryVoltageVolt=_rawBatteryVoltageVolt;
@property double batteryLevelPercent; // @synthesize batteryLevelPercent=_batteryLevelPercent;
@property(retain) NSNumber *deviceIsPluggedIn; // @synthesize deviceIsPluggedIn=_deviceIsPluggedIn;
@property(retain) PLEntryNotificationOperatorComposition *batteryLevelChanged; // @synthesize batteryLevelChanged=_batteryLevelChanged;
@property(readonly) PLIOKitOperatorComposition *iokitPPM; // @synthesize iokitPPM=_iokitPPM;
@property(readonly) PLIOKitOperatorComposition *iokitPowerSource; // @synthesize iokitPowerSource=_iokitPowerSource;
- (void).cxx_destruct;
- (int)deviceType;
- (id)overrideBatteryData:(id)arg1 withPath:(id)arg2;
- (_Bool)batterySerialChanged:(id)arg1;
- (int)getBatteryMaximumCapacityPercent;
- (int)getBatteryHealthServiceFlags;
- (int)getBatteryHealthServiceState;
- (int)getMitigationDefaults;
- (void)setMitigationStateDefault:(unsigned long long)arg1;
- (void)handleMitigationStateCallback:(int)arg1;
- (long long)xFlags;
- (BOOL)shouldWaitForLifetimeDataWithRawData:(id)arg1;
- (void)accountGaugePowerFromCurrentAccumulatorEntry:(id)arg1;
- (void)logCurrentAccumulatorWithRawData:(id)arg1;
- (void)gasGaugeRead;
- (void)addPowerMeasurementToAccounting:(double)arg1 withStartDate:(id)arg2 withEndDate:(id)arg3;
- (BOOL)givePluggedInFreePass;
- (BOOL)gasGaugeStopLoggingAndClose;
- (BOOL)gasGaugeOpenAndStartLogging;
- (void)logEventNoneBatteryConfigCycleCountData;
- (void)logEventNoneBatteryConfigWithRawData:(id)arg1;
- (void)logEventPointBatteryShutdown;
- (void)logKioskModeEntryToAggd:(id)arg1;
- (void)logBatteryConfigToAggd:(id)arg1;
- (void)aggdTimerFired;
- (void)logBatteryShutdownToAggd:(id)arg1;
- (void)setAggdIntegerValueFromEntry:(id)arg1 forKey:(id)arg2 withPrefix:(id)arg3;
- (id)getBatteryShutdownData;
- (id)getMitigatedUPOCountDefault;
- (void)setMitigatedUPOCountDefault:(id)arg1;
- (id)getUPOStepperData;
- (id)parseITMiscStatusCounters:(id)arg1;
- (id)presentMaxRaFromRawData:(id)arg1;
- (id)parseRawRaTableData:(id)arg1;
- (id)batteryEEEECode:(id)arg1;
- (id)weekOfManufacture:(id)arg1;
- (id)parseBatterySerialNumber:(id)arg1;
- (id)isOriginalBattery;
- (id)lowBatteryLogString;
- (id)lowBatteryLogPath;
- (int)batteryLifetimeUPOCount;
- (id)logEventBackwardBatteryWithRawData:(id)arg1;
- (void)logEventBackwardBattery;
- (void)logEventBackwardKioskModeCallback:(id)arg1;
- (void)logEventBackwardKioskMode;
- (void)logEventBackwardHeatMapCallback:(id)arg1 andHeatMapType:(long long)arg2;
- (void)logEventBackwardHeatMap;
- (void)logEventForwardSmartChargingWithPayload:(id)arg1;
- (void)logEventForwardMitigationStateWithState:(unsigned long long)arg1 userDisabled:(_Bool)arg2;
- (void)logEventForwardUPOStepperWithPayload:(id)arg1;
- (int)calculateChargingState:(id)arg1;
- (int)calculateConnectedState:(id)arg1;
- (void)logChargingTimeToAggd:(double)arg1;
- (void)logPenaltyBoxDurationToAggd:(double)arg1;
- (_Bool)checkForPenaltyBox:(id)arg1;
- (void)checkChargingInfoChange:(id)arg1;
- (void)logChargingParametersToAggd:(id)arg1;
- (BOOL)driverActive:(id)arg1;
- (void)logEventPointChargingInfoWithChargingData:(id)arg1;
- (void)logEventIntervalGasGauge;
- (void)logPPMDebug;
- (id)getPPMDebugData;
- (void)logEventForwardLPEM;
- (void)logEventPointUPOStepper;
- (void)fakeLogEntry:(id)arg1;
- (void)log;
- (void)handlePPMCallback;
- (void)handleSBC;
- (void)initOperatorDependancies;
- (void)detectEAPencilConnectionWithNotification:(id)arg1;
- (BOOL)isUPOEntry:(id)arg1;
- (BOOL)isEAPencilConnectedNow;
- (BOOL)isEABatteryConnectedNow;
- (void)logEABatteryStatistics;
- (id)getBaseIdentifierFromDevice:(id)arg1;
- (id)getIOPSDevices;
- (void)accessoryConnected:(id)arg1;
- (void)accessoryDisconnected:(id)arg1;
- (void)cancelEALogging;
- (void)setupEALogging;
- (void)refreshEABatteryStatus;
- (BOOL)modifiedExternalChargerEntry:(id)arg1;
- (BOOL)hasAppleSmartBattery;
- (void)dealloc;
- (id)init;
- (void)updateLastChargeLevel:(int)arg1 withTimestamp:(double)arg2;

@end

