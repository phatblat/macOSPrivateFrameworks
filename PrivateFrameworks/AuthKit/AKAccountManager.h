//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class ACAccountStore, ACAccountType, NSObject<OS_dispatch_queue>;

@interface AKAccountManager : NSObject
{
    ACAccountStore *_accountStore;
    NSObject<OS_dispatch_queue> *_accountQueue;
    ACAccountType *_authKitAccountType;
    struct os_unfair_lock_s _authKitAccountTypeLock;
    ACAccountType *_appleIDAccountType;
    struct os_unfair_lock_s _appleIDAccountTypeLock;
    ACAccountType *_iCloudAccountType;
    struct os_unfair_lock_s _iCloudAccountTypeLock;
}

+ (id)stringRepresentationForService:(long long)arg1;
+ (BOOL)isAccountsFrameworkAvailable;
+ (id)sharedInstance;
@property(retain, nonatomic) ACAccountStore *store; // @synthesize store=_accountStore;
- (void).cxx_destruct;
@property(readonly, nonatomic) ACAccountType *appleIDAccountType;
- (id)_iCloudAccountType;
- (id)_altDSIDForiCloudAccount:(id)arg1;
- (id)_aliasesForiCloudAccount:(id)arg1;
- (id)transportableAuthKitAccount:(id)arg1;
- (BOOL)isPrimaryiCloudAccount:(id)arg1;
- (id)iCloudAccountForAltDSID:(id)arg1;
- (id)iCloudAccountForAppleID:(id)arg1;
- (BOOL)hasPrimaryiCloudAccountForAltDSID:(id)arg1;
- (BOOL)hasPrimaryiCloudAccountForAppleID:(id)arg1;
- (void)removeUnusedAndDuplicateAuthKitAccountsWithCompletion:(CDUnknownBlockType)arg1;
- (id)activeServiceNamesForAccount:(id)arg1;
- (id)servicesUsingAccount:(id)arg1;
- (void)setAccount:(id)arg1 inUse:(BOOL)arg2 byService:(long long)arg3;
- (void)_removeTokenForKeys:(id)arg1 forAccount:(id)arg2;
- (void)_removeTokenKey:(id)arg1 forAccount:(id)arg2;
- (void)removeContinuationTokenForAccount:(id)arg1;
- (void)removeAllPasswordResetTokens;
- (id)mostRecentlyUsedAuthKitAccount;
- (id)appleIDAccountWithAppleID:(id)arg1;
- (id)appleIDAccountWithAltDSID:(id)arg1;
- (id)allAuthKitAccounts;
@property(readonly, nonatomic) ACAccountType *authKitAccountType;
- (id)authKitAccountWithAppleID:(id)arg1;
- (id)authKitAccountWithDSID:(id)arg1;
- (id)authKitAccountWithAltDSID:(id)arg1;
- (id)_tokenWithName:(id)arg1 forAccount:(id)arg2 error:(id *)arg3;
- (void)removeMasterTokenForAccount:(id)arg1;
- (id)masterTokenForAccount:(id)arg1;
- (id)passwordResetTokenBackupForAccount:(id)arg1 error:(id *)arg2;
- (id)passwordResetTokenForAccount:(id)arg1 error:(id *)arg2;
- (id)continuationTokenForAccount:(id)arg1 error:(id *)arg2;
- (id)hearbeatTokenForAccount:(id)arg1 error:(id *)arg2;
- (id)passwordResetTokenBackupForAccount:(id)arg1;
- (id)passwordResetTokenForAccount:(id)arg1;
- (id)continuationTokenForAccount:(id)arg1;
- (id)hearbeatTokenForAccount:(id)arg1;
- (void)setRepairState:(unsigned long long)arg1 forAccount:(id)arg2;
- (unsigned long long)repairStateForAccount:(id)arg1;
- (BOOL)needsRepairForAccount:(id)arg1;
- (void)setAuthenticationMode:(unsigned long long)arg1 forAccount:(id)arg2;
- (unsigned long long)authenticationModeForAccount:(id)arg1;
- (void)setSecurityLevel:(unsigned long long)arg1 forAccount:(id)arg2;
- (unsigned long long)securityLevelForAccount:(id)arg1;
- (BOOL)saveAccount:(id)arg1 error:(id *)arg2;
- (BOOL)_setUsername:(id)arg1 forAccount:(id)arg2;
- (void)updateUsername:(id)arg1 forAccountsWithAltDSID:(id)arg2;
- (void)setAliases:(id)arg1 forAccount:(id)arg2;
- (id)aliasesForAccount:(id)arg1;
- (void)setDSID:(id)arg1 forAccount:(id)arg2;
- (id)DSIDForAccount:(id)arg1;
- (void)setAltDSID:(id)arg1 forAccount:(id)arg2;
- (id)altDSIDForAccount:(id)arg1;
- (id)init;

@end

