//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableDictionary, PHAWorkerHealthMonitor, PHPhotoLibrary;

@interface PHAJobGenerator : NSObject
{
    BOOL _skippedSomeWorker;
    BOOL _graphIncompatibleWorkersAreInhibited;
    PHPhotoLibrary *_library;
    PHAWorkerHealthMonitor *_healthMonitor;
    NSMutableDictionary *_workInfoReadersByMode;
    long long _generatedJobCountGoal;
    NSMutableDictionary *_countOfJobsGeneratedByWorkerType;
}

+ (long long)maxBatchSize;
@property(readonly, nonatomic) NSMutableDictionary *countOfJobsGeneratedByWorkerType; // @synthesize countOfJobsGeneratedByWorkerType=_countOfJobsGeneratedByWorkerType;
@property(nonatomic) long long generatedJobCountGoal; // @synthesize generatedJobCountGoal=_generatedJobCountGoal;
@property(readonly, nonatomic) NSMutableDictionary *workInfoReadersByMode; // @synthesize workInfoReadersByMode=_workInfoReadersByMode;
@property(readonly, nonatomic) PHAWorkerHealthMonitor *healthMonitor; // @synthesize healthMonitor=_healthMonitor;
@property(readonly, nonatomic) PHPhotoLibrary *library; // @synthesize library=_library;
@property BOOL graphIncompatibleWorkersAreInhibited; // @synthesize graphIncompatibleWorkersAreInhibited=_graphIncompatibleWorkersAreInhibited;
- (void).cxx_destruct;
- (id)generateJobWithCurrentConstraints:(id)arg1 workersByType:(id)arg2;
- (id)initWithHealthMonitor:(id)arg1 library:(id)arg2;
- (id)_produceAssetAnalysisOrAdditionalJobWithForWorkerType:(id)arg1 workInfoReaderMode:(id)arg2 scenario:(unsigned long long)arg3 allowLoadBalanceSkip:(BOOL)arg4 additionalStatesToExclude:(id)arg5 askAboutAdditionalJobs:(BOOL)arg6 canUseNetwork:(BOOL)arg7 defaultsDisabledKey:(id)arg8 failureReason:(id *)arg9;
- (BOOL)_workerUnavailableForWorkerType:(short)arg1 defaultsDisabledKey:(id)arg2 unavailableReason:(id *)arg3;
- (id)_transformWorkInfoByUUIDToWorkInfoByLocalIdentifier:(id)arg1;
- (void)_incrementGeneratedJobCountForWorkerType:(short)arg1;
- (void)_jumpToGoalJobCountForWorkerType:(short)arg1;
- (void)_increaseGoalLevelIfNeeeded;
- (BOOL)_anyWorkerIsLoadBalanceSkipping;
- (BOOL)_shouldLoadBalanceSkipForWorkerType:(short)arg1;
- (id)_workerTypesEligibleForLoadBalanceSkipping;

@end

