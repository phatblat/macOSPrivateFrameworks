//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MLModel<MLUpdatable>, MLUpdateProgressHandlers, NSError, NSString, _MLTJSONReader, _MLTLogger;

@interface _MLTModelUpdateGradientTester : NSObject
{
    BOOL _verbose;
    NSError *_testError;
    NSString *_updateableModelPath;
    NSString *_recipePath;
    _MLTLogger *_logger;
    MLModel<MLUpdatable> *_updatebleModel;
    MLUpdateProgressHandlers *_updateProgressHandlers;
    NSError *_updatableModelError;
    _MLTJSONReader *_jsonReader;
    NSString *_errorString;
    NSString *_modelType;
    long long _computeUnit;
}

@property(nonatomic) BOOL verbose; // @synthesize verbose=_verbose;
@property(nonatomic) long long computeUnit; // @synthesize computeUnit=_computeUnit;
@property(retain, nonatomic) NSString *modelType; // @synthesize modelType=_modelType;
@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(retain, nonatomic) _MLTJSONReader *jsonReader; // @synthesize jsonReader=_jsonReader;
@property(retain) NSError *updatableModelError; // @synthesize updatableModelError=_updatableModelError;
@property(retain) MLUpdateProgressHandlers *updateProgressHandlers; // @synthesize updateProgressHandlers=_updateProgressHandlers;
@property(retain, nonatomic) MLModel<MLUpdatable> *updatebleModel; // @synthesize updatebleModel=_updatebleModel;
@property(retain, nonatomic) _MLTLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSString *recipePath; // @synthesize recipePath=_recipePath;
@property(retain, nonatomic) NSString *updateableModelPath; // @synthesize updateableModelPath=_updateableModelPath;
@property(retain) NSError *testError; // @synthesize testError=_testError;
- (void).cxx_destruct;
- (CDUnknownBlockType)_completionHandlerBlock;
- (CDUnknownBlockType)_progressHandlerBlock;
- (BOOL)runModelUpdateGradientTest:(id *)arg1;
- (BOOL)compareGradient:(id)arg1 withExpectedGradients:(id)arg2 gradientName:(id)arg3 error:(id *)arg4;
- (id)logStringForMultiArray:(id)arg1;
- (id)initWithConfiguration:(id)arg1 error:(id *)arg2;

@end

