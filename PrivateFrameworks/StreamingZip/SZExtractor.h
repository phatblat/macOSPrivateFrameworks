//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "SZExtractor.h"

@class NSDictionary, NSError, NSObject<OS_dispatch_queue>, NSString, NSXPCConnection, SZExtractorInternalDelegate, StreamingUnzipper;

@interface SZExtractor : NSObject <SZExtractor, NSCopying>
{
    BOOL _isLocalExtractor;
    BOOL _needsPreparation;
    BOOL _hasHadPostSetupMethodsCalled;
    NSString *_extractionPath;
    NSDictionary *_options;
    unsigned long long _lastResumptionOffset;
    NSXPCConnection *_unzipServiceConnection;
    StreamingUnzipper *_inProcessUnzipper;
    NSObject<OS_dispatch_queue> *_serialQueue;
    SZExtractorInternalDelegate *_internalExtractorDelegate;
    NSError *_error;
}

+ (void)enableDebugLogging;
+ (BOOL)supportsSecureCoding;
+ (id)knownSZExtractorImplementations;
@property(nonatomic) BOOL hasHadPostSetupMethodsCalled; // @synthesize hasHadPostSetupMethodsCalled=_hasHadPostSetupMethodsCalled;
@property(nonatomic) BOOL needsPreparation; // @synthesize needsPreparation=_needsPreparation;
@property(readonly, nonatomic) BOOL isLocalExtractor; // @synthesize isLocalExtractor=_isLocalExtractor;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) SZExtractorInternalDelegate *internalExtractorDelegate; // @synthesize internalExtractorDelegate=_internalExtractorDelegate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(readonly, nonatomic) StreamingUnzipper *inProcessUnzipper; // @synthesize inProcessUnzipper=_inProcessUnzipper;
@property(readonly, nonatomic) NSXPCConnection *unzipServiceConnection; // @synthesize unzipServiceConnection=_unzipServiceConnection;
@property(nonatomic) unsigned long long lastResumptionOffset; // @synthesize lastResumptionOffset=_lastResumptionOffset;
@property(readonly, copy, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *extractionPath; // @synthesize extractionPath=_extractionPath;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)setActiveExtractorDelegateMethods:(int)arg1;
@property(nonatomic) __weak id <SZExtractorDelegate> extractorDelegate;
@property(nonatomic) __weak id <SZExtractorDelegate> delegate;
- (BOOL)consumeExtractedDataIfNeeded;
@property(readonly, nonatomic) BOOL doesConsumeExtractedData; // @dynamic doesConsumeExtractedData;
- (void)terminateStreamWithError:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)finishStreamWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)suspendStreamWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)supplyBytes:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (BOOL)_isValidObject;
- (void)_invalidateObject;
- (void)prepareForExtractionToPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)prepareForExtraction:(CDUnknownBlockType)arg1;
- (void)_prepareForLocalExtraction:(CDUnknownBlockType)arg1;
- (void)_prepareForRemoteExtraction:(CDUnknownBlockType)arg1;
- (BOOL)_synchronouslyPrepareForExtractionAtOffset:(unsigned long long *)arg1;
- (id)initForLocalExtractionWithPath:(id)arg1 options:(id)arg2 resumptionOffset:(unsigned long long *)arg3;
- (id)initForRemoteExtractionWithPath:(id)arg1 options:(id)arg2 resumptionOffset:(unsigned long long *)arg3;
- (id)initWithPath:(id)arg1 md5Hashes:(id)arg2 hashedChunkSize:(unsigned long long)arg3 resumptionOffset:(unsigned long long *)arg4;
- (id)initWithPath:(id)arg1 options:(id)arg2 resumptionOffset:(unsigned long long *)arg3;
- (id)initWithPath:(id)arg1 resumptionOffset:(unsigned long long *)arg2;
- (id)initWithOptions:(id)arg1;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (void)_setUpWithPath:(id)arg1 options:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

