//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AddressObject;

struct Box<float, 2> {
    Matrix_8746f91e _field1;
    Matrix_8746f91e _field2;
};

struct CAARiseTransitSetDetails {
    _Bool bRiseValid;
    double Rise;
    _Bool bTransitValid;
    _Bool bTransitAboveHorizon;
    double Transit;
    _Bool bSetValid;
    double Set;
};

struct CGSize {
    double width;
    double height;
};

struct DispatchTimer;

struct Entry;

struct ErrorInfo;

struct GEOActiveResourceFilter {
    double _field1;
    int _field2;
    int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOFeatureShield {
    CDStruct_29923528 _field1;
    long long _field2;
};

struct GEOFlyoverRegion {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOGenericTile {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOHighlight {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOJunctionElement {
    int _field1;
    int _field2;
    int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOLabelLineAttribute {
    unsigned char _field1;
    unsigned char _field2;
    struct GEOLabelLineRange _field3;
};

struct GEOLabelLineFeatureSection {
    unsigned int _field1;
    struct GEOLabelLineRange _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct GEOLabelLineRange {
    double _field1;
    double _field2;
};

struct GEONavigationAudioFeedback {
    int _currentRouteTypeAtEndOfNav;
    unsigned int _manuallyChangedRouteCount;
    unsigned int _manuallyDisabledHFPCount;
    unsigned int _manuallyEnabledHFPCount;
    unsigned int _spokenPromptsCount;
    char _bTHFPAvailableAtEndOfNav;
    char _bTHFPRoutesAvailable;
    char _currentRouteHFPEnabledAtEndOfNav;
    char _everManuallyChangedRoute;
    char _everManuallyEnabledHFPRoute;
    char _everViewedAudioSheet;
    char _everViewedAudioSheetBTAny;
    char _everViewedAudioSheetBTHFP;
    char _pauseSpokenAudioEnabled;
    char _viewedAudioSheet;
    char _viewedAudioSheetBTAny;
    char _viewedAudioSheetBTHFP;
    char _wirelessRoutesAvailable;
    struct {
        unsigned int currentRouteTypeAtEndOfNav:1;
        unsigned int manuallyChangedRouteCount:1;
        unsigned int manuallyDisabledHFPCount:1;
        unsigned int manuallyEnabledHFPCount:1;
        unsigned int spokenPromptsCount:1;
        unsigned int bTHFPAvailableAtEndOfNav:1;
        unsigned int bTHFPRoutesAvailable:1;
        unsigned int currentRouteHFPEnabledAtEndOfNav:1;
        unsigned int everManuallyChangedRoute:1;
        unsigned int everManuallyEnabledHFPRoute:1;
        unsigned int everViewedAudioSheet:1;
        unsigned int everViewedAudioSheetBTAny:1;
        unsigned int everViewedAudioSheetBTHFP:1;
        unsigned int pauseSpokenAudioEnabled:1;
        unsigned int viewedAudioSheet:1;
        unsigned int viewedAudioSheetBTAny:1;
        unsigned int viewedAudioSheetBTHFP:1;
        unsigned int wirelessRoutesAvailable:1;
    } _has;
};

struct GEOOnce_s {
    struct os_unfair_lock_s lock;
    char didRun;
};

struct GEOPBTransitTimeRange {
    unsigned int _duration;
    unsigned int _startTime;
    CDStruct_beabc505 _has;
};

struct GEOPDAmenityValue {
    int _field1;
    char _field2;
    CDStruct_d7010776 _field3;
};

struct GEOPDCameraPathFrame {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    float _field11;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field12;
};

struct GEOPDLabelFrame {
    float _field1;
    unsigned int _field2;
    float _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOPDLitePlaceResult {
    unsigned long long _field1;
    int _field2;
    CDStruct_d7010776 _field3;
};

struct GEOPDLocalTimeRange {
    unsigned int _field1;
    unsigned int _field2;
    CDStruct_d7010776 _field3;
};

struct GEOPDPhotoSizeFilterValue {
    unsigned int _field1;
    unsigned int _field2;
    CDStruct_d7010776 _field3;
};

struct GEOPDTimeRange {
    unsigned int _duration;
    unsigned int _startTime;
    CDStruct_beabc505 _has;
};

struct GEOPixelPoint {
    double _x;
    double _y;
    int _z;
    struct {
        unsigned int z:1;
    } _has;
};

struct GEOProblemDetail {
    int _field1;
    int _field2;
    CDStruct_d7010776 _field3;
};

struct GEORPFeatureHandleStyleAttribute {
    int _field1;
    int _field2;
};

struct GEORPVisibleTileKey {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEORegionalResourceIndex {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    CDStruct_8a1bf2a3 _field4;
};

struct GEOScreenResolution {
    double _height;
    double _width;
    CDStruct_db93fd0f _has;
};

struct GEOSessionID {
    unsigned long long _high;
    unsigned long long _low;
};

struct GEOThrottleKey {
    unsigned int _field1;
};

struct GEOTileKeyList {
    Class _field1;
    void *_field2;
    void *_field3;
    id _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct GEOTileLabelLine {
    double _field1;
    struct GEOLabelLineRange _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned short _field7;
};

struct GEOTileSetRegion {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct GEOTileUsage {
    unsigned int _field1;
    int _field2;
    CDStruct_d7010776 _field3;
};

struct GEOTimepoint {
    double _time;
    int _type;
    CDStruct_46f138b4 _has;
};

struct GEOTransitNodeFeature {
    CDStruct_87830318 _field1;
    struct _NSRange _field2;
    CDStruct_183601bc *_field3;
    struct GEOTransitNodeFeature *_field4;
    unsigned long long *_field5;
    unsigned long long *_field6;
    char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned short _field11;
    unsigned long long _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    float _field16;
    struct _NSRange _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    struct _NSRange _field21;
};

struct GEOVersionedTileSet {
    unsigned int _field1;
    unsigned int _field2;
};

struct GEOsslpmTileInfo {
    unsigned char _field1;
    char _field2;
    double _field3;
    double _field4;
};

struct GeoCoordinates {
    struct Longitude _field1;
    struct Latitude _field2;
};

struct GeoPolyline {
    struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>> _field1;
    int _field2;
};

struct GeometryPathElement;

struct Latitude {
    unsigned int _field1;
};

struct Longitude {
    unsigned int _field1;
};

struct MapAccessPointFeature;

struct MapEdge;

struct MapEdgeRoad;

struct MapEdgeTransit;

struct MapNodeTransit;

struct Matrix<float, 2, 1> {
    float _e[2];
};

struct Matrix<float, 4, 1> {
    float _e[4];
};

struct Message;

struct Path<std::__1::shared_ptr<geo::MapEdge>> {
    struct GeoCoordinates _field1;
    struct GeoCoordinates _field2;
    struct vector<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> _field3;
    struct vector<zilch::GeometryPathElement, std::__1::allocator<zilch::GeometryPathElement>> _field4;
    struct vector<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> _field5;
};

struct PolylineCoordinate {
    unsigned int index;
    float offset;
};

struct RequesterTileKeys;

struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    shared_ptr_035a2da2 _field4;
    struct GeoPolyline _field5;
    int _field6;
};

struct RouteMapMatchingSection {
    CDUnknownFunctionPointerType *_field1;
};

struct Sphere<float, 2> {
    Matrix_8746f91e _field1;
    float _field2;
};

struct Timestamp;

struct TransitEdgePiece {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    CDStruct_183601bc *_field3;
    struct _retain_ptr<GEOFeature *, geo::_retain_GEOFeature, geo::_release_GEOFeature, geo::_hash_ptr, geo::_equal_ptr> {
        CDUnknownFunctionPointerType *_field1;
        CDStruct_183601bc *_field2;
        struct _retain_GEOFeature _field3;
        struct _release_GEOFeature _field4;
    } _field4;
    unsigned int _field5;
    char _field6;
};

struct ZilchMapModel;

struct _GEOGenericContainer<_GEOTileKey, id, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, geo::GEOGenericContainerWeakReferenceTag, 0, 0, geo::GEOGenericContainerLockingTag, detail::_default_pointer_type> {
    struct mutex _lock;
    struct list<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>>> _list;
    struct unordered_map<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>>> _map;
    unsigned long long _maxCapacity;
    unsigned long long _maxCost;
    unsigned long long _currentCost;
    unsigned long long _currentCount;
};

struct _GEOTileKey {
    unsigned int z:6;
    unsigned int x:26;
    unsigned int y:26;
    unsigned int type:6;
    unsigned int pixelSize:8;
    unsigned int textScale:8;
    unsigned int provider:8;
    unsigned int expires:1;
    unsigned int reserved1:7;
    unsigned char reserved2[4];
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*> *__next_;
};

struct __list_iterator<LoadItem, void *> {
    struct __list_node_base<LoadItem, void *> *_field1;
};

struct __list_node_base<CacheItem, void *> {
    struct __list_node_base<CacheItem, void *> *__prev_;
    struct __list_node_base<CacheItem, void *> *__next_;
};

struct __list_node_base<LoadItem, void *> {
    struct __list_node_base<LoadItem, void *> *__prev_;
    struct __list_node_base<LoadItem, void *> *__next_;
};

struct __list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *> {
    struct __list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *> *__prev_;
    struct __list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *> *__next_;
};

struct __list_node_base<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> {
    struct __list_node_base<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> *__prev_;
    struct __list_node_base<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __wrap_iter<(anonymous namespace)::RequesterTileKeys *> {
    struct RequesterTileKeys *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct deque<ErrorInfo, std::__1::allocator<ErrorInfo>> {
    struct __split_buffer<ErrorInfo *, std::__1::allocator<ErrorInfo *>> {
        struct ErrorInfo **__first_;
        struct ErrorInfo **__begin_;
        struct ErrorInfo **__end_;
        struct __compressed_pair<ErrorInfo **, std::__1::allocator<ErrorInfo *>> {
            struct ErrorInfo **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<ErrorInfo>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<GEORoadEdge, std::__1::allocator<GEORoadEdge>> {
    struct __split_buffer<GEORoadEdge *, std::__1::allocator<GEORoadEdge *>> {
        CDStruct_183601bc **__first_;
        CDStruct_183601bc **__begin_;
        CDStruct_183601bc **__end_;
        struct __compressed_pair<GEORoadEdge **, std::__1::allocator<GEORoadEdge *>> {
            CDStruct_183601bc **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<GEORoadEdge>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<geo::TransitEdgePiece, std::__1::allocator<geo::TransitEdgePiece>> {
    struct __split_buffer<geo::TransitEdgePiece *, std::__1::allocator<geo::TransitEdgePiece *>> {
        struct TransitEdgePiece **__first_;
        struct TransitEdgePiece **__begin_;
        struct TransitEdgePiece **__end_;
        struct __compressed_pair<geo::TransitEdgePiece **, std::__1::allocator<geo::TransitEdgePiece *>> {
            struct TransitEdgePiece **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<geo::TransitEdgePiece>> {
        unsigned long long __value_;
    } __size_;
};

struct list<CacheItem, std::__1::allocator<CacheItem>> {
    struct __list_node_base<CacheItem, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CacheItem, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<LoadItem, std::__1::allocator<LoadItem>> {
    struct __list_node_base<LoadItem, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<LoadItem, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<_CacheRequester<void (^)(unsigned long long)>, std::__1::allocator<_CacheRequester<void (^)(unsigned long long)>>> {
    struct __list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<_CacheRequester<void (^)(unsigned long long)>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>>> {
    struct __list_node_base<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct map<unsigned int, _GEOAltitudeTriggerData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, _GEOAltitudeTriggerData>>> {
    struct __tree<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, _GEOAltitudeTriggerData>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __m_;
};

struct os_state_data_decoder_s {
    char _field1[64];
    char _field2[64];
};

struct os_state_data_s {
    unsigned int _field1;
    union {
        unsigned int :32;
        unsigned int _field1;
    } _field2;
    struct os_state_data_decoder_s _field3;
    char _field4[64];
    unsigned char _field5[0];
};

struct os_state_hints_s {
    unsigned int _field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct shared_ptr<addr_obj::AddressObject> {
    struct AddressObject *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>> {
    struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<geo::MapAccessPointFeature> {
    struct MapAccessPointFeature *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<geo::MapEdge> {
    struct MapEdge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<geo::MapEdgeRoad> {
    struct MapEdgeRoad *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<geo::MapEdgeTransit> {
    struct MapEdgeTransit *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<geo::MapNodeTransit> {
    struct MapNodeTransit *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<zilch::Message> {
    struct Message *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sqlite3_module {
    int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
};

struct unique_ptr<geo::DispatchTimer, std::__1::default_delete<geo::DispatchTimer>> {
    struct __compressed_pair<geo::DispatchTimer *, std::__1::default_delete<geo::DispatchTimer>> {
        struct DispatchTimer *__value_;
    } __ptr_;
};

struct unique_ptr<geo::RouteMapMatchingSection, std::__1::default_delete<geo::RouteMapMatchingSection>> {
    struct __compressed_pair<geo::RouteMapMatchingSection *, std::__1::default_delete<geo::RouteMapMatchingSection>> {
        struct RouteMapMatchingSection *__value_;
    } __ptr_;
};

struct unique_ptr<geo::ZilchMapModel, std::__1::default_delete<geo::ZilchMapModel>> {
    struct __compressed_pair<geo::ZilchMapModel *, std::__1::default_delete<geo::ZilchMapModel>> {
        struct ZilchMapModel *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, hashkey, eqkey, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, hashkey, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, eqkey, true>, std::__1::allocator<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, hashkey, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, eqkey, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::hash<GEOTileKey>, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::equal_to<GEOTileKey>, true>, std::__1::allocator<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::hash<GEOTileKey>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__hash_value_type<_GEOTileKey, std::__1::__list_iterator<geo::detail::_CacheItem<_GEOTileKey, id, _value_ptr>, void *>>, std::__1::equal_to<GEOTileKey>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, unsigned long, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<GEORoadEdge, std::__1::hash<GEORoadEdge>, std::__1::equal_to<GEORoadEdge>, std::__1::allocator<GEORoadEdge>> {
    struct __hash_table<GEORoadEdge, std::__1::hash<GEORoadEdge>, std::__1::equal_to<GEORoadEdge>, std::__1::allocator<GEORoadEdge>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*>, std::__1::allocator<std::__1::__hash_node<GEORoadEdge, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<GEORoadEdge, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<GEORoadEdge>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<GEORoadEdge>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
    struct __hash_table<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>, std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<GEOTileKey>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<GEOTileKey>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<geo::TransitEdgePiece, std::__1::hash<geo::TransitEdgePiece>, std::__1::equal_to<geo::TransitEdgePiece>, std::__1::allocator<geo::TransitEdgePiece>> {
    struct __hash_table<geo::TransitEdgePiece, std::__1::hash<geo::TransitEdgePiece>, std::__1::equal_to<geo::TransitEdgePiece>, std::__1::allocator<geo::TransitEdgePiece>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*>, std::__1::allocator<std::__1::__hash_node<geo::TransitEdgePiece, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<geo::TransitEdgePiece, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<geo::TransitEdgePiece>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<geo::TransitEdgePiece>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<(anonymous namespace)::RequesterTileKeys, std::__1::allocator<(anonymous namespace)::RequesterTileKeys>> {
    struct RequesterTileKeys *_field1;
    struct RequesterTileKeys *_field2;
    struct __compressed_pair<(anonymous namespace)::RequesterTileKeys *, std::__1::allocator<(anonymous namespace)::RequesterTileKeys>> {
        struct RequesterTileKeys *_field1;
    } _field3;
};

struct vector<(anonymous namespace)::Timestamp, std::__1::allocator<(anonymous namespace)::Timestamp>> {
    struct Timestamp *__begin_;
    struct Timestamp *__end_;
    struct __compressed_pair<(anonymous namespace)::Timestamp *, std::__1::allocator<(anonymous namespace)::Timestamp>> {
        struct Timestamp *__value_;
    } __end_cap_;
};

struct vector<GEOLocationCoordinate2D, std::__1::allocator<GEOLocationCoordinate2D>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<GEOLocationCoordinate2D *, std::__1::allocator<GEOLocationCoordinate2D>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<GEOVectorTilePoint, std::__1::allocator<GEOVectorTilePoint>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<GEOVectorTilePoint *, std::__1::allocator<GEOVectorTilePoint>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<geo::PolylineCoordinate, std::__1::allocator<geo::PolylineCoordinate>> {
    struct PolylineCoordinate *__begin_;
    struct PolylineCoordinate *__end_;
    struct __compressed_pair<geo::PolylineCoordinate *, std::__1::allocator<geo::PolylineCoordinate>> {
        struct PolylineCoordinate *__value_;
    } __end_cap_;
};

struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates>>;

struct vector<zilch::GeometryPathElement, std::__1::allocator<zilch::GeometryPathElement>> {
    struct GeometryPathElement *_field1;
    struct GeometryPathElement *_field2;
    struct __compressed_pair<zilch::GeometryPathElement *, std::__1::allocator<zilch::GeometryPathElement>> {
        struct GeometryPathElement *_field1;
    } _field3;
};

struct vector<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry *, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> {
    RoadPathElement_1a15aef6 *_field1;
    RoadPathElement_1a15aef6 *_field2;
    struct __compressed_pair<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>*, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> {
        RoadPathElement_1a15aef6 *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    char *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned long long _field8;
    char _field9;
    unsigned long long _field10;
    float _field11;
    unsigned long long _field12;
    id _field13;
    int _field14;
} CDStruct_e41bf108;

typedef struct {
    unsigned char _field1;
    float _field2;
} CDStruct_1c2d31f2;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_7523a67d;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int _field1;
    unsigned long long _field2;
} CDStruct_d008d4b8;

typedef struct {
    unsigned int _field1;
    double _field2;
} CDStruct_e4886f83;

typedef struct {
    unsigned int index;
    float offset;
} CDStruct_3f2a7a20;

typedef struct {
    unsigned int _field1;
    int _field2;
} CDStruct_1e94be47;

typedef struct {
    unsigned long long _field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
} CDStruct_2faeb20b;

typedef struct {
    unsigned long long stopID;
    unsigned long long hallID;
    unsigned long long stationID;
} CDStruct_79c5c966;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    long long _field2;
    _Bool _field3;
    _Bool _field4;
    unsigned long long _field5;
    char *_field6;
    char *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_9d4f1c73;

typedef struct {
    unsigned short _field1;
} CDStruct_f6a177db;

typedef struct {
    unsigned int _field1[4];
} CDStruct_58878026;

typedef struct {
    unsigned int *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_9f2792e4;

typedef struct {
    unsigned long long *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_62a50c50;

typedef struct {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_8bf61218;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
} CDStruct_29923528;

typedef struct {
    double *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_82f37d05;

typedef struct {
    float *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_fae3dc92;

typedef struct {
    int *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_95bda58d;

typedef struct {
    long long *list;
    unsigned long long count;
    unsigned long long size;
} CDStruct_5df41632;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct CDStruct_183601bc;

typedef struct {
    id _field1;
    unsigned int _field2;
    unsigned int _field3;
    struct _NSRange _field4;
    CDStruct_183601bc *_field5;
    CDStruct_183601bc *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct _NSRange _field9;
    struct _NSRange _field10;
    char _field11;
    struct _NSRange _field12;
    struct _NSRange _field13;
    struct _NSRange _field14[2];
    struct _NSRange _field15[2];
} CDStruct_bbd2305b;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    _Bool _field4;
    unsigned char _field5;
    char _field6;
    CDStruct_6e3f967a _field7;
} CDStruct_13165d7a;

typedef struct {
    unsigned char _field1;
    CDStruct_183601bc *_field2;
    unsigned long long _field3;
    float *_field4;
    struct _NSRange *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    CDStruct_183601bc *_field8;
    struct _NSRange *_field9;
} CDStruct_9df870a8;

typedef struct {
    unsigned char _field1;
    CDStruct_183601bc *_field2;
    unsigned long long _field3;
    float *_field4;
    struct _NSRange *_field5;
    unsigned long long _field6;
} CDStruct_3cfc3106;

typedef struct {
    unsigned char _field1;
    CDStruct_8bf61218 _field2;
    _Bool _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
} CDStruct_f3ac0f61;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    CDStruct_183601bc *_field3;
} CDStruct_3b01f0aa;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    CDStruct_183601bc *_field6;
    CDStruct_183601bc *_field7;
} CDStruct_91f75a7f;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    unsigned short _field3;
    unsigned int _field4;
    char *_field5;
    unsigned long long _field6;
    struct {
        unsigned int _field1;
        _Bool _field2;
    } _field7;
} CDStruct_effb527d;

typedef struct {
    CDStruct_e41bf108 _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned int _field6;
    float _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
} CDStruct_99ab1b21;

typedef struct {
    CDStruct_e41bf108 _field1;
    char *_field2;
    unsigned long long _field3;
} CDStruct_8aea5fca;

typedef struct {
    CDStruct_e41bf108 _field1;
    CDStruct_6e3f967a _field2;
    CDStruct_6e3f967a _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    short _field8;
    unsigned char _field9;
    CDStruct_183601bc *_field10;
    float _field11;
    float _field12;
    unsigned int _field13;
    unsigned char _field14;
    char _field15;
    char _field16;
    char _field17;
} CDStruct_87830318;

typedef struct {
    CDStruct_e41bf108 _field1;
    struct _NSRange _field2;
    float _field3;
} CDStruct_eb4b5c59;

typedef struct {
    struct _NSRange _field1;
    unsigned long long _field2;
    id _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    char *_field6;
    unsigned int _field7;
} CDStruct_8f1ffc8e;

typedef struct {
    CDStruct_7523a67d _field1;
    struct {
        unsigned int _field1;
        int _field2;
        float _field3;
        char _field4;
        char _field5;
        char _field6;
        char _field7;
        char _field8;
        struct {
            unsigned char _field1;
            unsigned short _field2;
        } _field9[16];
    } _field2;
} CDStruct_dab2d0bd;

typedef struct {
    CDStruct_87830318 _field1;
    unsigned long long _field2;
    unsigned char _field3;
    float _field4;
    unsigned short _field5;
    float _field6;
} CDStruct_bb918861;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    union {
        struct {
            unsigned int _field1;
            float _field2;
            float _field3;
            unsigned char _field4;
            unsigned char _field5;
        } _field1;
        struct {
            unsigned int _field1;
        } _field2;
        struct {
            unsigned int _field1;
            CDStruct_1c2d31f2 _field2;
            CDStruct_1c2d31f2 _field3;
        } _field3;
    } _field5;
    float _field6;
    float _field7;
} CDStruct_361566eb;

typedef struct {
    CDStruct_e41bf108 _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    union {
        struct {
            CDStruct_6e3f967a _field1;
            CDStruct_6e3f967a _field2;
        } _field1;
        struct {
            float _field1;
            float _field2;
            float _field3;
            float _field4;
        } _field2;
    } _field9;
    CDStruct_183601bc *_field10;
    struct {
        unsigned short _field1[2];
        unsigned short _field2[2];
    } _field11;
    unsigned char _field12;
    char _field13;
    unsigned char _field14;
    char _field15;
    char _field16;
    unsigned char _field17;
    char _field18;
    unsigned char _field19;
    struct _NSRange _field20;
    char _field21;
    unsigned int _field22;
} CDStruct_9c468c1c;

typedef struct {
    CDStruct_9c468c1c _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    char _field4;
    char _field5;
} CDStruct_dcb4d614;

typedef struct {
    CDStruct_9c468c1c _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    short _field4;
    CDStruct_6e3f967a _field5;
    unsigned long long _field6;
} CDStruct_9ec41b83;

typedef struct {
    CDStruct_9c468c1c _field1;
    unsigned long long _field2;
    CDStruct_6e3f967a _field3;
    char *_field4;
    char *_field5;
} CDStruct_895b28fb;

typedef struct {
    CDStruct_9c468c1c _field1;
    CDStruct_6e3f967a _field2;
    char _field3;
    char _field4;
    unsigned char _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    CDStruct_6e3f967a _field8;
    unsigned long long _field9;
} CDStruct_227fa288;

// Ambiguous groups
typedef struct {
    unsigned int connectEnd:1;
    unsigned int connectStart:1;
    unsigned int domainLookupEnd:1;
    unsigned int domainLookupStart:1;
    unsigned int fetchStart:1;
    unsigned int requestEnd:1;
    unsigned int requestStart:1;
    unsigned int responseEnd:1;
    unsigned int responseStart:1;
    unsigned int secureConnectEnd:1;
    unsigned int secureConnectStart:1;
    unsigned int protocolName:1;
    unsigned int resourceFetchType:1;
    unsigned int proxyConnection:1;
    unsigned int reusedConnection:1;
} CDStruct_63f2c340;

typedef struct {
    unsigned int color:1;
    unsigned int confidence:1;
    unsigned int decayTimeWindowInMinutes:1;
    unsigned int endOffset:1;
    unsigned int speedKph:1;
    unsigned int startOffset:1;
    unsigned int hidden:1;
} CDStruct_c254c6af;

typedef struct {
    unsigned int muid:1;
    unsigned int addressGeocodeAccuracyHint:1;
    unsigned int placeTypeHint:1;
    unsigned int resultProviderId:1;
} CDStruct_f8e30bfb;

typedef struct {
    unsigned int scanTimestamp:1;
    unsigned int age:1;
    unsigned int channel:1;
    unsigned int rssi:1;
} CDStruct_823dd0e8;

typedef struct {
    unsigned int navigationAudioFeedback:1;
    unsigned int durationOfTrip:1;
    unsigned int arrivedAtDestination:1;
} CDStruct_47a5651d;

typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_8a1bf2a3;

typedef struct {
    unsigned int debugServerLatencyMs:1;
    unsigned int status:1;
} CDStruct_00a28cb6;

typedef struct {
    unsigned int duration:1;
    unsigned int startTime:1;
} CDStruct_beabc505;

typedef struct {
    unsigned int height:1;
    unsigned int width:1;
} CDStruct_db93fd0f;

typedef struct {
    unsigned int junctionType:1;
    unsigned int maneuverType:1;
} CDStruct_efbf2325;

typedef struct {
    unsigned int maxResults:1;
    unsigned int highlightDiff:1;
} CDStruct_00ef3c1e;

typedef struct {
    unsigned int resultProviderId:1;
    unsigned int enablePartialClientization:1;
} CDStruct_2527025c;

typedef struct {
    unsigned int time:1;
    unsigned int type:1;
} CDStruct_46f138b4;

typedef struct {
    unsigned int :1;
    unsigned int :1;
} CDStruct_d7010776;

typedef struct {
    unsigned int dataSet:1;
} CDStruct_2fe9a6d4;

typedef struct {
    unsigned int featureId:1;
} CDStruct_b1448a5c;

typedef struct {
    unsigned int identifier:1;
} CDStruct_1dc6d826;

typedef struct {
    unsigned int isChainResultSet:1;
} CDStruct_5984ff81;

typedef struct {
    unsigned int maxResults:1;
} CDStruct_4f8569d5;

typedef struct {
    unsigned int muid:1;
} CDStruct_e99c65f7;

typedef struct {
    unsigned int operatingHoursRange:1;
} CDStruct_65124bb5;

typedef struct {
    unsigned int photoType:1;
} CDStruct_86c1f53f;

typedef struct {
    unsigned int requestType:1;
} CDStruct_7c66fec0;

typedef struct {
    unsigned int statusCode:1;
} CDStruct_bcb1eac0;

typedef struct {
    unsigned int timestamp:1;
} CDStruct_b5306035;

typedef struct {
    unsigned int transportType:1;
} CDStruct_a995201b;

typedef struct {
    unsigned int travelTime:1;
} CDStruct_36597415;

typedef struct {
    unsigned int type:1;
} CDStruct_f953fb60;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct {
    double remainingTime;
    double remainingDistance;
} CDStruct_a70066d4;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_34734122 origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct Box<float, 2> {
    Matrix_8746f91e _field1;
    Matrix_8746f91e _field2;
} Box_3fb92e00;

typedef struct Matrix<float, 2, 1> {
    float _e[2];
} Matrix_8746f91e;

typedef struct Matrix<float, 4, 1> {
    float _e[4];
} Matrix_5173352a;

typedef struct Path<std::__1::shared_ptr<geo::MapEdge>> {
    struct GeoCoordinates _field1;
    struct GeoCoordinates _field2;
    struct vector<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>, std::__1::allocator<zilch::RoadPathElement<std::__1::shared_ptr<geo::MapEdge>>>> _field3;
    struct vector<zilch::GeometryPathElement, std::__1::allocator<zilch::GeometryPathElement>> _field4;
    struct vector<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry, std::__1::allocator<zilch::Path<std::__1::shared_ptr<geo::MapEdge>>::Entry>> _field5;
} Path_7b702847;

typedef struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    shared_ptr_035a2da2 _field4;
    struct GeoPolyline _field5;
    int _field6;
} RoadPathElement_1a15aef6;

typedef struct Sphere<float, 2> {
    Matrix_8746f91e _field1;
    float _field2;
} Sphere_dfb3aa99;

typedef struct __list_iterator<LoadItem, void *> {
    struct __list_node_base<LoadItem, void *> *_field1;
} __list_iterator_aef25af4;

typedef struct __wrap_iter<(anonymous namespace)::RequesterTileKeys *> {
    struct RequesterTileKeys *_field1;
} __wrap_iter_9a08789a;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct shared_ptr<geo::MapAccessPointFeature> {
    struct MapAccessPointFeature *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4792c490;

typedef struct shared_ptr<geo::MapEdge> {
    struct MapEdge *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_035a2da2;

typedef struct shared_ptr<geo::MapEdgeRoad> {
    struct MapEdgeRoad *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_92bc9970;

typedef struct shared_ptr<geo::MapEdgeTransit> {
    struct MapEdgeTransit *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_24ebf3c0;

typedef struct shared_ptr<geo::MapNodeTransit> {
    struct MapNodeTransit *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_52e51bdf;

typedef struct shared_ptr<zilch::Message> {
    struct Message *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_27244a92;

typedef struct unordered_set<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
    struct __hash_table<_GEOTileKey, std::__1::hash<GEOTileKey>, std::__1::equal_to<GEOTileKey>, std::__1::allocator<_GEOTileKey>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*>, std::__1::allocator<std::__1::__hash_node<_GEOTileKey, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_GEOTileKey, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<GEOTileKey>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<GEOTileKey>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_684af1c2;

typedef struct vector<(anonymous namespace)::RequesterTileKeys, std::__1::allocator<(anonymous namespace)::RequesterTileKeys>> {
    struct RequesterTileKeys *_field1;
    struct RequesterTileKeys *_field2;
    struct __compressed_pair<(anonymous namespace)::RequesterTileKeys *, std::__1::allocator<(anonymous namespace)::RequesterTileKeys>> {
        struct RequesterTileKeys *_field1;
    } _field3;
} vector_49336e52;

#pragma mark Named Unions

union _GEOPlaceDataComponentKey {
    struct {
        unsigned long long _field1;
        unsigned short _field2;
        unsigned short _field3;
        unsigned int _field4;
    } _field1;
    CDStruct_7523a67d _field2;
};

