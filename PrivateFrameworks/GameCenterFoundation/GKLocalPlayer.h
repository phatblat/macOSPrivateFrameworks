//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <GameCenterFoundation/GKPlayer.h>

#import "GKSavedGameListener.h"
#import "NSCoding.h"
#import "NSSecureCoding.h"

@class GKEventEmitter<GKLocalPlayerListenerPrivate>, GKInvite, NSInvocation, NSString, NSWindow, UIAlertView;

@interface GKLocalPlayer : GKPlayer <NSCoding, NSSecureCoding, GKSavedGameListener>
{
    BOOL _authenticated;
    BOOL _didAuthenticate;
    BOOL _validatingAccount;
    BOOL _enteringForeground;
    BOOL _newToGameCenter;
    BOOL _showingInGameUI;
    BOOL _shouldPreserveOnboardingUI;
    GKInvite *_acceptedInvite;
    CDUnknownBlockType _validateAccountCompletionHandler;
    UIAlertView *_loginAlertView;
    UIAlertView *_currentAlert;
    NSInvocation *_currentFriendRequestInvocation;
    long long _environment;
    GKEventEmitter<GKLocalPlayerListenerPrivate> *_eventEmitter;
    double _authStartTimeStamp;
    unsigned long long _authenticationType;
    NSWindow *_alertWindow;
}

+ (void)authenticateWithUsername:(id)arg1 password:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)authenticatedLocalPlayersDidChange:(id)arg1 complete:(CDUnknownBlockType)arg2;
+ (void)_sendPlayerAuthAPINotificationForLoggedInPlayerInternals:(id)arg1 loggedOutPlayerInternals:(id)arg2 oldPrimary:(id)arg3 newPrimary:(id)arg4;
+ (id)_localPlayersFromInternals:(id)arg1 authenticated:(BOOL)arg2;
+ (id)localPlayerForCredential:(id)arg1;
+ (id)authenticatedLocalPlayersWithStatus:(unsigned long long)arg1;
+ (id)authenticatedLocalPlayersFiltered:(long long)arg1;
+ (id)authenticatedLocalPlayers;
+ (id)localPlayers;
+ (id)localPlayer;
+ (id)local;
+ (void)performAsync:(CDUnknownBlockType)arg1;
+ (void)performSync:(CDUnknownBlockType)arg1;
+ (id)localPlayerAccessQueue;
+ (BOOL)supportsSecureCoding;
@property(retain, nonatomic) NSWindow *alertWindow; // @synthesize alertWindow=_alertWindow;
@property(nonatomic) unsigned long long authenticationType; // @synthesize authenticationType=_authenticationType;
@property(nonatomic) double authStartTimeStamp; // @synthesize authStartTimeStamp=_authStartTimeStamp;
@property(retain, nonatomic) GKEventEmitter<GKLocalPlayerListenerPrivate> *eventEmitter; // @synthesize eventEmitter=_eventEmitter;
@property(nonatomic, getter=isNewToGameCenter) BOOL newToGameCenter; // @synthesize newToGameCenter=_newToGameCenter;
@property(readonly, nonatomic) long long environment; // @synthesize environment=_environment;
@property(nonatomic) BOOL enteringForeground; // @synthesize enteringForeground=_enteringForeground;
@property(nonatomic) BOOL validatingAccount; // @synthesize validatingAccount=_validatingAccount;
@property(nonatomic) BOOL didAuthenticate; // @synthesize didAuthenticate=_didAuthenticate;
@property(retain, nonatomic) NSInvocation *currentFriendRequestInvocation; // @synthesize currentFriendRequestInvocation=_currentFriendRequestInvocation;
@property(nonatomic) UIAlertView *currentAlert; // @synthesize currentAlert=_currentAlert;
@property(retain, nonatomic) UIAlertView *loginAlertView; // @synthesize loginAlertView=_loginAlertView;
@property(copy, nonatomic) CDUnknownBlockType validateAccountCompletionHandler; // @synthesize validateAccountCompletionHandler=_validateAccountCompletionHandler;
@property(retain, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;
@property(getter=isAuthenticated) BOOL authenticated; // @synthesize authenticated=_authenticated;
- (void)reportAuthenticationLoginCanceled;
- (void)reportAuthenticatingWithAuthKitInvocation;
- (void)reportAuthenticatingWithGreenBuddyInvocation;
- (void)reportAuthenticationErrorNoInternetConnection;
- (void)reportAuthenticationFailedForPlayer;
- (void)reportAuthenticationPlayerAuthenticated;
- (void)reportAuthenticationStartForPlayer;
- (BOOL)shouldDisplayWelcomeBannerForPlayer:(id)arg1 lastAuthDate:(id)arg2 remoteUI:(BOOL)arg3 timeBetweenBanners:(double)arg4;
- (void)acceptFriendRequestWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)cancelFriendRequestWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)createFriendRequestWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)getPlayerIDFromFriendCode:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)generateIdentityVerificationSignatureWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadDefaultLeaderboardCategoryIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadDefaultLeaderboardIdentifierWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setDefaultLeaderboardCategoryID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setDefaultLeaderboardIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)hasEmailAddress:(id)arg1;
- (void)inviteeDeclinedGameInviteWithNotification:(id)arg1;
- (void)inviteeAcceptedGameInviteWithNotification:(id)arg1;
- (void)cancelGameInvite:(id)arg1;
- (void)fetchCustomTournamentInvite;
- (void)fetchTurnBasedEvent;
- (void)fetchMultiplayerGameInvite;
- (void)_startAuthenticationForExistingPrimaryPlayer;
- (void)removeAllFriendsWithBlock:(CDUnknownBlockType)arg1;
- (void)removeFriend:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)authenticateWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(copy) CDUnknownBlockType authenticateHandler;
- (void)callAuthHandlerWithError:(id)arg1;
@property(nonatomic) BOOL insideAuthenticatorInvocation;
- (void)updateLoginStatus:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)signOutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showSettings;
@property(readonly, nonatomic, getter=isAvatarEditingRestricted) BOOL avatarEditingRestricted;
- (void)loadFriendsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadRecentPlayersWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadChallengableFriendsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadFriendPlayersWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_loadFriendPlayersWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)friends;
- (void)updateFromLocalPlayer:(id)arg1;
@property(readonly, nonatomic, getter=isMultiplayerGamingRestricted) BOOL multiplayerGamingRestricted;
- (id)displayNameWithOptions:(unsigned char)arg1;
@property(nonatomic) BOOL shouldPreserveOnboardingUI; // @synthesize shouldPreserveOnboardingUI=_shouldPreserveOnboardingUI;
- (void)setStatus:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)setStatus:(id)arg1;
@property(nonatomic, getter=isShowingInGameUI) BOOL showingInGameUI; // @synthesize showingInGameUI=_showingInGameUI;
@property(nonatomic) BOOL appIsInBackground;
- (void)dealloc;
- (BOOL)scopedIDsArePersistent;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)unregisterAllListeners;
- (void)unregisterListener:(id)arg1;
- (void)registerListener:(id)arg1;
- (void)setupForCloudSavedGames;
- (void)resolveConflictingSavedGames:(id)arg1 withData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)deleteSavedGamesWithName:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)saveGameData:(id)arg1 withName:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchSavedGamesWithCompletionHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(retain, nonatomic) NSString *accountName; // @dynamic accountName;
@property(readonly, nonatomic) BOOL allowNearbyMultiplayer; // @dynamic allowNearbyMultiplayer;
@property(readonly, nonatomic, getter=isAuthenticating) BOOL authenticating; // @dynamic authenticating;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic, getter=isDefaultNickname) BOOL defaultNickname; // @dynamic defaultNickname;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSString *facebookUserID; // @dynamic facebookUserID;
@property(readonly, nonatomic, getter=isFindable) BOOL findable; // @dynamic findable;
@property(retain, nonatomic) NSString *firstName; // @dynamic firstName;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *iCloudUserID; // @dynamic iCloudUserID;
@property(retain, nonatomic) NSString *lastName; // @dynamic lastName;
@property(nonatomic, getter=isPurpleBuddyAccount) BOOL purpleBuddyAccount; // @dynamic purpleBuddyAccount;
@property(readonly) Class superclass;
@property(readonly, getter=isUnderage) BOOL underage; // @dynamic underage;

@end

