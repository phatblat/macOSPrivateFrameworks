//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SMNStreamMuxerDelegate.h"

@class IASThreadSafeEvent, NSArray, NSData, NSFileHandle, NSNumber, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSObject<OS_dispatch_source>, NSObject<SMNNetworkSecurityProvider>, NSSet, NSString, SMNNetworkSession, SMNNetworkStream, SMNNetworkStreamMuxer;

@interface SMNConnection : NSObject <SMNStreamMuxerDelegate>
{
    BOOL _server;
    BOOL _secretPasswordValidated;
    BOOL _hasDisconnected;
    int _localInterfaceType;
    int _remoteInterfaceType;
    unsigned long long _protocolVersion;
    NSData *_remoteAddressData;
    NSArray *_remoteAddresses;
    NSNumber *_connectionTimeout;
    NSNumber *_samplingTimeout;
    double _sample;
    NSString *_remoteInterfaceName;
    NSString *_connectionName;
    NSSet *_supportedActionCommands;
    SMNNetworkSession *_session;
    SMNNetworkStreamMuxer *_muxer;
    NSFileHandle *_controlSocketFileHandle;
    NSObject<SMNNetworkSecurityProvider> *_controlSecurityProvider;
    SMNNetworkStream *_controlStream;
    NSObject<OS_dispatch_queue> *_controlQueue;
    NSObject<OS_dispatch_queue> *_controlWatchdogQueue;
    NSObject<OS_dispatch_queue> *_controlMonitorQueue;
    NSObject<OS_dispatch_source> *_pingTimer;
    IASThreadSafeEvent *_samplingComplete;
    NSFileHandle *_payloadSocketFileHandle;
    NSFileHandle *_payloadConnectSocketFileHandle;
    NSObject<SMNNetworkSecurityProvider> *_payloadSecurityProvider;
    NSString *_payloadConnectionValidation;
    NSObject<OS_dispatch_semaphore> *_payloadChannelRequestSemaphore;
    NSString *_localInterfaceName;
    NSSet *_supportedControlCommands;
    struct timeval _lastSignOfLife;
}

@property(retain) NSSet *supportedControlCommands; // @synthesize supportedControlCommands=_supportedControlCommands;
@property(retain) NSString *localInterfaceName; // @synthesize localInterfaceName=_localInterfaceName;
@property(retain) NSObject<OS_dispatch_semaphore> *payloadChannelRequestSemaphore; // @synthesize payloadChannelRequestSemaphore=_payloadChannelRequestSemaphore;
@property(retain) NSString *payloadConnectionValidation; // @synthesize payloadConnectionValidation=_payloadConnectionValidation;
@property(retain) NSObject<SMNNetworkSecurityProvider> *payloadSecurityProvider; // @synthesize payloadSecurityProvider=_payloadSecurityProvider;
@property(retain) NSFileHandle *payloadConnectSocketFileHandle; // @synthesize payloadConnectSocketFileHandle=_payloadConnectSocketFileHandle;
@property(retain) NSFileHandle *payloadSocketFileHandle; // @synthesize payloadSocketFileHandle=_payloadSocketFileHandle;
@property(retain) IASThreadSafeEvent *samplingComplete; // @synthesize samplingComplete=_samplingComplete;
@property(retain) NSObject<OS_dispatch_source> *pingTimer; // @synthesize pingTimer=_pingTimer;
@property BOOL hasDisconnected; // @synthesize hasDisconnected=_hasDisconnected;
@property(retain) NSObject<OS_dispatch_queue> *controlMonitorQueue; // @synthesize controlMonitorQueue=_controlMonitorQueue;
@property(retain) NSObject<OS_dispatch_queue> *controlWatchdogQueue; // @synthesize controlWatchdogQueue=_controlWatchdogQueue;
@property(retain) NSObject<OS_dispatch_queue> *controlQueue; // @synthesize controlQueue=_controlQueue;
@property(retain) SMNNetworkStream *controlStream; // @synthesize controlStream=_controlStream;
@property(retain) NSObject<SMNNetworkSecurityProvider> *controlSecurityProvider; // @synthesize controlSecurityProvider=_controlSecurityProvider;
@property(retain) NSFileHandle *controlSocketFileHandle; // @synthesize controlSocketFileHandle=_controlSocketFileHandle;
@property BOOL secretPasswordValidated; // @synthesize secretPasswordValidated=_secretPasswordValidated;
@property(retain) SMNNetworkStreamMuxer *muxer; // @synthesize muxer=_muxer;
@property(getter=isServer) BOOL server; // @synthesize server=_server;
@property __weak SMNNetworkSession *session; // @synthesize session=_session;
@property(retain) NSSet *supportedActionCommands; // @synthesize supportedActionCommands=_supportedActionCommands;
@property(retain) NSString *connectionName; // @synthesize connectionName=_connectionName;
@property(retain) NSString *remoteInterfaceName; // @synthesize remoteInterfaceName=_remoteInterfaceName;
@property double sample; // @synthesize sample=_sample;
@property(retain) NSNumber *samplingTimeout; // @synthesize samplingTimeout=_samplingTimeout;
@property(retain) NSNumber *connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property(retain) NSArray *remoteAddresses; // @synthesize remoteAddresses=_remoteAddresses;
@property(retain) NSData *remoteAddressData; // @synthesize remoteAddressData=_remoteAddressData;
@property int remoteInterfaceType; // @synthesize remoteInterfaceType=_remoteInterfaceType;
@property int localInterfaceType; // @synthesize localInterfaceType=_localInterfaceType;
@property unsigned long long protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property struct timeval lastSignOfLife; // @synthesize lastSignOfLife=_lastSignOfLife;
- (void).cxx_destruct;
- (void)muxerInterrupted:(id)arg1;
- (void)muxer:(id)arg1 wroteDataToStream:(id)arg2;
- (void)muxer:(id)arg1 streamClosing:(id)arg2;
- (void)muxer:(id)arg1 newIncomingStream:(id)arg2;
- (void)startControlWatchdog;
- (id)validateCommandList:(id)arg1;
- (void)startControlMonitor;
- (BOOL)readCommandFromControl:(unsigned int *)arg1 payload:(id *)arg2;
- (BOOL)writeCommandToControl:(unsigned int)arg1 payload:(id)arg2;
- (void)connectPayloadChannelOnPort:(unsigned short)arg1 withValidationKey:(id)arg2;
- (void)openPayloadChannel;
- (void)resignActiveConnection;
- (BOOL)becomeActiveConnection;
- (void)initializeControlStream;
- (long long)secondsSinceLastActivity;
- (void)externalRegisterActivity;
- (void)registerActivity;
- (void)doLegacySample;
- (BOOL)samplingAfterWaitingForCompletionUpTo:(double)arg1;
- (void)startSampling;
- (unsigned long long)sampleSizeInMB;
@property(getter=isSampling) BOOL sampling;
- (void)closeStream:(id)arg1;
- (id)newStreamWithName:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) BOOL isEndToEndWireless;
- (int)interfaceTypeForInterfaceName:(id)arg1;
- (id)_determineLocalInterface:(int)arg1;
- (BOOL)doLegacyControlHandshake:(BOOL)arg1;
- (BOOL)handshakeControl;
- (void)close;
- (void)destroy;
- (BOOL)startWithTimeout:(BOOL)arg1;
- (void)dealloc;
- (id)initWithSocketFileHandle:(id)arg1 forSession:(id)arg2 asServer:(BOOL)arg3 connectionName:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

