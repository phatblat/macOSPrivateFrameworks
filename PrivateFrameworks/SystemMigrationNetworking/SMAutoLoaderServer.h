//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SMNNetworkSessionDelegateProtocol.h"

@class NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSURL, SMNNetworkSession;

@interface SMAutoLoaderServer : NSObject <SMNNetworkSessionDelegateProtocol>
{
    BOOL _networkServerShouldBeUp;
    NSString *_secretPassword;
    CDUnknownBlockType _statusUpdateBlock;
    NSMutableDictionary *_txtRecord;
    NSObject<OS_dispatch_queue> *_requestQueue;
    NSURL *_systemPath;
    NSObject<OS_dispatch_source> *_batteryLogSource;
    SMNNetworkSession *_session;
}

+ (id)sha256hashString:(id)arg1 withSalt:(id)arg2;
+ (id)supportedCommandIDs;
@property(retain) SMNNetworkSession *session; // @synthesize session=_session;
@property(retain) NSObject<OS_dispatch_source> *batteryLogSource; // @synthesize batteryLogSource=_batteryLogSource;
@property(retain) NSURL *systemPath; // @synthesize systemPath=_systemPath;
@property BOOL networkServerShouldBeUp; // @synthesize networkServerShouldBeUp=_networkServerShouldBeUp;
@property(retain) NSObject<OS_dispatch_queue> *requestQueue; // @synthesize requestQueue=_requestQueue;
@property(retain) NSMutableDictionary *txtRecord; // @synthesize txtRecord=_txtRecord;
@property(copy) CDUnknownBlockType statusUpdateBlock; // @synthesize statusUpdateBlock=_statusUpdateBlock;
@property(retain) NSString *secretPassword; // @synthesize secretPassword=_secretPassword;
- (void).cxx_destruct;
- (BOOL)shouldAcceptPeerCertificates:(id)arg1;
- (id)localCertificates;
- (void)session:(id)arg1 benchmarkedSoftAP:(double)arg2 infrastructureSample:(double)arg3;
- (BOOL)session:(id)arg1 shouldAcceptPeerWithAddress:(id)arg2;
- (void)session:(id)arg1 streamClosing:(id)arg2;
- (void)session:(id)arg1 newIncomingStream:(id)arg2;
- (void)sessionInterrupted:(id)arg1 connection:(id)arg2 active:(BOOL)arg3 didReplaceActiveConnection:(BOOL)arg4;
- (void)sessionIsActive:(id)arg1;
- (void)session:(id)arg1 promotedNewConnectionToActive:(id)arg2 andResignedConnection:(id)arg3;
- (void)session:(id)arg1 finishedSamplingConnection:(id)arg2;
- (void)sessionHasFasterConnectionAvailable:(id)arg1;
- (void)sessionDeterminingFastestConnection:(id)arg1;
- (void)sessionDetectedNetworkConfigurationChanged:(id)arg1;
- (void)session:(id)arg1 didFailConnectionToPeerNamed:(id)arg2;
- (void)session:(id)arg1 resolvedPeerNamed:(id)arg2 txtRecord:(id)arg3;
- (void)session:(id)arg1 failedToResolvePeerNamed:(id)arg2 errorCode:(long long)arg3;
- (void)session:(id)arg1 peerDisappeared:(id)arg2;
- (void)session:(id)arg1 discoveredPeerNamed:(id)arg2;
- (void)session:(id)arg1 peerNamed:(id)arg2 updatedTxtRecord:(id)arg3;
- (void)handleAction:(id)arg1 fromStream:(id)arg2;
- (id)actionFromStream:(id)arg1;
- (void)generateTXTRecord;
- (void)stop;
- (void)start;
- (id)initWithName:(id)arg1 usingSourcePath:(id)arg2;
- (id)initWithName:(id)arg1 usingSourcePath:(id)arg2 type:(id)arg3 usingSSL:(BOOL)arg4;
- (id)initWithName:(id)arg1;

@end

