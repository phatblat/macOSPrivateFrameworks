//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NWPrettyDescription.h"

@class NSArray, NSObject<OS_nw_path>, NSString, NSUUID, NWBrowseDescriptor, NWEndpoint, NWInterface, NWParameters;

@interface NWPath : NSObject <NWPrettyDescription>
{
    NSObject<OS_nw_path> *_internalPath;
}

+ (id)pathWithProtocolBufferData:(id)arg1;
+ (id)createStringFromStatus:(long long)arg1;
+ (id)pathForClientID:(id)arg1;
+ (id)allClientIDs;
@property(readonly) NSObject<OS_nw_path> *internalPath; // @synthesize internalPath=_internalPath;
- (void).cxx_destruct;
- (id)createProtocolBufferObject;
@property(readonly, nonatomic, getter=isEligibleForCrazyIvan46) BOOL eligibleForCrazyIvan46;
@property(readonly, nonatomic) BOOL supportsDNS;
@property(readonly, nonatomic) BOOL supportsIPv6;
@property(readonly, nonatomic) BOOL supportsIPv4;
@property(readonly, nonatomic) NSArray *proxySettings;
@property(readonly, nonatomic) BOOL fallbackEligible;
@property(readonly, nonatomic) BOOL fallbackIsWeak;
@property(readonly, nonatomic) unsigned int fallbackInterfaceIndex;
@property(readonly, nonatomic) NWParameters *derivedParameters;
@property(readonly, nonatomic) NWBrowseDescriptor *browseDescriptor;
@property(readonly, nonatomic) BOOL hasBrowseDescriptor;
@property(readonly, nonatomic) NWInterface *connectedInterface;
@property(readonly, nonatomic) NWEndpoint *effectiveRemoteEndpoint;
@property(readonly, nonatomic) NWEndpoint *effectiveLocalEndpoint;
@property(readonly, nonatomic) NWEndpoint *endpoint;
@property(readonly, nonatomic) NWParameters *parameters;
@property(readonly, nonatomic, getter=isRoaming) BOOL roaming;
@property(readonly, nonatomic) unsigned int policyID;
@property(readonly, nonatomic, getter=isDirect) BOOL direct;
@property(readonly, nonatomic, getter=isLocal) BOOL local;
@property(readonly, nonatomic) unsigned int filterControlUnit;
@property(readonly, nonatomic, getter=isFiltered) BOOL filtered;
@property(readonly, nonatomic) int dnsServiceID;
- (BOOL)hasUnsatisfiedFallbackAgent;
- (BOOL)unsatisfiedVoluntaryAgentMatchesAddress:(id)arg1 triggerImmediately:(char *)arg2;
- (id)copyFlowDivertToken;
@property(readonly, nonatomic) unsigned int flowDivertControlUnit;
@property(readonly, nonatomic, getter=isFlowDivert) BOOL flowDivert;
@property(readonly, nonatomic) NSString *reasonDescription;
@property(readonly, nonatomic) long long reason;
@property(readonly, nonatomic) unsigned long long secondsSinceInterfaceChange;
@property(readonly, nonatomic) long long maximumDatagramSize;
@property(readonly, nonatomic) long long mtu;
@property(readonly, nonatomic) NSArray *dnsSearchDomains;
@property(readonly, nonatomic) NSArray *dnsServersAsStrings;
@property(readonly, nonatomic) NSArray *dnsServers;
@property(readonly, nonatomic) NSArray *flows;
@property(readonly, nonatomic) NWInterface *fallbackInterface;
- (id)delegateInterface;
@property(readonly, nonatomic) NWInterface *interface;
@property(readonly, nonatomic) NWInterface *scopedInterface;
- (id)inactiveNetworkAgentUUIDsOnlyVoluntary:(BOOL)arg1;
- (id)genericNetworkAgentsWithDomain:(id)arg1 type:(id)arg2;
- (id)networkAgentsOfType:(Class)arg1;
- (BOOL)usesNetworkAgent:(id)arg1;
- (BOOL)usesNetworkAgentType:(Class)arg1;
- (BOOL)usesInterfaceType:(long long)arg1;
- (BOOL)isLinkQualityAbort;
- (BOOL)shouldProbeConnectivity;
@property(readonly, nonatomic, getter=isViable) BOOL viable;
@property(readonly, nonatomic, getter=isListener) BOOL listener;
@property(readonly, nonatomic, getter=isExpensive) BOOL expensive;
@property(readonly, nonatomic) NSUUID *clientID;
@property(readonly, nonatomic) long long status;
- (BOOL)isEqualToPath:(id)arg1;
@property(readonly, copy, nonatomic) NSString *privateDescription;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 showFullContent:(BOOL)arg2;
@property(readonly, nonatomic) NSString *statusAsString;
- (id)initWithPath:(id)arg1;
- (id)init;

@end

