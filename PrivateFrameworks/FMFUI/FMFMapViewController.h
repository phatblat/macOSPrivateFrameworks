//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSViewController.h"

#import "FMFAppearanceDelegate.h"
#import "FMFMapOptionsViewControllerDelegate.h"
#import "FMFMapViewDelegateInternalDelegate.h"
#import "FMFNoLocationViewDelegate.h"
#import "FMFSessionDelegateInternal.h"

@class FMFMapViewDelegateInternal, FMFNoLocationView, FMFSession, FMFTitleViewMac, MKMapView, NSColor, NSSet, NSString;

@interface FMFMapViewController : NSViewController <FMFSessionDelegateInternal, FMFMapViewDelegateInternalDelegate, FMFNoLocationViewDelegate, FMFMapOptionsViewControllerDelegate, FMFAppearanceDelegate>
{
    BOOL _shouldZoomToFitNewLocations;
    BOOL _shouldZoomToFitMeAndLocations;
    BOOL _showFloatingMapLocationButton;
    BOOL _isMapCenteringDisabled;
    BOOL _isSimpleMap;
    BOOL __refreshingIsPaused;
    BOOL __blockDidReceiveAnimation;
    BOOL __isRenderingInitialMap;
    BOOL _viewWillAppearCalled;
    BOOL _alwaysShowAccuracy;
    BOOL _wasToolbarPreviouslyHidden;
    id <FMFMapViewControllerDelegate> _delegate;
    MKMapView *_mapView;
    NSColor *_annotationTintColor;
    FMFSession *_fmfSession;
    FMFMapViewDelegateInternal *_mapViewDelegate;
    NSSet *__preloadedHandles;
    FMFNoLocationView *_noLocationView;
    NSSet *__internalHandlesShowingLocations;
    FMFTitleViewMac *_titleView;
    struct NSEdgeInsets _edgeInsets;
}

+ (struct CGSize)annotationImageSize;
@property(retain, nonatomic) FMFTitleViewMac *titleView; // @synthesize titleView=_titleView;
@property(nonatomic) BOOL wasToolbarPreviouslyHidden; // @synthesize wasToolbarPreviouslyHidden=_wasToolbarPreviouslyHidden;
@property(nonatomic) BOOL alwaysShowAccuracy; // @synthesize alwaysShowAccuracy=_alwaysShowAccuracy;
@property(nonatomic) BOOL viewWillAppearCalled; // @synthesize viewWillAppearCalled=_viewWillAppearCalled;
@property(nonatomic) BOOL _isRenderingInitialMap; // @synthesize _isRenderingInitialMap=__isRenderingInitialMap;
@property(nonatomic) BOOL _blockDidReceiveAnimation; // @synthesize _blockDidReceiveAnimation=__blockDidReceiveAnimation;
@property(nonatomic) BOOL _refreshingIsPaused; // @synthesize _refreshingIsPaused=__refreshingIsPaused;
@property(retain, nonatomic) NSSet *_internalHandlesShowingLocations; // @synthesize _internalHandlesShowingLocations=__internalHandlesShowingLocations;
@property(retain, nonatomic) FMFNoLocationView *noLocationView; // @synthesize noLocationView=_noLocationView;
@property(nonatomic) BOOL isSimpleMap; // @synthesize isSimpleMap=_isSimpleMap;
@property(retain, nonatomic) NSSet *_preloadedHandles; // @synthesize _preloadedHandles=__preloadedHandles;
@property(retain, nonatomic) FMFMapViewDelegateInternal *mapViewDelegate; // @synthesize mapViewDelegate=_mapViewDelegate;
@property(retain, nonatomic) FMFSession *fmfSession; // @synthesize fmfSession=_fmfSession;
@property(copy) NSColor *annotationTintColor; // @synthesize annotationTintColor=_annotationTintColor;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property struct NSEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic) BOOL isMapCenteringDisabled; // @synthesize isMapCenteringDisabled=_isMapCenteringDisabled;
@property BOOL showFloatingMapLocationButton; // @synthesize showFloatingMapLocationButton=_showFloatingMapLocationButton;
@property BOOL shouldZoomToFitMeAndLocations; // @synthesize shouldZoomToFitMeAndLocations=_shouldZoomToFitMeAndLocations;
@property BOOL shouldZoomToFitNewLocations; // @synthesize shouldZoomToFitNewLocations=_shouldZoomToFitNewLocations;
@property __weak id <FMFMapViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)fmfAppearanceChanged:(id)arg1;
- (void)updateAllAnnotationsDueToAddressBookUpdate;
- (id)_internalAnnotationTintColor;
- (id)_selectedHandleAnnotation;
- (void)_updateTitleViewLocation:(id)arg1;
- (id)titleViewForSelectedHandle;
- (id)annotationImageForAnnotation:(id)arg1 andHandle:(id)arg2 large:(BOOL)arg3;
- (void)mapViewDidFinishRenderingMap;
- (void)didReceiveLocationForDelegateCallback:(id)arg1;
- (void)didUpdateUserLocation:(id)arg1;
- (void)reZoomToFit;
- (void)regionDidChangeAnimated:(BOOL)arg1;
- (void)regionWillChangeAnimated:(BOOL)arg1;
- (void)didDeselectLocation:(id)arg1;
- (void)didSelectLocation:(id)arg1;
- (void)removeAllFriendLocationsFromMap;
- (void)didStopAbilityToGetLocationForHandle:(id)arg1;
- (void)didReceiveLocation:(id)arg1;
- (void)zoomAndSelectHandle:(id)arg1;
- (void)zoomToFit:(BOOL)arg1;
- (void)zoomToFit;
- (void)stopShowingLocationsForHandles:(id)arg1;
- (void)startShowingLocationsForHandles:(id)arg1;
@property(copy) NSSet *handlesShowingLocations;
- (void)resumeRefreshingLocations;
- (void)stopRefreshingLocations;
- (void)_dismiss:(id)arg1;
- (void)openInMapsButtonTapped:(id)arg1;
- (void)mapTypeChanged:(unsigned long long)arg1;
- (BOOL)sessionContainsHandle:(id)arg1;
- (void)removeAnnotationsFromMapForHandle:(id)arg1;
- (id)locationOnMapForHandle:(id)arg1 enforceServerId:(BOOL)arg2;
- (BOOL)singleAnnotationOnMap;
- (void)selectAnnotationIfSingleFriend:(id)arg1;
- (void)deselectAllAnnotations;
- (void)selectAnnotationIfSingleForMac;
- (BOOL)canSelectAnnotation:(id)arg1;
- (BOOL)isLocationAlreadyOnMap:(id)arg1;
- (void)updateMapWithNewLocation:(id)arg1 animated:(BOOL)arg2;
- (BOOL)mapHasUserLocations;
- (void)updateNoLocationView:(BOOL)arg1;
- (BOOL)canShowNoLocation;
- (void)loadCachedLocationsForHandles;
- (void)_enablePreloadedHandles:(id)arg1;
- (void)enablePreloadedHandles;
- (void)loadDelegate;
- (void)destroySession;
- (void)removeHandlesFromSession;
- (void)addHandlesToSession;
- (void)viewDidDisappear;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)viewWillAppearWillMoveToWindowSetup;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (void)loadView;
- (void)_authorizeMonitoringLocation;
- (void)initializeDefaults;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 handles:(id)arg2;
- (id)initSimpleMapWithDelegate:(id)arg1 handles:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

