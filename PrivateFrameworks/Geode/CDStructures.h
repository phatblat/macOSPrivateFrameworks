//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct DGARGB8_t {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct DGRGBA16_t {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
};

struct DGRGBAf_t {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct DGRGBf_t {
    float _field1;
    float _field2;
    float _field3;
};

struct Mat3f {
    struct Vec3f _field1[3];
};

struct PFIntPoint_st {
    long long x;
    long long y;
};

struct PFIntRect_st {
    struct PFIntPoint_st origin;
    struct PFIntSize_st size;
};

struct PFIntSize_st {
    unsigned long long width;
    unsigned long long height;
};

struct PixelComponent;

struct PixelFormat {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _name;
    struct PixelSpace _space;
    struct vector<PA::PixelLayout, std::__1::allocator<PA::PixelLayout>> _planes;
};

struct PixelLayout;

struct PixelSpace {
    struct vector<PA::PixelComponent, std::__1::allocator<PA::PixelComponent>> _components;
};

struct SHLDataElem {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct Vec3f {
    float _field1[3];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct ipa_pointConversionResult {
    unsigned long long _field1;
    unsigned long long _field2;
    struct CGPoint _field3;
};

struct ipa_rectConversionResult {
    unsigned long long _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    unsigned long long _field4;
};

struct vector<PA::PixelComponent, std::__1::allocator<PA::PixelComponent>> {
    struct PixelComponent *__begin_;
    struct PixelComponent *__end_;
    struct __compressed_pair<PA::PixelComponent *, std::__1::allocator<PA::PixelComponent>> {
        struct PixelComponent *__value_;
    } __end_cap_;
};

struct vector<PA::PixelLayout, std::__1::allocator<PA::PixelLayout>> {
    struct PixelLayout *__begin_;
    struct PixelLayout *__end_;
    struct __compressed_pair<PA::PixelLayout *, std::__1::allocator<PA::PixelLayout>> {
        struct PixelLayout *__value_;
    } __end_cap_;
};

struct vector<PFIntRect_st, std::__1::allocator<PFIntRect_st>> {
    struct PFIntRect_st *__begin_;
    struct PFIntRect_st *__end_;
    struct __compressed_pair<PFIntRect_st *, std::__1::allocator<PFIntRect_st>> {
        struct PFIntRect_st *__value_;
    } __end_cap_;
};

struct vector<SHLDataElem, std::__1::allocator<SHLDataElem>> {
    struct SHLDataElem *_field1;
    struct SHLDataElem *_field2;
    struct __compressed_pair<SHLDataElem *, std::__1::allocator<SHLDataElem>> {
        struct SHLDataElem *_field1;
    } _field3;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __value_;
    } __cap_alloc_;
};

struct vector<float, std::__1::allocator<float>>;

struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
    struct vector<float, std::__1::allocator<float>> *_field1;
    struct vector<float, std::__1::allocator<float>> *_field2;
    struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float>>*, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
        struct vector<float, std::__1::allocator<float>> *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    double src;
    double dst;
} CDStruct_ad6741ac;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    CDStruct_ad6741ac black;
    CDStruct_ad6741ac shadow;
    CDStruct_ad6741ac mid;
    CDStruct_ad6741ac hilight;
    CDStruct_ad6741ac white;
} CDStruct_b9c68237;

typedef struct {
    CDStruct_869f9c67 _field1;
    CDStruct_869f9c67 _field2;
    unsigned long long _field3;
} CDStruct_033331b1;

typedef struct {
    struct CGPoint _field1;
    float _field2;
} CDStruct_cd524421;

