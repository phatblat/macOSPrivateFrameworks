//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct DataSet {
    struct vector<double, std::__1::allocator<double>> _values;
};

struct Measurement;

struct Quad2d {
    struct Vector2d _field1;
    struct Vector2d _field2;
    struct Vector2d _field3;
    struct Vector2d _field4;
};

struct Vector2d {
    double X;
    double Y;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct vector<Measurement, std::__1::allocator<Measurement>> {
    struct Measurement *_field1;
    struct Measurement *_field2;
    struct __compressed_pair<Measurement *, std::__1::allocator<Measurement>> {
        struct Measurement *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long width;
    unsigned long long height;
} CDStruct_5e758c1a;

// Template types
typedef struct vector<Measurement, std::__1::allocator<Measurement>> {
    struct Measurement *_field1;
    struct Measurement *_field2;
    struct __compressed_pair<Measurement *, std::__1::allocator<Measurement>> {
        struct Measurement *_field1;
    } _field3;
} vector_672528b1;

