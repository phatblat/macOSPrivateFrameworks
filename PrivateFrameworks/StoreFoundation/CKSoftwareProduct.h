//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"

@class NSDate, NSNumber, NSString, NSValue;

@interface CKSoftwareProduct : NSObject <NSSecureCoding, NSCopying>
{
    BOOL _installed;
    BOOL _isVPPLicensed;
    BOOL _vppLicenseRevoked;
    BOOL _isMachineLicensed;
    BOOL _isLegacyApp;
    BOOL _metadataChangeIsExpected;
    BOOL _metadataChangeHasAlreadyOccurred;
    NSString *_accountOpaqueDSID;
    NSString *_accountIdentifier;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSString *_bundlePath;
    NSString *_receiptType;
    NSNumber *_itemIdentifier;
    NSNumber *_storeFrontIdentifier;
    NSNumber *_versionIdentifier;
    NSDate *_purchaseDate;
    NSValue *_mdItemRef;
    NSString *_vppLicenseOrganizationName;
    NSDate *_vppLicenseExpirationDate;
    NSDate *_vppLicenseRenewalDate;
    NSString *_vppLicenseCancellationReason;
    long long _source;
    NSString *_expectedBundleVersion;
    NSNumber *_expectedStoreVersion;
}

+ (id)createSoftwareProductForAppAtPath:(id)arg1;
+ (id)productPathToUpgradeForBundleIdentifier:(id)arg1 versionNumberString:(id)arg2;
+ (BOOL)supportsSecureCoding;
@property(copy) NSNumber *expectedStoreVersion; // @synthesize expectedStoreVersion=_expectedStoreVersion;
@property(copy) NSString *expectedBundleVersion; // @synthesize expectedBundleVersion=_expectedBundleVersion;
@property BOOL metadataChangeHasAlreadyOccurred; // @synthesize metadataChangeHasAlreadyOccurred=_metadataChangeHasAlreadyOccurred;
@property BOOL metadataChangeIsExpected; // @synthesize metadataChangeIsExpected=_metadataChangeIsExpected;
@property long long source; // @synthesize source=_source;
@property BOOL isLegacyApp; // @synthesize isLegacyApp=_isLegacyApp;
@property BOOL isMachineLicensed; // @synthesize isMachineLicensed=_isMachineLicensed;
@property(retain) NSString *vppLicenseCancellationReason; // @synthesize vppLicenseCancellationReason=_vppLicenseCancellationReason;
@property(retain) NSDate *vppLicenseRenewalDate; // @synthesize vppLicenseRenewalDate=_vppLicenseRenewalDate;
@property(retain) NSDate *vppLicenseExpirationDate; // @synthesize vppLicenseExpirationDate=_vppLicenseExpirationDate;
@property(retain) NSString *vppLicenseOrganizationName; // @synthesize vppLicenseOrganizationName=_vppLicenseOrganizationName;
@property BOOL vppLicenseRevoked; // @synthesize vppLicenseRevoked=_vppLicenseRevoked;
@property BOOL isVPPLicensed; // @synthesize isVPPLicensed=_isVPPLicensed;
@property BOOL installed; // @synthesize installed=_installed;
@property(retain) NSValue *mdItemRef; // @synthesize mdItemRef=_mdItemRef;
@property(retain) NSDate *purchaseDate; // @synthesize purchaseDate=_purchaseDate;
@property(retain) NSNumber *versionIdentifier; // @synthesize versionIdentifier=_versionIdentifier;
@property(retain) NSNumber *storeFrontIdentifier; // @synthesize storeFrontIdentifier=_storeFrontIdentifier;
@property(retain) NSNumber *itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(retain) NSString *receiptType; // @synthesize receiptType=_receiptType;
@property(retain) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;
@property(retain) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(retain) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(retain) NSString *accountOpaqueDSID; // @synthesize accountOpaqueDSID=_accountOpaqueDSID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly) NSString *appName;
- (id)description;
@property(readonly) NSString *sourceString;

@end

