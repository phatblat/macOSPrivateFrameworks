//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSSecureCoding.h"

@class NSArray, NSDictionary, NSError, NSLock, NSString, NSURLRequest;

@interface SSDownloadAsset : NSObject <NSSecureCoding>
{
    NSString *_downloadFileName;
    NSString *_downloadFolderName;
    long long _fileSize;
    NSString *_finalizedFileName;
    NSArray *_hashes;
    NSArray *_clearHashes;
    long long _numberOfBytesToHash;
    BOOL _isExternal;
    NSLock *_lock;
    NSString *_processedPath;
    long long _type;
    long long _subType;
    NSURLRequest *_urlRequest;
    NSString *_customDownloadPath;
    BOOL _useUniqueDownloadFolder;
    BOOL _skipInstallPhase;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    BOOL _deltaUpdateFailed;
    BOOL _localDeltaUpdateFailed;
    NSDictionary *_deltaPackage;
    NSError *_localCachingError;
    long long _localFullPackageFailureCount;
    long long _hashAlgorithm;
}

+ (id)assetWithURL:(id)arg1 type:(long long)arg2;
+ (BOOL)supportsSecureCoding;
@property long long hashAlgorithm; // @synthesize hashAlgorithm=_hashAlgorithm;
@property long long subType; // @synthesize subType=_subType;
@property(retain) NSError *localCachingError; // @synthesize localCachingError=_localCachingError;
@property long long localFullPackageFailureCount; // @synthesize localFullPackageFailureCount=_localFullPackageFailureCount;
@property BOOL localDeltaUpdateFailed; // @synthesize localDeltaUpdateFailed=_localDeltaUpdateFailed;
@property BOOL deltaUpdateFailed; // @synthesize deltaUpdateFailed=_deltaUpdateFailed;
@property(copy) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(copy) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain) NSDictionary *deltaPackage; // @synthesize deltaPackage=_deltaPackage;
@property BOOL skipInstallPhase; // @synthesize skipInstallPhase=_skipInstallPhase;
@property BOOL useUniqueDownloadFolder; // @synthesize useUniqueDownloadFolder=_useUniqueDownloadFolder;
@property(retain) NSString *customDownloadPath; // @synthesize customDownloadPath=_customDownloadPath;
- (void).cxx_destruct;
@property(retain) NSURLRequest *URLRequest;
@property long long type;
@property(retain) NSString *processedPath;
@property long long numberOfBytesToHash;
- (void)setLocalFileNameFromBase:(id)arg1;
@property(retain) NSArray *clearHashes;
@property(retain) NSArray *hashes;
@property(retain) NSString *finalizedFileName;
@property long long fileSize; // @synthesize fileSize=_fileSize;
@property(getter=isExternal) BOOL external;
@property(retain) NSString *downloadFileName;
- (void)setDownloadFolderName:(id)arg1;
@property(readonly) NSString *finalizedPath;
@property(readonly) NSString *downloadPath;
- (id)downloadFolderName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithURLRequest:(id)arg1 type:(long long)arg2;
- (id)init;

@end

