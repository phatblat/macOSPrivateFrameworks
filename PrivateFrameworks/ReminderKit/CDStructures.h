//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Array {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct StringArray *_field5;
    struct Dictionary *_field6;
};

struct AttachmentInfo;

struct AttributeRun {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct ParagraphStyle *_field5;
    unsigned int _field6;
    unsigned int _field7;
    struct Font *_field8;
    unsigned int _field9;
    unsigned int _field10;
    basic_string_a1f69cfb *_field11;
    int _field12;
    int _field13;
    struct Color *_field14;
    struct AttachmentInfo *_field15;
    unsigned long long _field16;
};

struct CRDocument {
    Class _field1;
};

struct Color;

struct Dictionary {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<CRDT::Dictionary_Element> _field5;
};

struct Document_CustomObject {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<CRDT::Document_CustomObject_MapEntry> _field5;
    int _field6;
};

struct Document_DocObject {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    union ContentsUnion {
        struct RegisterLatest *_field1;
        struct RegisterLatest *_field2;
        struct RegisterLatest *_field3;
        struct Dictionary *_field4;
        struct Dictionary *_field5;
        struct Dictionary *_field6;
        struct Timestamp *_field7;
        struct VectorTimestamp *_field8;
        struct Index *_field9;
        struct String *_field10;
        unsigned long long _field11;
        struct OneOf *_field12;
        struct Document_CustomObject *_field13;
        struct StringArray *_field14;
        struct Array *_field15;
        struct OrderedSet *_field16;
    } _field5;
    unsigned int _field6[1];
};

struct Font {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    float _field6;
    unsigned int _field7;
};

struct Index;

struct NSMutableDictionary {
    Class _field1;
};

struct ObjectID {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    union ContentsUnion {
        long long _field1;
        unsigned long long _field2;
        double _field3;
        basic_string_a1f69cfb *_field4;
        basic_string_a1f69cfb *_field5;
        unsigned int _field6;
    } _field5;
    unsigned int _field6[1];
};

struct OneOf;

struct OrderedSet {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct Array *_field5;
    struct Dictionary *_field6;
};

struct ParagraphStyle {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct Todo *_field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct RegisterLatest {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct Timestamp *_field5;
    struct ObjectID *_field6;
};

struct RepeatedPtrField<CRDT::Dictionary_Element> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<CRDT::Document_CustomObject_MapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<CRDT::Document_DocObject> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<CRDT::StringArray_ArrayAttachment> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<CRDT::VectorTimestamp_Element> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<replica_manager::ReplicaEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<replica_manager::VectorTimestampElement> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<topotext::Attachment> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<topotext::AttributeRun> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<topotext::Selection_Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<topotext::Substring> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<topotext::VectorTimestamp_Clock> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<versioned_document::Version> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReplicaEntry {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct RepeatedPtrField<replica_manager::VectorTimestampElement> _field7;
};

struct ReplicaManager {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field6;
    struct RepeatedPtrField<replica_manager::ReplicaEntry> _field7;
};

struct Selection {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct RepeatedPtrField<topotext::Selection_Range> _field6;
    int _field7;
};

struct String {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct RepeatedPtrField<topotext::Substring> _field6;
    struct VectorTimestamp *_field7;
    struct RepeatedPtrField<topotext::AttributeRun> _field8;
    struct RepeatedPtrField<topotext::Attachment> _field9;
};

struct StringArray {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct String *_field5;
    struct RepeatedPtrField<CRDT::StringArray_ArrayAttachment> _field6;
};

struct Timestamp {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    long long _field6;
};

struct Todo;

struct TopoID {
    id _field1;
    unsigned int _field2;
};

struct TopoIDRange {
    struct TopoID _field1;
    unsigned int _field2;
};

struct TopoSubstring {
    struct TopoIDRange _field1;
    struct TopoID _field2;
    unsigned int _field3;
    _Bool _field4;
    vector_c5c053b6 _field5;
    unsigned int _field6;
};

struct Version {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*> *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<TopoID, TopoID>;

struct pair<TopoIDRange, NSAttributedString *>;

struct pair<TopoIDRange, NSDictionary *>;

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_set<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *>> {
    struct __hash_table<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>, std::__1::allocator<std::__1::__hash_node<TopoSubstring *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TopoSubstring *>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TopoSubstring *>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<CRDT::Document_DocObject *, std::__1::allocator<CRDT::Document_DocObject *>> {
    struct Document_DocObject **__begin_;
    struct Document_DocObject **__end_;
    struct __compressed_pair<CRDT::Document_DocObject **, std::__1::allocator<CRDT::Document_DocObject *>> {
        struct Document_DocObject **__value_;
    } __end_cap_;
};

struct vector<TopoIDRange, std::__1::allocator<TopoIDRange>> {
    struct TopoIDRange *_field1;
    struct TopoIDRange *_field2;
    struct __compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange>> {
        struct TopoIDRange *_field1;
    } _field3;
};

struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *>> {
    struct TopoSubstring **__begin_;
    struct TopoSubstring **__end_;
    struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *>> {
        struct TopoSubstring **__value_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *_field1;
    struct _NSRange *_field2;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *_field1;
    } _field3;
};

struct vector<std::__1::pair<TopoID, TopoID>, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
    struct pair<TopoID, TopoID> *__begin_;
    struct pair<TopoID, TopoID> *__end_;
    struct __compressed_pair<std::__1::pair<TopoID, TopoID>*, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
        struct pair<TopoID, TopoID> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TopoIDRange, NSAttributedString *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *>>> {
    struct pair<TopoIDRange, NSAttributedString *> *_field1;
    struct pair<TopoIDRange, NSAttributedString *> *_field2;
    struct __compressed_pair<std::__1::pair<TopoIDRange, NSAttributedString *>*, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *>>> {
        struct pair<TopoIDRange, NSAttributedString *> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TopoIDRange, NSDictionary *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *>>> {
    struct pair<TopoIDRange, NSDictionary *> *_field1;
    struct pair<TopoIDRange, NSDictionary *> *_field2;
    struct __compressed_pair<std::__1::pair<TopoIDRange, NSDictionary *>*, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *>>> {
        struct pair<TopoIDRange, NSDictionary *> *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct VectorTimestamp *_field5;
    struct VectorTimestamp *_field6;
    struct RepeatedPtrField<CRDT::Document_DocObject> _field7;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field8;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field9;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field10;
    struct VectorTimestamp *_field11;
} Document_a0f7d28b;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<CRDT::VectorTimestamp_Element> _field5;
} VectorTimestamp_c98372c7;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<topotext::VectorTimestamp_Clock> _field5;
} VectorTimestamp_cd1d3bcf;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a1f69cfb _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<versioned_document::Version> _field5;
    unsigned int _field6;
} Document_0e94f2f5;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

// Template types
typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct unordered_set<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *>> {
    struct __hash_table<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*>, std::__1::allocator<std::__1::__hash_node<TopoSubstring *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TopoSubstring *, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TopoSubstring *>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TopoSubstring *>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_0f32d0a8;

typedef struct vector<TopoIDRange, std::__1::allocator<TopoIDRange>> {
    struct TopoIDRange *_field1;
    struct TopoIDRange *_field2;
    struct __compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange>> {
        struct TopoIDRange *_field1;
    } _field3;
} vector_4b213608;

typedef struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *>> {
    struct TopoSubstring **__begin_;
    struct TopoSubstring **__end_;
    struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *>> {
        struct TopoSubstring **__value_;
    } __end_cap_;
} vector_c5c053b6;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *_field1;
    struct _NSRange *_field2;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *_field1;
    } _field3;
} vector_7053a16b;

typedef struct vector<std::__1::pair<TopoID, TopoID>, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
    struct pair<TopoID, TopoID> *__begin_;
    struct pair<TopoID, TopoID> *__end_;
    struct __compressed_pair<std::__1::pair<TopoID, TopoID>*, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
        struct pair<TopoID, TopoID> *__value_;
    } __end_cap_;
} vector_0ee2fe7a;

typedef struct vector<std::__1::pair<TopoIDRange, NSAttributedString *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *>>> {
    struct pair<TopoIDRange, NSAttributedString *> *_field1;
    struct pair<TopoIDRange, NSAttributedString *> *_field2;
    struct __compressed_pair<std::__1::pair<TopoIDRange, NSAttributedString *>*, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *>>> {
        struct pair<TopoIDRange, NSAttributedString *> *_field1;
    } _field3;
} vector_252d7b3a;

typedef struct vector<std::__1::pair<TopoIDRange, NSDictionary *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *>>> {
    struct pair<TopoIDRange, NSDictionary *> *_field1;
    struct pair<TopoIDRange, NSDictionary *> *_field2;
    struct __compressed_pair<std::__1::pair<TopoIDRange, NSDictionary *>*, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *>>> {
        struct pair<TopoIDRange, NSDictionary *> *_field1;
    } _field3;
} vector_5b9fc061;

