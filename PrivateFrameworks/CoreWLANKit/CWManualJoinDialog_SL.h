//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "NSCollectionViewDelegate.h"
#import "NSTableViewDataSource.h"
#import "NSTableViewDelegate.h"
#import "NSTextFieldDelegate.h"

@class CWDisplayedScanResult, NSArray, NSButton, NSData, NSImageView, NSPopUpButton, NSProgressIndicator, NSScrollView, NSSecureTextField, NSString, NSTableView, NSTextField, NSView, SFCertificateView;

@interface CWManualJoinDialog_SL : NSWindowController <NSCollectionViewDelegate, NSTextFieldDelegate, NSTableViewDataSource, NSTableViewDelegate>
{
    id _delegate;
    BOOL installerContext_;
    BOOL _showingOpen;
    BOOL _showingPassword;
    BOOL _showingPSK;
    BOOL _showingEnterprise;
    BOOL _showingCertificateSelector;
    BOOL _showingCertificate;
    BOOL _showingManual;
    BOOL _optionKey;
    BOOL _showingNetworkBrowser;
    BOOL _joinInProgress;
    long long _prevSelectedRow;
    long long _selectedRow;
    BOOL _showingAutomaticEAP;
    BOOL _showingEAPTLS;
    BOOL _certificatesAvailable;
    CWDisplayedScanResult *_scanResult;
    NSArray *_scanResults;
    NSArray *_updateScanResults;
    BOOL _autoJoinPrompt;
    NSString *_username;
    NSString *_password;
    NSData *_identityData;
    BOOL _remember;
    SFCertificateView *certificateView;
    NSTextField *windowTitleLabel;
    NSTextField *windowDescriptionLabel;
    NSButton *okButton;
    NSButton *cancelButton;
    NSView *securityTypeView;
    NSPopUpButton *securityTypePopupButton;
    NSView *networkNameView;
    NSTextField *networkNameField;
    NSView *usernameView;
    NSTextField *usernameField;
    NSView *passwordView;
    NSSecureTextField *passwordField;
    NSTextField *revealedPasswordField;
    NSView *pskView;
    NSTextField *revealedPSKField;
    NSSecureTextField *pskField;
    NSView *certificateSelectorView;
    NSPopUpButton *certificatePopUpButton;
    NSView *eapModeView;
    NSPopUpButton *eapModePopUpButton;
    NSButton *certificateDetailButton;
    NSScrollView *certificateDetailView;
    NSTextField *statusMessageLabel;
    NSButton *warningButton;
    NSProgressIndicator *progressIndicator;
    NSView *rememberView;
    NSButton *rememberCheckboxButton;
    NSView *showPasswordView;
    NSButton *showPasswordCheckboxButton;
    NSButton *helpButton;
    NSButton *showNetworksButton;
    NSTableView *tableView;
    NSView *tableBorderedView;
    NSScrollView *tableScrollView;
    NSImageView *imageView;
    NSTextField *pskHintText;
}

+ (id)manualJoinDialogWithScanResults:(id)arg1 remember:(BOOL)arg2;
+ (id)autoJoinPromptWithScanResults:(id)arg1 remember:(BOOL)arg2;
@property BOOL autoJoinPrompt; // @synthesize autoJoinPrompt=_autoJoinPrompt;
@property(copy) NSData *identityData; // @synthesize identityData=_identityData;
@property(copy) NSString *password; // @synthesize password=_password;
@property(copy) NSString *username; // @synthesize username=_username;
@property BOOL remember; // @synthesize remember=_remember;
@property(copy) CWDisplayedScanResult *scanResult; // @synthesize scanResult=_scanResult;
@property(copy) NSArray *scanResults; // @synthesize scanResults=_scanResults;
@property(copy) NSArray *updateScanResults; // @synthesize updateScanResults=_updateScanResults;
@property id delegate; // @synthesize delegate=_delegate;
- (BOOL)eapCertificatesAvailable;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)handleSecurityTypePopupButtonPressed:(id)arg1;
- (void)populateCertificates;
- (void)populateSecurityClasses;
- (void)populateEAPModes;
- (void)populateSecurityTypes;
- (BOOL)validateEntries;
- (BOOL)validateSecurityTypeForTag:(long long)arg1;
- (void)resetSecurityEntries;
- (id)errorStringForErrorCode:(long long)arg1;
- (void)setSecurityTypeViewForTag:(long long)arg1;
- (long long)getDefaultTag;
- (id)localizedStringForKey:(id)arg1;
- (void)updateWithScanResults:(id)arg1;
- (void)updateScanUI:(BOOL)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)onEAPModePopUpButton:(id)arg1;
- (void)onCertificatePopUpButton:(id)arg1;
- (void)onSecurityTypePopupButton:(id)arg1;
- (void)onCertificateDetailButton:(id)arg1;
- (void)onShowPasswordCheckboxButton:(id)arg1;
- (void)onCancelButton:(id)arg1;
- (void)onOKButton:(id)arg1;
- (void)onHelpButton:(id)arg1;
- (void)onRememberCheckboxButton:(id)arg1;
- (void)onShowNetworksButton:(id)arg1;
- (void)windowDidLoad;
- (void)close;
- (void)awakeFromNib;
- (void)__updateWindowFrame:(struct CGRect)arg1 complete:(CDUnknownBlockType)arg2;
- (void)removeNetworkBrowserView:(struct CGRect *)arg1;
- (void)insertNetworkBrowserView;
- (void)expandFrameForNetworkBrowserView:(struct CGRect *)arg1;
- (void)removeEnterpriseViews:(struct CGRect *)arg1;
- (void)insertEnterpriseViews;
- (void)expandFrameForEnterpriseViews:(struct CGRect *)arg1;
- (void)removeCertificateDetailView:(struct CGRect *)arg1;
- (void)insertCertificateDetailView;
- (void)expandFrameForCertificateDetailView:(struct CGRect *)arg1;
- (void)removePSKView:(struct CGRect *)arg1;
- (void)insertPSKView;
- (void)expandFrameForPSKView:(struct CGRect *)arg1;
- (void)removePasswordView:(struct CGRect *)arg1;
- (void)insertPasswordView;
- (void)expandFrameForPasswordView:(struct CGRect *)arg1;
- (void)insertManualConnectView;
- (void)removeManualConnectView:(struct CGRect *)arg1;
- (void)expandFrameForManualConnectView:(struct CGRect *)arg1;
- (void)insertOpenView;
- (void)removeOpenView:(struct CGRect *)arg1;
- (void)expandFrameForOpenView:(struct CGRect *)arg1;
- (void)associationStart;
- (id)initWithScanResults:(id)arg1 remember:(BOOL)arg2;
- (id)prepareScanResults:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

