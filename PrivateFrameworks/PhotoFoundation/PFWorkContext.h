//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSString, PFAsyncDispatchMulticaster<PFWorkContextStatusUpdateMulticaster>, PFBackgroundServiceManagerCategory, PFDispatchQueue, PFID, PFJob, PFWorkBatch;

@interface PFWorkContext : NSObject
{
    NSDate *_lastDisplayUpdate;
    unsigned long long _jobsInFlight;
    PFDispatchQueue *_queue;
    id _qosServiceType;
    NSMutableArray *_children;
    NSMutableArray *_suspenders;
    BOOL _isVisible;
    BOOL _alwaysVisible;
    BOOL _resetProgressOnStall;
    BOOL _canCancel;
    BOOL _parentCancelsChildren;
    BOOL _canPause;
    BOOL _isOpenEnded;
    BOOL _debug;
    BOOL _shutdownDelegate;
    BOOL _continueOnErrorOrCancel;
    BOOL _delayUpdate;
    BOOL _isConfirmingCancel;
    int _state;
    int _stage;
    int _controlState;
    int _result;
    NSString *_groupDisplayName;
    NSString *_groupDisplayDescription;
    PFBackgroundServiceManagerCategory *_category;
    NSString *_name;
    PFWorkContext *_parent;
    id _uuid;
    NSString *_workDescription;
    double _displayProgressDelay;
    NSMutableArray *_items;
    unsigned long long _batchSize;
    PFWorkBatch *_batch;
    Class _batchClass;
    unsigned long long _concurrency;
    CDUnknownBlockType _jobCompletedBlock;
    CDUnknownBlockType _workContextStalledBlock;
    CDUnknownBlockType _workContextResumedFromStallBlock;
    unsigned long long _completedItems;
    unsigned long long _errorNotificationFrequency;
    CDUnknownBlockType _errorhandler;
    id _delegate;
    struct PFAsyncDispatchMulticaster *_statusMulticaster;
    NSMutableDictionary *_waitingStages;
    id <PFBackgroundServiceManagerDelegate> _beginWorkDelegate;
    id <PFBackgroundServiceManagerDelegate> _createBatchDelegate;
    id <PFBackgroundServiceManagerDelegate> _beginBatchDelegate;
    id <PFBackgroundServiceManagerDelegate> _performJobDelegate;
    id <PFBackgroundServiceManagerDelegate> _endBatchDelegate;
    id <PFBackgroundServiceManagerDelegate> _endWorkDelegate;
    id <PFBackgroundServiceManagerControlDelegate> _shouldCancelDelegate;
    id <PFBackgroundServiceManagerControlDelegate> _cancelWorkDelegate;
    id <PFBackgroundServiceManagerControlDelegate> _suspendWorkDelegate;
    id <PFBackgroundServiceManagerControlDelegate> _resumeWorkDelegate;
    id <PFBackgroundServiceManagerProgressDelegate> _progressDelegate;
    id <PFBackgroundServiceManagerProgressDelegate> _progressDescriptionDelegate;
    id <PFBackgroundServiceManagerDelegate> _handleErrorDelegate;
    long long _pausedCounter;
    NSDate *_startTime;
    NSDate *_endTime;
    PFDispatchQueue *_bsmContextPropertyQueue;
    CDUnknownBlockType _performJobBlock;
    id <PFBackgroundServiceManagerDelegate> _nextItemProvider;
    id _parentId;
    CDUnknownBlockType _completionBlock;
    long long _lastAddRemoveTask;
    NSMutableArray *_jobsCompletedSinceLastStall;
    PFWorkContext *_nextWorkContext;
}

+ (id)sequentialWorkContextWithWorkContexts:(id)arg1 continueOnErrorOrCancel:(BOOL)arg2;
@property BOOL isConfirmingCancel; // @synthesize isConfirmingCancel=_isConfirmingCancel;
@property(retain) PFWorkContext *nextWorkContext; // @synthesize nextWorkContext=_nextWorkContext;
@property(retain) NSMutableArray *jobsCompletedSinceLastStall; // @synthesize jobsCompletedSinceLastStall=_jobsCompletedSinceLastStall;
@property(nonatomic) long long lastAddRemoveTask; // @synthesize lastAddRemoveTask=_lastAddRemoveTask;
@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain) id parentId; // @synthesize parentId=_parentId;
@property id <PFBackgroundServiceManagerDelegate> nextItemProvider; // @synthesize nextItemProvider=_nextItemProvider;
@property(copy) CDUnknownBlockType performJobBlock; // @synthesize performJobBlock=_performJobBlock;
@property BOOL delayUpdate; // @synthesize delayUpdate=_delayUpdate;
@property(retain) PFDispatchQueue *bsmContextPropertyQueue; // @synthesize bsmContextPropertyQueue=_bsmContextPropertyQueue;
@property BOOL continueOnErrorOrCancel; // @synthesize continueOnErrorOrCancel=_continueOnErrorOrCancel;
@property(retain) NSDate *endTime; // @synthesize endTime=_endTime;
@property(retain) NSDate *startTime; // @synthesize startTime=_startTime;
@property long long pausedCounter; // @synthesize pausedCounter=_pausedCounter;
@property __weak id <PFBackgroundServiceManagerDelegate> handleErrorDelegate; // @synthesize handleErrorDelegate=_handleErrorDelegate;
@property __weak id <PFBackgroundServiceManagerProgressDelegate> progressDescriptionDelegate; // @synthesize progressDescriptionDelegate=_progressDescriptionDelegate;
@property __weak id <PFBackgroundServiceManagerProgressDelegate> progressDelegate; // @synthesize progressDelegate=_progressDelegate;
@property __weak id <PFBackgroundServiceManagerControlDelegate> resumeWorkDelegate; // @synthesize resumeWorkDelegate=_resumeWorkDelegate;
@property __weak id <PFBackgroundServiceManagerControlDelegate> suspendWorkDelegate; // @synthesize suspendWorkDelegate=_suspendWorkDelegate;
@property __weak id <PFBackgroundServiceManagerControlDelegate> cancelWorkDelegate; // @synthesize cancelWorkDelegate=_cancelWorkDelegate;
@property __weak id <PFBackgroundServiceManagerControlDelegate> shouldCancelDelegate; // @synthesize shouldCancelDelegate=_shouldCancelDelegate;
@property __weak id <PFBackgroundServiceManagerDelegate> endWorkDelegate; // @synthesize endWorkDelegate=_endWorkDelegate;
@property __weak id <PFBackgroundServiceManagerDelegate> endBatchDelegate; // @synthesize endBatchDelegate=_endBatchDelegate;
@property __weak id <PFBackgroundServiceManagerDelegate> performJobDelegate; // @synthesize performJobDelegate=_performJobDelegate;
@property __weak id <PFBackgroundServiceManagerDelegate> beginBatchDelegate; // @synthesize beginBatchDelegate=_beginBatchDelegate;
@property __weak id <PFBackgroundServiceManagerDelegate> createBatchDelegate; // @synthesize createBatchDelegate=_createBatchDelegate;
@property __weak id <PFBackgroundServiceManagerDelegate> beginWorkDelegate; // @synthesize beginWorkDelegate=_beginWorkDelegate;
@property(retain) NSMutableDictionary *waitingStages; // @synthesize waitingStages=_waitingStages;
@property BOOL shutdownDelegate; // @synthesize shutdownDelegate=_shutdownDelegate;
@property(retain) PFAsyncDispatchMulticaster<PFWorkContextStatusUpdateMulticaster> *statusMulticaster; // @synthesize statusMulticaster=_statusMulticaster;
@property unsigned long long jobsInFlight; // @synthesize jobsInFlight=_jobsInFlight;
@property(retain) id delegate; // @synthesize delegate=_delegate;
@property BOOL debug; // @synthesize debug=_debug;
@property(readonly) id qosServiceType; // @synthesize qosServiceType=_qosServiceType;
@property(copy) CDUnknownBlockType errorhandler; // @synthesize errorhandler=_errorhandler;
@property unsigned long long errorNotificationFrequency; // @synthesize errorNotificationFrequency=_errorNotificationFrequency;
@property int result; // @synthesize result=_result;
@property unsigned long long completedItems; // @synthesize completedItems=_completedItems;
@property(copy) CDUnknownBlockType workContextResumedFromStallBlock; // @synthesize workContextResumedFromStallBlock=_workContextResumedFromStallBlock;
@property(copy) CDUnknownBlockType workContextStalledBlock; // @synthesize workContextStalledBlock=_workContextStalledBlock;
@property(copy) CDUnknownBlockType jobCompletedBlock; // @synthesize jobCompletedBlock=_jobCompletedBlock;
@property(readonly) unsigned long long concurrency; // @synthesize concurrency=_concurrency;
@property(retain) Class batchClass; // @synthesize batchClass=_batchClass;
@property BOOL isOpenEnded; // @synthesize isOpenEnded=_isOpenEnded;
@property BOOL canPause; // @synthesize canPause=_canPause;
@property BOOL parentCancelsChildren; // @synthesize parentCancelsChildren=_parentCancelsChildren;
@property BOOL canCancel; // @synthesize canCancel=_canCancel;
@property(retain) PFWorkBatch *batch; // @synthesize batch=_batch;
@property unsigned long long batchSize; // @synthesize batchSize=_batchSize;
@property(retain) NSMutableArray *items; // @synthesize items=_items;
@property double displayProgressDelay; // @synthesize displayProgressDelay=_displayProgressDelay;
@property BOOL resetProgressOnStall; // @synthesize resetProgressOnStall=_resetProgressOnStall;
@property BOOL alwaysVisible; // @synthesize alwaysVisible=_alwaysVisible;
@property BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(retain) NSString *workDescription; // @synthesize workDescription=_workDescription;
@property(retain) PFDispatchQueue *queue; // @synthesize queue=_queue;
@property(readonly) id uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)recordSuspender:(id)arg1;
- (void)addWorkContext:(id)arg1;
- (void)removeStatusReceiver:(id)arg1;
- (void)addStatusReceiver:(id)arg1;
@property(readonly) PFJob *nextJob;
- (id)itemAtIndex:(unsigned long long)arg1;
- (void)addItems:(id)arg1 inserting:(BOOL)arg2;
- (void)insertItems:(id)arg1;
- (void)addItems:(id)arg1;
- (void)addItem:(id)arg1;
- (BOOL)removeItem:(id)arg1;
- (BOOL)_removeItem:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)removeAllItems;
- (unsigned long long)willRemoveItem:(id)arg1;
- (void)willRemoveAllItems;
- (void)terminate;
- (id)runWithCompletion:(CDUnknownBlockType)arg1;
- (void)remove;
- (id)add;
- (void)continueForStage:(unsigned long long)arg1;
- (void)completeWorkContextResumedFromStall;
- (void)completeWorkContextStalled;
- (void)completeResume;
- (void)completeSuspend;
- (void)completeCancel;
- (void)completeConfirmCancel;
- (void)completeEndWork;
- (void)completeEndBatch;
- (void)completePerformJob:(id)arg1;
- (void)completeBeginBatch;
- (void)completeCreateBatch;
- (void)completeBeginWork;
@property(readonly) NSArray *remainingJobs;
@property(readonly) unsigned long long remainingItems;
@property(readonly) unsigned long long processingItems;
@property(readonly) unsigned long long totalItems;
- (void)createBatch:(id)arg1;
@property(readonly) BOOL shouldConfirmCancel;
@property(readonly) NSString *progressDescription;
@property(readonly) double progressPercentage;
- (unsigned long long)childCount;
- (void)removeChildren;
- (void)removeChild:(id)arg1;
- (void)addChild:(id)arg1;
@property(readonly) NSArray *children;
@property BOOL controlEnabled;
@property __weak PFWorkContext *parent; // @synthesize parent=_parent;
@property(readonly) double runTime;
- (void)prepareUpdate;
@property(retain) NSString *name; // @synthesize name=_name;
@property(readonly) NSString *_name;
- (id)description;
- (BOOL)_validateChangeToControlState:(int)arg1;
- (BOOL)_validateChangeToStage:(int)arg1;
- (BOOL)_validateChangeToState:(int)arg1;
- (void)close;
- (void)cancel;
- (void)resume;
- (void)pause;
@property __weak PFBackgroundServiceManagerCategory *category; // @synthesize category=_category;
@property(retain) NSString *groupDisplayDescription; // @synthesize groupDisplayDescription=_groupDisplayDescription;
@property(retain) NSString *groupDisplayName; // @synthesize groupDisplayName=_groupDisplayName;
- (void)updateDisplayForcing:(BOOL)arg1;
- (void)_updateDisplayForcing:(BOOL)arg1;
@property(readonly) BOOL isQueued;
@property(readonly) BOOL isPaused;
@property int controlState; // @synthesize controlState=_controlState;
@property int stage; // @synthesize stage=_stage;
@property int state; // @synthesize state=_state;
- (id)stageStringForStage:(int)arg1;
- (id)controlStateStringForState:(int)arg1;
- (id)stateStringForState:(int)arg1;
@property(readonly) PFID *sequenceIdGenerator;
- (id)initWithName:(id)arg1 delegate:(id)arg2 qosServiceType:(id)arg3 concurrency:(unsigned long long)arg4;
- (id)initWithName:(id)arg1 delegate:(id)arg2 qosServiceType:(id)arg3;
- (id)initWithName:(id)arg1 qosServiceType:(id)arg2 concurrency:(unsigned long long)arg3 performJobBlock:(CDUnknownBlockType)arg4;
- (id)initWithName:(id)arg1 performJobBlock:(CDUnknownBlockType)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (BOOL)unsuspend;
- (BOOL)suspend;
- (void)resetProgress;
- (void)shutdown;
- (void)wasRemoved;
- (void)wasAdded;
- (void)setWaitingStage:(unsigned long long)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)dispatchWorkContextResumedFromStallWithReply:(CDUnknownBlockType)arg1;
- (void)dispatchWorkContextStalled:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)dispatchJobCompleted:(id)arg1;
- (void)dispatchHandleErrors:(id)arg1;
- (void)dispatchResumeWorkWithReply:(CDUnknownBlockType)arg1;
- (void)dispatchSuspendWorkWithReply:(CDUnknownBlockType)arg1;
- (void)dispatchCancelWorkWithReply:(CDUnknownBlockType)arg1;
- (void)dispatchEndWorkWithReply:(CDUnknownBlockType)arg1;
- (void)dispatchEndBatch:(id)arg1 withReply:(CDUnknownBlockType)arg2;
- (void)dispatchPerformJob:(id)arg1 withReply:(CDUnknownBlockType)arg2;
- (void)dispatchBeginBatch:(id)arg1 withReply:(CDUnknownBlockType)arg2;
- (void)dispatchCreateBatchWithReply:(CDUnknownBlockType)arg1;
- (void)dispatchBeginWorkWithReply:(CDUnknownBlockType)arg1;
@property(readonly) BOOL isStalled;
@property(readonly) BOOL isCanceled;
@property(readonly) BOOL isCanceling;
@property(readonly) BOOL isResuming;
@property(readonly) BOOL isPausing;
@property(readonly) BOOL isProcessing;
@property(readonly) NSString *controlStateString;
@property(readonly) NSString *stageString;
@property(readonly) NSString *stateString;

@end

