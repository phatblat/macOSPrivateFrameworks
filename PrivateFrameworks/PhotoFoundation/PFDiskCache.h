//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDate, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSString, PFCoalescer;

@interface PFDiskCache : NSObject
{
    NSObject<OS_dispatch_queue> *_cacheManagementDataQueue;
    NSObject<OS_dispatch_queue> *_cacheManagementIOQueue;
    NSObject<OS_dispatch_queue> *_activeReaderWriterQueue;
    NSObject<OS_dispatch_queue> *_cacheExpirationQueue;
    PFCoalescer *_cacheManagementIOCoalescer;
    NSString *_cacheDirectoryPath;
    NSMutableDictionary *_cacheManagementData;
    NSMutableSet *_activeWritingPaths;
    NSMutableSet *_activeReadingPaths;
    int _pendingWrites;
    int _pendingReads;
    NSArray *_expirationPolicies;
    NSDate *_lastExpirationStartTime;
    NSDate *_lastExpirationFinishTime;
    long long _lastExpirationBytesRemoved;
    BOOL _expirationRunning;
    NSDate *_integrityCheckStartTime;
    NSDate *_integrityCheckFinishTime;
    BOOL _integrityCheckRunning;
    long long _cacheHits;
    long long _cacheRequests;
    long long _cacheManagementIOSentinel;
    unsigned long long _maxPendingWrites;
}

@property(readonly) unsigned long long maxPendingWrites; // @synthesize maxPendingWrites=_maxPendingWrites;
@property(readonly) long long cacheRequests; // @synthesize cacheRequests=_cacheRequests;
@property(readonly) long long cacheHits; // @synthesize cacheHits=_cacheHits;
@property(readonly) NSArray *expirationPolicies; // @synthesize expirationPolicies=_expirationPolicies;
@property(readonly) NSString *cacheDirectoryPath; // @synthesize cacheDirectoryPath=_cacheDirectoryPath;
- (void).cxx_destruct;
- (void)runExpiration;
- (void)purge;
- (void)setCacheData:(id)arg1 forKey:(id)arg2 preparationBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setCacheData:(id)arg1 forKey:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)cacheDataForKey:(id)arg1 purgeLevel:(int)arg2;
- (BOOL)removeCacheFileForKey:(id)arg1;
- (id)initWithDirectory:(id)arg1 expirationPolicies:(id)arg2;
- (id)initWithDirectory:(id)arg1 expirationPolicies:(id)arg2 maxPendingWrites:(unsigned long long)arg3;
- (void)dealloc;
- (id)init;
- (BOOL)hasCacheFileForKey:(id)arg1;
- (BOOL)_cacheFileExists:(id)arg1;
- (long long)diskSpaceUsedInBytes;
- (void)resetStats;
- (id)description;
- (id)descriptionForCacheEntry:(id)arg1 separator:(id)arg2;
- (id)formattedCacheSizeInBytes;
- (long long)cacheSizeInBytes;
- (long long)cacheEntryCount;
- (id)integrityCheckStats;
- (id)expirationStats;
- (id)pendingIO;
- (id)_formattedBytes:(long long)arg1;
- (void)blockForOutstandingWork;
- (void)_writeCacheManagementFileData;
- (BOOL)_updateCacheManagementFile:(id)arg1 forCacheFilePath:(id)arg2;
- (BOOL)_setCacheEntry:(id)arg1 uniqueID:(id)arg2;
- (BOOL)_cleanupCacheManagementFile:(id)arg1;
- (void)_writeCacheData:(id)arg1 checksum:(id)arg2 preparationBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_write:(id)arg1 checksum:(id)arg2 writer:(id)arg3 preparationBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)_readCacheData:(id)arg1 purgeLevel:(int)arg2;
- (id)_readCacheFile:(id)arg1 reader:(id)arg2 purgeLevel:(int)arg3;
- (void)_validateCacheManagementData:(id)arg1;
- (BOOL)_validateCacheManagementValue:(id)arg1;
- (void)_cleanupLeftoverFiles;
- (void)_checkIntegrityOfAllCacheFiles;
- (BOOL)_checkIntegrityOfCacheFile:(id)arg1;
- (void)_asyncCheckIntegrityOfCacheFile;
- (BOOL)_setupCache:(id)arg1;
- (BOOL)_readCacheManagementFile;
- (void)_asyncImplementExpirationPolicy;
- (void)_releaseCacheBytes:(long long)arg1;
- (id)_cacheEntriesSortedByAccessTime:(id)arg1;
- (id)_uniqueIDForCacheEntry:(id)arg1;
- (void)_logError:(id)arg1;
- (void)_incrementCacheHits:(BOOL)arg1 incrementCacheRequests:(BOOL)arg2;
- (BOOL)_deleteCacheFileAndEntry:(id)arg1;
- (BOOL)_deleteCacheFileAndEntryWithoutLock:(id)arg1;
- (id)_cacheManagementFilePath;
- (long long)_cacheDataFileSizeForPath:(id)arg1;
- (id)_cacheDataFilePath:(id)arg1;
- (id)_cacheEntryForUniqueID:(id)arg1;
- (id)_immutableCacheManagementData;
- (id)_allCacheEntries;
- (void)_addSpecialFilesToCacheDirectory;

@end

