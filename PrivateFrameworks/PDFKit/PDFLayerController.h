//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSAccessibility.h"
#import "PDFAccessibilityNodeParent.h"
#import "PDFHUDLayerControllerDelegate.h"

@class CALayer, NSArray, NSString, NSURL, PDFDocument, PDFLayerControllerPrivate;

@interface PDFLayerController : NSObject <PDFAccessibilityNodeParent, NSAccessibility, PDFHUDLayerControllerDelegate>
{
    PDFLayerControllerPrivate *_private;
}

- (void).cxx_destruct;
@property(copy) NSArray *accessibilityChildren;
- (BOOL)accessibilityShouldUseUniqueId;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityElementForAnnotation:(id)arg1;
- (struct CGPoint)accessibilityConvertPointFromRootView:(struct CGPoint)arg1 withPageIndex:(long long)arg2;
- (struct CGRect)accessibilityConvertBoundsToRootView:(struct CGRect)arg1 withPageIndex:(long long)arg2;
- (id)accessibilityFocusedUIElement;
@property(copy) NSString *accessibilityLabel;
@property(copy) NSString *accessibilitySubrole;
@property(copy) NSString *accessibilityRoleDescription;
@property(copy) NSString *accessibilityRole;
@property struct CGRect accessibilityFrame;
@property __weak id accessibilityWindow;
@property __weak id accessibilityTopLevelUIElement;
@property(nonatomic) __weak id accessibilityParent; // @dynamic accessibilityParent;
@property(getter=isAccessibilityElement) BOOL accessibilityElement;
- (BOOL)accessibilityIsIgnored;
- (_Bool)flipsTileContents;
- (struct CGRect)convertRootViewRect:(struct CGRect)arg1 toPageLayer:(id)arg2;
- (struct CGRect)convertRectToRootView:(struct CGRect)arg1 fromPageLayer:(id)arg2;
- (struct CGRect)rootViewBounds;
- (id)_convertEvent:(id)arg1 toPagePoint:(struct CGPoint *)arg2;
- (void)_updateDocumentLayerWithDelegateCalls;
- (void)_updateDocumentLayer;
- (void)_setupDocumentLayer;
- (id)_truncateString:(id)arg1 toLength:(long long)arg2;
- (long long)_areaOfInterestForMouse:(id)arg1;
- (long long)_getCursorTypeForAreaOfInterest:(long long)arg1;
- (id)annotationFollowing:(id)arg1 wrapAround:(BOOL)arg2;
- (id)annotationPreceding:(id)arg1 wrapAround:(BOOL)arg2;
- (void)openWithPreview;
- (void)saveToPDF;
- (void)_setAutoSize:(id)arg1;
- (void)_setActualSize:(id)arg1;
- (void)_setDoublePageScrolling:(id)arg1;
- (void)_setDoublePage:(id)arg1;
- (void)_setSinglePageScrolling:(id)arg1;
- (void)_setSinglePage:(id)arg1;
- (void)_searchInDictionary:(id)arg1;
- (void)_searchInSpotlight:(id)arg1;
- (void)_performWebSearch:(id)arg1;
- (void)setCurrentPage:(id)arg1;
- (id)determineCurrentPage;
- (void)copyLink:(id)arg1;
- (void)copy:(id)arg1;
- (void)finishAutoscroll:(id)arg1;
- (void)continueAutoscroll:(id)arg1;
- (void)autoscrollTimerFired:(id)arg1;
- (void)beginAutoscroll:(id)arg1;
- (id)findBox:(id)arg1;
- (void)gotoDestinationNoPush:(id)arg1;
- (void)gotoAnnotation:(id)arg1;
- (void)gotoPage:(id)arg1;
- (void)forceGotoPage:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)gotoFirstPage;
- (void)gotoLastPage;
- (void)windowUp;
- (void)windowDown;
- (void)pageUp;
- (void)pageDown;
- (id)previousPage;
- (id)nextPage;
- (id)input:(id)arg1 defaultValue:(id)arg2;
- (void)interactWithAnnotation:(id)arg1;
- (id)rectsForSelectionInLayoutSpace:(id)arg1;
- (void)continueMarqueeTextSelection:(id)arg1;
- (void)beginMarqueeTextSelection:(id)arg1;
- (void)continueStandardTextSelection:(id)arg1;
- (void)beginStandardTextSelection:(id)arg1;
- (void)_finishTrackingPDFScannerResult:(id)arg1;
- (void)_continueTrackingPDFScannerResult:(id)arg1;
- (void)_trackMouse:(id)arg1 forPDFScannerResult:(id)arg2 onPage:(id)arg3 atPoint:(struct CGPoint)arg4;
- (void)doButtonHit:(id)arg1;
- (void)performAction:(id)arg1;
- (int)recursivelyPerformNextActions:(id)arg1 index:(int)arg2 count:(int)arg3;
- (void)annotationHit:(id)arg1;
- (void)handleButtonHit:(id)arg1;
- (void)_finishTrackingAnnotation:(id)arg1;
- (void)_continueTrackingAnnotation:(id)arg1;
- (void)_trackMouse:(id)arg1 forAnnotation:(id)arg2;
- (struct NSEdgeInsets)pageBreakMargins;
- (long long)displayMode;
- (id)colorSpace;
- (void)activateNextAnnotation:(BOOL)arg1;
- (void)formChanged:(id)arg1;
- (struct CGRect)boundsForAnnotation:(id)arg1;
- (void)attemptToUnlockWithPassword:(id)arg1;
- (id)passwordPrompt;
- (id)passwordInstruction;
- (BOOL)documentIsLocked;
- (id)findString:(id)arg1 caseSensitive:(BOOL)arg2 highlightMatches:(BOOL)arg3;
- (void)setSearchSelection:(id)arg1;
- (id)searchSelection;
- (void)setHighlights:(id)arg1;
- (id)highlights;
- (void)selectAll;
- (void)copySelection;
- (id)getSelectionForWordAtPoint:(struct CGPoint)arg1;
- (void)searchInDictionaryWithSelection:(id)arg1;
- (void)setCurrentSelection:(id)arg1;
- (id)currentSelection;
- (void)goToRect:(struct CGRect)arg1 onPage:(id)arg2;
- (void)gotoPreviousPage;
- (void)gotoNextPage;
- (void)gotoDestination:(id)arg1;
- (void)gotoSelection:(id)arg1;
- (unsigned long long)currentPageIndex;
- (unsigned long long)lastPageIndex;
- (_Bool)keyDown:(id)arg1;
- (void)internalForceTileRefresh;
- (void)printActivePageAnnotations;
- (void)printActivePageInfo;
- (void)printAccessibilityTree;
- (void)resetAccessibilityTree;
- (void)drawAccessibilityNodeType:(int)arg1 enableDrawing:(_Bool)arg2;
- (_Bool)isDrawingAccessibilityNodeType:(int)arg1;
- (void)colorWidgetBackgrounds:(_Bool)arg1;
- (void)setEnablePageShadows:(_Bool)arg1;
- (BOOL)validateDebugAccessibilityMenuItem:(id)arg1;
- (void)debugAccessibilityMenu:(id)arg1;
- (BOOL)validateDebugMenuItem:(id)arg1;
- (void)debugMenu:(id)arg1;
- (id)menuForEvent:(id)arg1 withUserInterfaceLayoutDirection:(long long)arg2;
- (id)menuForEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)scrollWithDelta:(struct CGSize)arg1;
- (void)setScrollPosition:(struct CGPoint)arg1;
- (struct CGPoint)scrollPosition;
- (void)_scrollToPoint:(struct CGPoint)arg1;
- (void)magnifyWithMagnification:(double)arg1 atPoint:(struct CGPoint)arg2 immediately:(BOOL)arg3;
- (void)snapshotInContext:(struct CGContext *)arg1;
- (id)layout;
- (struct CGSize)contentSizeRespectingZoom;
- (struct CGSize)contentSize;
- (void)setDeviceColorSpace:(struct CGColorSpace *)arg1;
- (struct CGColorSpace *)deviceColorSpace;
- (void)setDeviceScaleFactor:(double)arg1;
- (double)deviceScaleFactor;
- (void)setContentScaleFactor:(double)arg1;
- (double)contentScaleFactor;
- (id)currentPage;
- (void)setDisplayMode:(int)arg1;
- (void)_updateAutoScale;
- (double)_autoScaleFactor;
- (struct CGRect)frame;
- (void)setFrameSize:(struct CGSize)arg1;
@property(nonatomic) id <PDFLayerControllerDelegate> delegate;
@property(readonly, nonatomic) CALayer *documentLayer;
@property(retain, nonatomic) NSString *URLFragment;
@property(retain, nonatomic) PDFDocument *document;
@property(retain, nonatomic) CALayer *parentLayer;
- (void)dealloc;
- (id)init;

// Remaining properties
@property struct CGPoint accessibilityActivationPoint;
@property(copy) NSArray *accessibilityAllowedValues;
@property(getter=isAccessibilityAlternateUIVisible) BOOL accessibilityAlternateUIVisible;
@property(retain) id accessibilityApplicationFocusedUIElement;
@property(retain) id accessibilityCancelButton;
@property(copy) NSArray *accessibilityChildrenInNavigationOrder;
@property(retain) id accessibilityClearButton;
@property(retain) id accessibilityCloseButton;
@property long long accessibilityColumnCount;
@property(copy) NSArray *accessibilityColumnHeaderUIElements;
@property struct _NSRange accessibilityColumnIndexRange;
@property(copy) NSArray *accessibilityColumnTitles;
@property(copy) NSArray *accessibilityColumns;
@property(copy) NSArray *accessibilityContents;
@property(retain) id accessibilityCriticalValue;
@property(copy) NSArray *accessibilityCustomActions;
@property(copy) NSArray *accessibilityCustomRotors;
@property(retain) id accessibilityDecrementButton;
@property(retain) id accessibilityDefaultButton;
@property(getter=isAccessibilityDisclosed) BOOL accessibilityDisclosed;
@property __weak id accessibilityDisclosedByRow;
@property(retain) id accessibilityDisclosedRows;
@property long long accessibilityDisclosureLevel;
@property(copy) NSString *accessibilityDocument;
@property(getter=isAccessibilityEdited) BOOL accessibilityEdited;
@property(getter=isAccessibilityEnabled) BOOL accessibilityEnabled;
@property(getter=isAccessibilityExpanded) BOOL accessibilityExpanded;
@property __weak id accessibilityExtrasMenuBar;
@property(copy) NSString *accessibilityFilename;
@property(getter=isAccessibilityFocused) BOOL accessibilityFocused;
@property(retain) id accessibilityFocusedWindow;
@property(getter=isAccessibilityFrontmost) BOOL accessibilityFrontmost;
@property(retain) id accessibilityFullScreenButton;
@property(retain) id accessibilityGrowArea;
@property(copy) NSArray *accessibilityHandles;
@property(retain) id accessibilityHeader;
@property(copy) NSString *accessibilityHelp;
@property(getter=isAccessibilityHidden) BOOL accessibilityHidden;
@property(retain) id accessibilityHorizontalScrollBar;
@property(copy) NSString *accessibilityHorizontalUnitDescription;
@property long long accessibilityHorizontalUnits;
@property(copy) NSString *accessibilityIdentifier;
@property(retain) id accessibilityIncrementButton;
@property long long accessibilityIndex;
@property long long accessibilityInsertionPointLineNumber;
@property(copy) NSArray *accessibilityLabelUIElements;
@property float accessibilityLabelValue;
@property(copy) NSArray *accessibilityLinkedUIElements;
@property(getter=isAccessibilityMain) BOOL accessibilityMain;
@property(retain) id accessibilityMainWindow;
@property(retain) id accessibilityMarkerGroupUIElement;
@property(copy) NSString *accessibilityMarkerTypeDescription;
@property(copy) NSArray *accessibilityMarkerUIElements;
@property(retain) id accessibilityMarkerValues;
@property(retain) id accessibilityMaxValue;
@property __weak id accessibilityMenuBar;
@property(retain) id accessibilityMinValue;
@property(retain) id accessibilityMinimizeButton;
@property(getter=isAccessibilityMinimized) BOOL accessibilityMinimized;
@property(getter=isAccessibilityModal) BOOL accessibilityModal;
@property(copy) NSArray *accessibilityNextContents;
@property long long accessibilityNumberOfCharacters;
@property(getter=isAccessibilityOrderedByRow) BOOL accessibilityOrderedByRow;
@property long long accessibilityOrientation;
@property(retain) id accessibilityOverflowButton;
@property(copy) NSString *accessibilityPlaceholderValue;
@property(copy) NSArray *accessibilityPreviousContents;
@property(getter=isAccessibilityProtectedContent) BOOL accessibilityProtectedContent;
@property(retain) id accessibilityProxy;
@property(getter=isAccessibilityRequired) BOOL accessibilityRequired;
@property long long accessibilityRowCount;
@property(copy) NSArray *accessibilityRowHeaderUIElements;
@property struct _NSRange accessibilityRowIndexRange;
@property(copy) NSArray *accessibilityRows;
@property long long accessibilityRulerMarkerType;
@property(retain) id accessibilitySearchButton;
@property(retain) id accessibilitySearchMenu;
@property(getter=isAccessibilitySelected) BOOL accessibilitySelected;
@property(copy) NSArray *accessibilitySelectedCells;
@property(copy) NSArray *accessibilitySelectedChildren;
@property(copy) NSArray *accessibilitySelectedColumns;
@property(copy) NSArray *accessibilitySelectedRows;
@property(copy) NSString *accessibilitySelectedText;
@property struct _NSRange accessibilitySelectedTextRange;
@property(copy) NSArray *accessibilitySelectedTextRanges;
@property(copy) NSArray *accessibilityServesAsTitleForUIElements;
@property struct _NSRange accessibilitySharedCharacterRange;
@property(copy) NSArray *accessibilitySharedFocusElements;
@property(copy) NSArray *accessibilitySharedTextUIElements;
@property(retain) id accessibilityShownMenu;
@property long long accessibilitySortDirection;
@property(copy) NSArray *accessibilitySplitters;
@property(copy) NSArray *accessibilityTabs;
@property(copy) NSString *accessibilityTitle;
@property __weak id accessibilityTitleUIElement;
@property(retain) id accessibilityToolbarButton;
@property(copy) NSURL *accessibilityURL;
@property(copy) NSString *accessibilityUnitDescription;
@property long long accessibilityUnits;
@property(retain) id accessibilityValue;
@property(copy) NSString *accessibilityValueDescription;
@property(retain) id accessibilityVerticalScrollBar;
@property(copy) NSString *accessibilityVerticalUnitDescription;
@property long long accessibilityVerticalUnits;
@property(copy) NSArray *accessibilityVisibleCells;
@property struct _NSRange accessibilityVisibleCharacterRange;
@property(copy) NSArray *accessibilityVisibleChildren;
@property(copy) NSArray *accessibilityVisibleColumns;
@property(copy) NSArray *accessibilityVisibleRows;
@property(retain) id accessibilityWarningValue;
@property(copy) NSArray *accessibilityWindows;
@property(retain) id accessibilityZoomButton;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

