//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <ConsoleKit/CSKStreamSource.h>

@class CSKDatabaseHandle, CSKLoadRange, CSKStreamArchiveStatistics, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSString, NSTimeZone, NSURL, OSLogEventSource, OSLogEventStore, OSLogEventStream, OSLogEventStreamPosition;

@interface CSKStreamSQLSource : CSKStreamSource
{
    NSObject<OS_dispatch_queue> *_sql_dispatchQueue;
    NSObject<OS_dispatch_queue> *_osLogFetch_dispatchQueue;
    NSObject<OS_dispatch_queue> *_store_dispatchQueue;
    NSObject<OS_dispatch_group> *_group;
    CSKDatabaseHandle *_logArchive_DB;
    CSKDatabaseHandle *_messagesReadonlyDBHandle;
    CSKDatabaseHandle *_activitiesReadonlyDBHandle;
    CSKDatabaseHandle *_searchMessagesDBHandle;
    CSKDatabaseHandle *_searchActivitiesDBHandle;
    CSKDatabaseHandle *_sortDBHandle;
    CSKLoadRange *_loadRange;
    CSKLoadRange *_previousLoadRange;
    struct sqlite3_stmt *_insertMessageStament_Cache;
    struct sqlite3_stmt *_insertActivityStament_Cache;
    struct sqlite3_stmt *_insertChildrenActivityStament_Cache;
    struct sqlite3_stmt *_insertProcessStament_Cache;
    struct sqlite3_stmt *_insertLibraryStament_Cache;
    struct sqlite3_stmt *_insertTitleStament_Cache;
    struct sqlite3_stmt *_insertCategoryStament_Cache;
    NSMutableDictionary *_pidSet;
    NSMutableDictionary *_libraryIDSet;
    NSMutableDictionary *_titleIDSet;
    NSMutableDictionary *_categoryIDSet;
    NSString *_tzName;
    NSMutableDictionary *_streamTimeZones;
    BOOL _skipUIUpdatesForEvents;
    BOOL _ignoresStatistics;
    BOOL _wantsToStop;
    BOOL _useBigTimeChunk;
    NSURL *_archiveURL;
    unsigned long long _loadingStatus;
    NSDictionary *_loadInfo;
    CSKLoadRange *_maxLoadRange;
    CSKLoadRange *_currentLoadRange;
    CSKStreamArchiveStatistics *_processStatistics;
    NSTimeZone *_streamStartTimeZone;
    NSTimeZone *_streamEndTimeZone;
    NSTimeZone *_streamTimeZone;
    NSDate *_streamStartDate;
    NSDate *_streamEndDate;
    NSDate *_startDate;
    NSDate *_endDate;
    NSDate *_previousEndDate;
    OSLogEventStreamPosition *_previousStreamPosition;
    unsigned long long _previousTotal;
    double _timeChunk;
    NSMutableArray *_orderedEvents;
    OSLogEventStore *_eventStore;
    OSLogEventSource *_eventSource;
    OSLogEventStream *_stream;
    OSLogEventStreamPosition *_position;
}

@property(retain, nonatomic) OSLogEventStreamPosition *position; // @synthesize position=_position;
@property(retain, nonatomic) OSLogEventStream *stream; // @synthesize stream=_stream;
@property(retain, nonatomic) OSLogEventSource *eventSource; // @synthesize eventSource=_eventSource;
@property(retain, nonatomic) OSLogEventStore *eventStore; // @synthesize eventStore=_eventStore;
@property(retain, nonatomic) NSMutableArray *orderedEvents; // @synthesize orderedEvents=_orderedEvents;
@property(nonatomic) BOOL useBigTimeChunk; // @synthesize useBigTimeChunk=_useBigTimeChunk;
@property(nonatomic) double timeChunk; // @synthesize timeChunk=_timeChunk;
@property(nonatomic) unsigned long long previousTotal; // @synthesize previousTotal=_previousTotal;
@property(retain, nonatomic) OSLogEventStreamPosition *previousStreamPosition; // @synthesize previousStreamPosition=_previousStreamPosition;
@property(retain, nonatomic) NSDate *previousEndDate; // @synthesize previousEndDate=_previousEndDate;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) BOOL wantsToStop; // @synthesize wantsToStop=_wantsToStop;
@property(retain, nonatomic) NSDate *streamEndDate; // @synthesize streamEndDate=_streamEndDate;
@property(retain, nonatomic) NSDate *streamStartDate; // @synthesize streamStartDate=_streamStartDate;
@property(retain, nonatomic) NSTimeZone *streamTimeZone; // @synthesize streamTimeZone=_streamTimeZone;
@property(retain, nonatomic) NSTimeZone *streamEndTimeZone; // @synthesize streamEndTimeZone=_streamEndTimeZone;
@property(retain, nonatomic) NSTimeZone *streamStartTimeZone; // @synthesize streamStartTimeZone=_streamStartTimeZone;
@property(retain, nonatomic) CSKStreamArchiveStatistics *processStatistics; // @synthesize processStatistics=_processStatistics;
@property(copy, nonatomic) CSKLoadRange *currentLoadRange; // @synthesize currentLoadRange=_currentLoadRange;
@property(retain, nonatomic) CSKLoadRange *maxLoadRange; // @synthesize maxLoadRange=_maxLoadRange;
@property(retain, nonatomic) CSKLoadRange *loadRange; // @synthesize loadRange=_loadRange;
@property(retain, nonatomic) NSDictionary *loadInfo; // @synthesize loadInfo=_loadInfo;
@property(nonatomic) BOOL ignoresStatistics; // @synthesize ignoresStatistics=_ignoresStatistics;
@property(nonatomic) unsigned long long loadingStatus; // @synthesize loadingStatus=_loadingStatus;
@property(readonly, nonatomic) NSDictionary *streamTimeZones; // @synthesize streamTimeZones=_streamTimeZones;
@property(readonly, nonatomic) NSURL *archiveURL; // @synthesize archiveURL=_archiveURL;
@property(readonly, nonatomic) CSKDatabaseHandle *sortDBHandle; // @synthesize sortDBHandle=_sortDBHandle;
@property(readonly, nonatomic) CSKDatabaseHandle *searchActivitiesDBHandle; // @synthesize searchActivitiesDBHandle=_searchActivitiesDBHandle;
@property(readonly, nonatomic) CSKDatabaseHandle *activitiesReadonlyDBHandle; // @synthesize activitiesReadonlyDBHandle=_activitiesReadonlyDBHandle;
@property(readonly, nonatomic) CSKDatabaseHandle *searchMessagesDBHandle; // @synthesize searchMessagesDBHandle=_searchMessagesDBHandle;
@property(readonly, nonatomic) CSKDatabaseHandle *messagesReadonlyDBHandle; // @synthesize messagesReadonlyDBHandle=_messagesReadonlyDBHandle;
- (void).cxx_destruct;
- (id)_cskEventFromLogEventProxy:(id)arg1;
- (void)_updateDBWithStreamEvents:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_resetAllCachedObjects;
- (void)_startEventStreamWithLoadRange:(id)arg1;
- (BOOL)_canReadLogsInReverse;
- (id)loadRangeValue;
- (void)_createDatabaseForArchiveURL:(id)arg1 inMemory:(BOOL)arg2 backgroundCopy:(BOOL)arg3;
- (id)_rangeToLoadFromCustomRange:(id)arg1;
- (void)_updateEndDateAndTimezone;
- (void)_updateStartDateAndTimezone;
- (void)dealloc;
- (void)finish;
- (void)stop;
- (void)loadMoreWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)resume;
- (id)availableLoadRanges;
- (id)initWithArchiveURL:(id)arg1 loadInfo:(id)arg2 inMemory:(BOOL)arg3 backgroundCopy:(BOOL)arg4;
- (id)initWithArchiveURL:(id)arg1 loadInfo:(id)arg2;
- (id)initWithArchiveURL:(id)arg1;
- (id)init;

@end

