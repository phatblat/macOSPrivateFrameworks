//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TNodeObserverProtocol.h"

@class FI_TBrowserContainerController, FI_TWindowHistoryEntry, NSString;

__attribute__((visibility("hidden")))
@interface FI_TWindowHistory : NSObject <TNodeObserverProtocol>
{
    struct TNSRef<NSMutableArray, void> _historyList;
    long long _historyPosition;
    struct shared_ptr<TNodeObserverCocoaBridge> _nodeObserver;
    struct TNSWeakPtr<FI_TBrowserContainerController, void> _weakController;
}

@property(nonatomic) long long historyPosition; // @synthesize historyPosition=_historyPosition;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)nodeObserver:(struct TNodeObserver *)arg1 nodeMoved:(const struct TFENode *)arg2;
- (void)nodeObserver:(struct TNodeObserver *)arg1 nodeDeleted:(const struct TFENode *)arg2 fromObservedNode:(const struct TFENode *)arg3;
- (id)currentEntry;
- (void)updateCurrentEntryWindowState:(id)arg1;
- (void)startObservingNodes:(const struct TFENodeVector *)arg1;
- (void)stopObservingNodes:(const struct TFENodeVector *)arg1;
- (void)removeNodeFromHistory:(const struct TFENode *)arg1;
- (void)addToHistory:(const struct TFENodeVector *)arg1 windowState:(id)arg2;
@property(readonly, nonatomic) FI_TWindowHistoryEntry *next;
@property(readonly, nonatomic) FI_TWindowHistoryEntry *previous;
@property(readonly, nonatomic) _Bool atEnd;
@property(readonly, nonatomic) _Bool atBeginning;
- (long long)endPosition;
- (void)removeEntry:(id)arg1;
- (id)entryAtPosition:(long long)arg1;
@property(readonly, nonatomic) long long entryCount;
@property __weak FI_TBrowserContainerController *controller; // @dynamic controller;
- (void)aboutToTearDown;
- (void)dealloc;
- (id)initWithBrowserContainer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

