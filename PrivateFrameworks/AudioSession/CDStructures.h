//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVAudioHardwareStereoPair {
    unsigned int _field1;
    unsigned int _field2;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct DataSource;

struct HardwareObjectBase;

struct IOClient;

struct IOController;

struct KVOMutex;

struct Port;

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SampleRateRange {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2[1];
    double _field3;
    double _field4;
};

struct SelectorControlItem {
    CDUnknownFunctionPointerType *_vptr$Base;
    unsigned int _has_bits[1];
    struct xstring _name;
    unsigned int _ID;
    unsigned int _kind;
};

struct Session;

struct SessionManager;

struct Stream;

struct __shared_weak_count;

struct shared_ptr<as::client::DataSource> {
    struct DataSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::HardwareObjectBase> {
    struct HardwareObjectBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::IOClient> {
    struct IOClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::IOController> {
    struct IOController *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<as::client::KVOMutex> {
    struct KVOMutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::Port> {
    struct Port *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::SessionManager> {
    struct SessionManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<as::client::Stream> {
    struct Stream *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr_mutex<as::client::KVOMutex> {
    struct shared_ptr<as::client::KVOMutex> mMutex;
};

struct string_storage;

struct synchronized<std::__1::shared_ptr<as::client::DataSource>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::DataSource>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    shared_ptr_29596208 mObject;
};

struct synchronized<std::__1::shared_ptr<as::client::HardwareObjectBase>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::HardwareObjectBase>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    shared_ptr_b419fc97 mObject;
};

struct synchronized<std::__1::shared_ptr<as::client::Port>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::Port>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    shared_ptr_7f50e664 mObject;
};

struct synchronized<std::__1::shared_ptr<as::client::Session>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::Session>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    struct shared_ptr<as::client::Session> mObject;
};

struct synchronized<std::__1::shared_ptr<as::client::SessionManager>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::SessionManager>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    shared_ptr_a346ac95 mObject;
};

struct synchronized<std::__1::shared_ptr<as::client::Stream>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::Stream>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    shared_ptr_56b37834 mObject;
};

struct synchronized<std::__1::weak_ptr<as::client::IOController>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::weak_ptr<as::client::IOController>>> {
    struct shared_ptr_mutex<as::client::KVOMutex> mMutex;
    struct weak_ptr<as::client::IOController> mObject;
};

struct weak_ptr<as::client::IOController> {
    struct IOController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct xstring {
    struct string_storage *mStorage;
    struct __CFString *mCFString;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<as::client::DataSource> {
    struct DataSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_29596208;

typedef struct shared_ptr<as::client::HardwareObjectBase> {
    struct HardwareObjectBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b419fc97;

typedef struct shared_ptr<as::client::IOClient> {
    struct IOClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_883eff98;

typedef struct shared_ptr<as::client::IOController> {
    struct IOController *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0617b8fa;

typedef struct shared_ptr<as::client::Port> {
    struct Port *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7f50e664;

typedef struct shared_ptr<as::client::SessionManager> {
    struct SessionManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a346ac95;

typedef struct shared_ptr<as::client::Stream> {
    struct Stream *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_56b37834;

