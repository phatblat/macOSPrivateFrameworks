//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PhotoPrintProduct/KHBaseLayer.h>

@class CALayer, CAShapeLayer, KHFrame, KHImage, NSLock, NSMutableArray;

@interface KHPhotoContentLayer : KHBaseLayer
{
    struct CGColor *_contentBackgroundColor;
    BOOL _editing;
    BOOL _panArrowsHidden;
    KHFrame *_photoFrame;
    unsigned long long _contentClipMode;
    double _maskOutsetLimit;
    id <KHPhotoContentLayerDelegate> _photoContentDelegate;
    CALayer *_panArrowsLayer;
    CALayer *_trimmingLayer;
    CALayer *_clippingLayer;
    CALayer *_imageLayer;
    CAShapeLayer *_imageMaskLayer;
    NSMutableArray *_backfillOperations;
    NSLock *_backfillOperationsLock;
    KHImage *_contentImage;
    struct CGSize _requestedImageSize;
    struct CGSize _imageSize;
    CDStruct_6b31c1a5 _bleedInsets;
}

+ (id)placeholderBackgroundColor;
+ (id)maskBackgroundColor;
@property struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property struct CGSize requestedImageSize; // @synthesize requestedImageSize=_requestedImageSize;
@property(retain, nonatomic) KHImage *contentImage; // @synthesize contentImage=_contentImage;
@property(readonly, nonatomic) NSLock *backfillOperationsLock; // @synthesize backfillOperationsLock=_backfillOperationsLock;
@property(readonly, nonatomic) NSMutableArray *backfillOperations; // @synthesize backfillOperations=_backfillOperations;
@property(readonly, nonatomic) CAShapeLayer *imageMaskLayer; // @synthesize imageMaskLayer=_imageMaskLayer;
@property(readonly, nonatomic) CALayer *imageLayer; // @synthesize imageLayer=_imageLayer;
@property(readonly, nonatomic) CALayer *clippingLayer; // @synthesize clippingLayer=_clippingLayer;
@property(readonly, nonatomic) CALayer *trimmingLayer; // @synthesize trimmingLayer=_trimmingLayer;
@property(readonly, nonatomic) CALayer *panArrowsLayer; // @synthesize panArrowsLayer=_panArrowsLayer;
@property(nonatomic) id <KHPhotoContentLayerDelegate> photoContentDelegate; // @synthesize photoContentDelegate=_photoContentDelegate;
@property(nonatomic) BOOL panArrowsHidden; // @synthesize panArrowsHidden=_panArrowsHidden;
@property(nonatomic, getter=isEditing) BOOL editing; // @synthesize editing=_editing;
@property(nonatomic) double maskOutsetLimit; // @synthesize maskOutsetLimit=_maskOutsetLimit;
@property(nonatomic) unsigned long long contentClipMode; // @synthesize contentClipMode=_contentClipMode;
@property(nonatomic) CDStruct_6b31c1a5 bleedInsets; // @synthesize bleedInsets=_bleedInsets;
@property(retain, nonatomic) KHFrame *photoFrame; // @synthesize photoFrame=_photoFrame;
- (void)layoutSublayers;
- (void)setNeedsDisplay;
- (void)setContentsScale:(double)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)commitEditing;
- (void)setZoom:(double)arg1;
- (void)setTranslation:(struct CGPoint)arg1;
- (double)maximumTranslationFromEdge:(unsigned int)arg1;
- (void)backfillIfNecessaryInOperationQueue:(id)arg1;
- (void)willDisappear;
- (void)willAppear;
- (struct CGImage *)filterImage:(struct CGImage *)arg1 withSize:(struct CGSize)arg2;
- (void)clearContents;
- (void)cancelBackfill;
- (void)backfillInOperationQueue:(id)arg1;
- (void)backfillInOperation:(id)arg1;
- (BOOL)needsBackfill;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(nonatomic) struct CGColor *contentBackgroundColor;
@property(readonly, nonatomic) BOOL needsPlaceholderImage;
- (void)updatePanArrows;
- (void)updateImage;
- (void)updateContentsScale;
- (id)imageForSize:(struct CGSize)arg1;
- (id)thumbnailImage;
- (id)adjustedImage:(id)arg1;
- (id)placeholderImage;
@property(readonly, nonatomic) struct CGRect imageRect;
@property(readonly, nonatomic) CDStruct_e9d111b7 adjustedPhotoPan;
- (id)maskTileLayer;
- (struct CGPath *)visiblePathForImageRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;

@end

