//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface KHGeometry : NSObject
{
}

+ (struct CGSize)physicalSizeForRelativeSize:(CDStruct_c8ab8c46)arg1 inScaledRect:(struct CGRect)arg2 scale:(double)arg3;
+ (struct CGPoint)physicalPointForRelativePoint:(CDStruct_e9d111b7)arg1 inScaledRect:(struct CGRect)arg2 scale:(double)arg3;
+ (CDStruct_6b31c1a5)physicalRectInsetForRelativeRectInset:(CDStruct_6b31c1a5)arg1 inScaledRect:(struct CGRect)arg2 scale:(double)arg3;
+ (id)stringFromRectInset:(CDStruct_6b31c1a5)arg1;
+ (CDStruct_6b31c1a5)rectInsetFromString:(id)arg1;
+ (id)stringFromEllipse:(CDStruct_5df4926e)arg1;
+ (CDStruct_5df4926e)ellipseFromString:(id)arg1;
+ (id)stringFromRect:(CDStruct_5df4926e)arg1;
+ (CDStruct_5df4926e)rectFromString:(id)arg1;
+ (id)stringFromLine:(CDStruct_ed7df209)arg1;
+ (CDStruct_ed7df209)lineFromString:(id)arg1;
+ (id)stringFromSize:(CDStruct_c8ab8c46)arg1;
+ (CDStruct_c8ab8c46)sizeFromString:(id)arg1;
+ (id)stringFromPoint:(CDStruct_e9d111b7)arg1;
+ (CDStruct_e9d111b7)pointFromString:(id)arg1;
+ (struct CGRect)proportionallyInsetRect:(struct CGRect)arg1 top:(double)arg2 left:(double)arg3 bottom:(double)arg4 right:(double)arg5 fromImageSize:(struct CGSize)arg6;
+ (struct CGRect)alignedRectAbout:(struct CGPoint)arg1 withSize:(struct CGSize)arg2 horizontalAlignment:(unsigned long long)arg3 verticalAlignment:(unsigned long long)arg4 gap:(struct CGSize)arg5;
+ (struct CGRect)floorNSRect:(struct CGRect)arg1;
+ (struct CGRect)scaledNSRect:(struct CGRect)arg1 atScale:(double)arg2;
+ (struct CGRect)boundingRectForRect:(struct CGRect)arg1 rotatedByRadians:(double)arg2;
+ (struct CGRect)boundingRectForRect:(struct CGRect)arg1 rotatedByDegrees:(double)arg2;
+ (struct CGRect)rightHalfOfRect:(struct CGRect)arg1;
+ (struct CGRect)leftHalfOfRect:(struct CGRect)arg1;
+ (struct CGRect)standardToCenterOriginRect:(struct CGRect)arg1;
+ (struct CGRect)centerToStandardOriginRect:(struct CGRect)arg1;
+ (struct CGRect)rectRelativeToOrigin:(struct CGPoint)arg1 rect:(struct CGRect)arg2;
+ (struct CGRect)fillRectForAspectRatio:(double)arg1 inRect:(struct CGRect)arg2;
+ (struct CGRect)enclosedRectForRect:(struct CGRect)arg1 withAspectRatio:(double)arg2;
+ (struct CGRect)floorRect:(struct CGRect)arg1;
+ (struct CGRect)scaledRect:(struct CGRect)arg1 atScale:(double)arg2;
+ (BOOL)size:(struct CGSize)arg1 isLargerThanSize:(struct CGSize)arg2;
+ (struct CGSize)roundSize:(struct CGSize)arg1;
+ (struct CGSize)floorSize:(struct CGSize)arg1;
+ (struct CGSize)ceilSize:(struct CGSize)arg1;
+ (struct CGPoint)roundPoint:(struct CGPoint)arg1;
+ (struct CGPoint)floorPoint:(struct CGPoint)arg1;
+ (double)angleFromRadians:(double)arg1;
+ (double)radiansFromAngle:(double)arg1;

@end

