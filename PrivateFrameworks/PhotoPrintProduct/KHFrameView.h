//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UXView.h"

#import "KHFrameContentLayerProvider.h"
#import "KHPhotoContentLayerDelegate.h"
#import "NSDraggingDestination.h"
#import "NSDraggingSource.h"
#import "NSGestureRecognizerDelegate.h"

@class KHBaseLayer, KHFrame, KHLayout, KHLayoutView, KHLongClickGestureRecognizer, KHMapViewController, KHSelectionGestureRecognizer, KHSelectionManager, KHTextView, NSArray, NSButton, NSClickGestureRecognizer, NSImage, NSMapTable, NSMutableSet, NSPanGestureRecognizer, NSString, NSView, UXCollectionView;

@interface KHFrameView : UXView <KHPhotoContentLayerDelegate, KHFrameContentLayerProvider, NSGestureRecognizerDelegate, NSDraggingDestination, NSDraggingSource>
{
    KHBaseLayer *_hoverLayer;
    CDStruct_e9d111b7 _initialPan;
    struct CGRect _initialPhotoDraggingFrame;
    struct CGPoint _tearOffset;
    BOOL _editing;
    BOOL _hoverVisible;
    BOOL _contentChangeDisabled;
    BOOL _contextualMenuDisabled;
    BOOL _contentWarningVisible;
    BOOL _boundsVisible;
    BOOL _contentWarningNeedsUpdate;
    BOOL _updatingFrameViews;
    KHFrame *_frameObject;
    id <KHFrameViewContainerDelegate> _containerDelegate;
    KHTextView *_textView;
    NSView *_textViewContainer;
    NSPanGestureRecognizer *_panRecognizer;
    KHSelectionGestureRecognizer *_selectionRecognizer;
    KHLongClickGestureRecognizer *_longClickRecognizer;
    NSClickGestureRecognizer *_doubleClickRecognizer;
    NSButton *_contentWarningButton;
    NSMutableSet *_recycledFrameViews;
    KHMapViewController *_mapViewController;
    KHFrame *_draggingFrameObject;
    UXCollectionView *_enclosingCollectionView;
    NSMapTable *_frameViewMap;
    struct CGSize _previousSize;
}

+ (Class)layerClass;
@property(readonly, nonatomic) NSMapTable *frameViewMap; // @synthesize frameViewMap=_frameViewMap;
@property(nonatomic) __weak UXCollectionView *enclosingCollectionView; // @synthesize enclosingCollectionView=_enclosingCollectionView;
@property(retain, nonatomic) KHFrame *draggingFrameObject; // @synthesize draggingFrameObject=_draggingFrameObject;
@property(retain, nonatomic) KHMapViewController *mapViewController; // @synthesize mapViewController=_mapViewController;
@property(retain, nonatomic) NSMutableSet *recycledFrameViews; // @synthesize recycledFrameViews=_recycledFrameViews;
@property(retain, nonatomic) NSButton *contentWarningButton; // @synthesize contentWarningButton=_contentWarningButton;
@property(retain, nonatomic) NSClickGestureRecognizer *doubleClickRecognizer; // @synthesize doubleClickRecognizer=_doubleClickRecognizer;
@property(retain, nonatomic) KHLongClickGestureRecognizer *longClickRecognizer; // @synthesize longClickRecognizer=_longClickRecognizer;
@property(retain, nonatomic) KHSelectionGestureRecognizer *selectionRecognizer; // @synthesize selectionRecognizer=_selectionRecognizer;
@property(retain, nonatomic) NSPanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(nonatomic) BOOL updatingFrameViews; // @synthesize updatingFrameViews=_updatingFrameViews;
@property BOOL contentWarningNeedsUpdate; // @synthesize contentWarningNeedsUpdate=_contentWarningNeedsUpdate;
@property(nonatomic) BOOL boundsVisible; // @synthesize boundsVisible=_boundsVisible;
@property(nonatomic) struct CGSize previousSize; // @synthesize previousSize=_previousSize;
@property(retain, nonatomic) NSView *textViewContainer; // @synthesize textViewContainer=_textViewContainer;
@property(retain, nonatomic) KHTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) __weak id <KHFrameViewContainerDelegate> containerDelegate; // @synthesize containerDelegate=_containerDelegate;
@property(nonatomic) BOOL contentWarningVisible; // @synthesize contentWarningVisible=_contentWarningVisible;
@property(nonatomic, getter=isContextualMenuDisabled) BOOL contextualMenuDisabled; // @synthesize contextualMenuDisabled=_contextualMenuDisabled;
@property(nonatomic, getter=isContentChangeDisabled) BOOL contentChangeDisabled; // @synthesize contentChangeDisabled=_contentChangeDisabled;
@property(nonatomic, getter=isHoverVisible) BOOL hoverVisible; // @synthesize hoverVisible=_hoverVisible;
@property(nonatomic, getter=isEditing) BOOL editing; // @synthesize editing=_editing;
@property(retain, nonatomic) KHFrame *frameObject; // @synthesize frameObject=_frameObject;
- (void).cxx_destruct;
- (BOOL)accessibilityPerformPress;
@property(readonly, copy) NSString *description;
- (void)getFrameInfo:(id)arg1;
- (void)showLayoutInspector:(id)arg1;
- (void)showFrameInspector:(id)arg1;
- (void)editPhoto:(id)arg1;
- (void)toggleAppleLogoOption:(id)arg1;
- (void)toggleFrameFitOrFill:(id)arg1;
- (void)mirrorImage:(id)arg1;
- (void)sendFrameToBack:(id)arg1;
- (void)moveFrameToFront:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)frameRenderLayerDidLayoutSublayers:(id)arg1;
- (BOOL)frameRenderLayer:(id)arg1 setDrawingScale:(double)arg2;
- (BOOL)frameRenderLayer:(id)arg1 setFrame:(struct CGRect)arg2;
- (BOOL)removeContentLayerForFrameRenderLayer:(id)arg1;
- (id)makeContentLayerForFrameRenderLayer:(id)arg1;
- (id)photoEffectsForPhotoContentLayer:(id)arg1;
- (void)photoContentLayer:(id)arg1 addUserInteractiveOperationWithBlock:(CDUnknownBlockType)arg2;
- (id)photoContentLayer:(id)arg1 imageForPanDirection:(unsigned long long)arg2;
- (BOOL)photoContentLayer:(id)arg1 shouldRequestImageWithQuality:(unsigned long long)arg2;
- (id)imageRequestOperationQueueForPhotoContentLayer:(id)arg1;
- (BOOL)geometryFlippedForPhotoContentLayer:(id)arg1;
- (void)imageUpdatedForPhotoContentLayer:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)endGestureWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)beginGestureWithEvent:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)setFrameRotation:(double)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidChangeBackingProperties;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (id)frameViews;
- (struct CGSize)frameObjectSizeForFrame:(struct CGRect)arg1;
- (struct CGPoint)frameObjectCenterForFrame:(struct CGRect)arg1;
- (id)frameObjectForFrameView:(id)arg1;
- (id)frameViewForFrameObject:(id)arg1;
- (void)showContentIssueAlert:(id)arg1;
@property(readonly, nonatomic) BOOL hasZoomableFrameObject;
@property(readonly, nonatomic) KHSelectionManager *selectionManager;
@property(readonly, nonatomic) KHLayoutView *enclosingLayoutView;
@property(readonly, nonatomic) double backingScaleFactor;
- (struct CGPoint)center;
@property(readonly, nonatomic, getter=isSelectable) BOOL selectable;
@property(readonly, nonatomic, getter=isRendering) BOOL rendering;
@property(nonatomic, getter=isFixed) BOOL fixed;
@property(nonatomic) double maskOutsetLimit;
@property(nonatomic) BOOL clipsToBounds;
@property(nonatomic) unsigned long long contentClipMode;
@property(readonly, nonatomic) NSImage *contentWarningImage;
- (void)updateContentWarning;
@property(readonly, nonatomic) unsigned long long contentType;
@property(nonatomic) struct CGPoint drawingOffset;
@property(nonatomic) double drawingScale;
@property(readonly, nonatomic) NSArray *subframes;
@property(readonly, nonatomic) id <KHSelectable> selectableObject;
@property(readonly, nonatomic) KHLayout *layoutObject;
- (id)accessibilityValueDescription;
@property(readonly, nonatomic) KHBaseLayer *hoverLayer;
- (id)renderLayer;
- (void)_selectWithEvent:(id)arg1;
- (void)_sendMouseDown:(id)arg1;
- (void)_handleLongClickWithLocation:(struct CGPoint)arg1;
- (BOOL)_canHandleLongClickGesture;
- (BOOL)_canHandlePanGesture;
- (void)_performDoubleClick;
- (void)_handleSelection:(BOOL)arg1;
- (void)_handlePanGesture:(id)arg1;
- (void)_handleDoubleClickGesture:(id)arg1;
- (void)_handleLongClickGesture:(id)arg1;
- (void)_handleSelectionGesture:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (BOOL)_shouldTearForGestureLocation:(struct CGPoint)arg1;
- (struct CGPoint)_distanceFromNearestEdgeForLocation:(struct CGPoint)arg1;
- (void)_resetPanGestureRecognizer;
- (void)_updateEventTrackers;
- (BOOL)isFrameSelectionKeyEvent:(id)arg1;
- (void)backfillIfNecessaryInOperationQueue:(id)arg1;
- (void)layoutAuxiliaryViews;
- (void)layoutFrameViews;
- (void)updateFrameViews;
- (void)cleanupFrameViews;
- (void)recycleFrameViews;
- (void)setupFrameViews;
- (id)removeFrameViewForFrameObject:(id)arg1;
- (id)recycleFrameViewForFrameObject:(id)arg1;
- (id)addFrameViewForFrameObject:(id)arg1;
- (void)removeFrameView:(id)arg1;
- (id)dequeueFrameViewForFrameObject:(id)arg1;
- (void)placeFrameView:(id)arg1;
- (struct CGRect)frameForFrameObject:(id)arg1 drawingOffset:(struct CGPoint *)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

