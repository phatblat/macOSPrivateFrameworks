//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PhotoPrintProduct/KHModel.h>

#import "KHJSONGeneratorProtocol.h"

@class NSMutableDictionary, NSMutableSet, NSString;

@interface KHTheme : KHModel <KHJSONGeneratorProtocol>
{
    long long _categoryId;
    NSString *_identifier;
    long long _version;
    long long _iconId;
    long long _previewId;
    long long _sequence;
    NSString *_partNumber;
    NSString *_qci;
    NSString *_qciColor;
    NSString *_name;
    long long _siblingThemeId;
    NSString *_previewLayoutIds;
    BOOL _enableDefaultLeading;
    NSString *_keywords;
    NSString *_categories;
    NSMutableSet *_colors;
    BOOL _allowEmptyFrames;
    BOOL _honorBindingMargin;
    BOOL _convertedSpread;
    NSMutableDictionary *_backgroundTreatmentCache;
}

+ (struct CGPath *)createPathForString:(id)arg1 fontName:(id)arg2 fontSize:(double)arg3;
+ (id)_layoutIDForLayoutName:(id)arg1 theme:(id)arg2 product:(id)arg3;
+ (id)keywordFiltersForProductCode:(id)arg1;
+ (id)themesForProductCode:(id)arg1 fromDatabase:(id)arg2 sortedBy:(unsigned long long)arg3;
+ (id)themesForProductCode:(id)arg1 fromDatabase:(id)arg2;
+ (id)themeForIdentifier:(id)arg1;
+ (id)themeForIdentifier:(id)arg1 fromDatabase:(id)arg2;
+ (id)themeForKey:(long long)arg1 fromDatabase:(id)arg2;
+ (id)themeForKey:(long long)arg1;
+ (id)allThemesFromDatabase:(id)arg1 sortedBy:(unsigned long long)arg2;
+ (id)allThemesFromDatabase:(id)arg1;
+ (id)modifyModelFromJSON:(id)arg1 inDatabase:(id)arg2 bundlePath:(id)arg3;
+ (id)generateModelFromJSON:(id)arg1 inDatabase:(id)arg2 bundlePath:(id)arg3;
- (struct CGPath *)createQCIPath;
- (long long)sortByDefault:(id)arg1;
- (long long)sortByName:(id)arg1;
- (long long)sortById:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (BOOL)hasConvertedSpread;
- (void)setHasConvertedSpread:(BOOL)arg1;
- (CDStruct_d2b197d1)margins;
- (BOOL)shouldEnforceMargins;
- (id)productCodes;
- (id)name;
- (id)preferredDefaultIntroLayoutsForProduct:(id)arg1 includeSpreads:(BOOL)arg2;
- (id)preferredDefaultLayoutsForProduct:(id)arg1 includeSpreads:(BOOL)arg2 includeFullBleedPhoto:(BOOL)arg3 allowMap:(BOOL)arg4 allowOnlyLayoutUsageTypes:(id)arg5;
- (id)preferredDefaultLayoutsForProduct:(id)arg1 includeSpreads:(BOOL)arg2 allowOnlyLayoutUsageTypes:(id)arg3;
- (id)preferredDefaultLayoutsForProduct:(id)arg1 allowOnlyLayoutUsageTypes:(id)arg2;
- (id)preferredDefaultLayoutsForProduct:(id)arg1 includeSpreads:(BOOL)arg2;
- (id)preferredDefaultLayoutsForProduct:(id)arg1;
- (id)preferredBackFlapLayoutsForProduct:(id)arg1;
- (id)preferredFrontFlapLayoutsForProduct:(id)arg1;
- (id)preferredBackCoverLayoutsForProduct:(id)arg1;
- (id)preferredCoverLayoutsForProduct:(id)arg1;
- (void)applyDesignForTreatment:(id)arg1 toLayouts:(id)arg2 momentary:(BOOL)arg3;
- (void)applyDesignForTreatment:(id)arg1 toLayout:(id)arg2 momentary:(BOOL)arg3;
- (id)bestLayoutForPhotos:(id)arg1 forProduct:(id)arg2;
- (id)layoutsUsingCustomMasterLayout:(id)arg1;
- (id)customMasterLayoutsOfType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 textFilterMode:(unsigned long long)arg3 sortedBy:(unsigned long long)arg4;
- (id)customMasterLayoutsOfType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 textFilterMode:(unsigned long long)arg3;
- (id)customMasterLayoutsOfPageType:(unsigned long long)arg1;
- (id)suitableAlternateLayoutsForLayout:(id)arg1;
- (id)layoutsOfType:(unsigned long long)arg1 withHoleCount:(long long)arg2 pageType:(unsigned long long)arg3 forProduct:(id)arg4 limitToVisible:(BOOL)arg5 textFilterMode:(unsigned long long)arg6 allowMap:(BOOL)arg7 sortedBy:(unsigned long long)arg8;
- (id)layoutsOfType:(unsigned long long)arg1 withHoleCount:(long long)arg2 pageType:(unsigned long long)arg3 forProduct:(id)arg4 limitToVisible:(BOOL)arg5 textFilterMode:(unsigned long long)arg6 allowMap:(BOOL)arg7;
- (id)layoutsOfType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 forProduct:(id)arg3 limitToVisible:(BOOL)arg4 textFilterMode:(unsigned long long)arg5 allowMap:(BOOL)arg6 sortedBy:(unsigned long long)arg7;
- (id)layoutsOfType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 forProduct:(id)arg3 limitToVisible:(BOOL)arg4 textFilterMode:(unsigned long long)arg5 allowMap:(BOOL)arg6 sortedBy:(unsigned long long)arg7 allowSpread:(BOOL)arg8;
- (id)layoutsOfType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 forProduct:(id)arg3 limitToVisible:(BOOL)arg4 textFilterMode:(unsigned long long)arg5 allowMap:(BOOL)arg6;
- (id)layoutsWithHoleCount:(long long)arg1 forProduct:(id)arg2 limitToVisible:(BOOL)arg3 textFilterMode:(unsigned long long)arg4 allowMap:(BOOL)arg5 sortedBy:(unsigned long long)arg6;
- (id)layoutsWithHoleCount:(long long)arg1 forProduct:(id)arg2 limitToVisible:(BOOL)arg3 textFilterMode:(unsigned long long)arg4 allowMap:(BOOL)arg5;
- (id)layoutHoleCountsForType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 forProduct:(id)arg3 limit:(long long)arg4 textFilterMode:(unsigned long long)arg5 allowMap:(BOOL)arg6;
- (id)layoutHoleCountsForType:(unsigned long long)arg1 pageType:(unsigned long long)arg2 forProduct:(id)arg3;
- (id)layoutHoleCountsForProduct:(id)arg1;
- (long long)maximumHoleCountForProduct:(id)arg1;
- (double)maximumLayoutFavorabilityForHoleCount:(long long)arg1 forProduct:(id)arg2;
- (id)maximumLayoutFavorabilityByHoleCountForProduct:(id)arg1;
- (double)textColumnGutter;
- (BOOL)isSimilarToModel:(id)arg1 skippingFields:(id)arg2 differences:(id *)arg3;
- (void)setCategories:(id)arg1;
- (void)cacheCategories:(id)arg1;
- (id)categories;
- (void)setHonorBindingMargin:(BOOL)arg1;
- (void)cacheHonorBindingMargin:(BOOL)arg1;
- (BOOL)honorBindingMargin;
- (void)setAllowEmptyFrames:(BOOL)arg1;
- (void)cacheAllowEmptyFrames:(BOOL)arg1;
- (BOOL)allowEmptyFrames;
- (void)setKeywords:(id)arg1;
- (void)cacheKeywords:(id)arg1;
- (id)keywords;
- (void)setEnableDefaultLeading:(BOOL)arg1;
- (void)cacheEnableDefaultLeading:(BOOL)arg1;
- (BOOL)enableDefaultLeading;
- (void)setPreviewLayoutIds:(id)arg1;
- (void)cachePreviewLayoutIds:(id)arg1;
- (id)previewLayoutIds;
- (void)setSiblingThemeId:(long long)arg1;
- (void)cacheSiblingThemeId:(long long)arg1;
- (long long)siblingThemeId;
- (void)setQCIColor:(id)arg1;
- (void)cacheQCIColor:(id)arg1;
- (id)qciColor;
- (void)setQCI:(id)arg1;
- (void)cacheQCI:(id)arg1;
- (id)qci;
- (void)setPartNumber:(id)arg1;
- (void)cachePartNumber:(id)arg1;
- (id)partNumber;
- (void)setSequence:(long long)arg1;
- (void)cacheSequence:(long long)arg1;
- (long long)sequence;
- (void)setPreviewId:(long long)arg1;
- (void)cachePreviewId:(long long)arg1;
- (long long)previewId;
- (void)setIconId:(long long)arg1;
- (void)cacheIconId:(long long)arg1;
- (long long)iconId;
- (void)setVersion:(long long)arg1;
- (void)cacheVersion:(long long)arg1;
- (long long)version;
- (void)setIdentifier:(id)arg1;
- (void)cacheIdentifier:(id)arg1;
- (id)identifier;
- (void)setCategoryId:(long long)arg1;
- (void)cacheCategoryId:(long long)arg1;
- (long long)categoryId;
- (void)unload;
- (id)textColors;
- (void)dealloc;
- (id)initWithModelId:(id)arg1;
- (id)backgroundTreatmentsWithSeedTreatment:(id)arg1 offset:(long long *)arg2;
- (id)complimentaryTreatmentForTreatment:(id)arg1 designTag:(id)arg2;
- (id)treatmentSpecificAssetForAsset:(id)arg1 andTreatment:(id)arg2;
- (id)nameForTreatment:(id)arg1;
- (id)treatmentForColorWithName:(id)arg1;
- (id)magicTreatment;
- (id)JSONRepresentation;
- (id)stringFromThemePreviewAssetId:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

