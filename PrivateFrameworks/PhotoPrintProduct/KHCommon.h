//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface KHCommon : NSObject
{
}

+ (id)mostPreferredLanguageOf:(id)arg1 withPreferredLanguage:(id)arg2;
+ (id)safelyLoadFontWithName:(id)arg1 size:(double)arg2;
+ (id)preferredFontFamilies;
+ (id)preferredFontNames;
+ (id)availableFontFamilies;
+ (id)imageNamed:(id)arg1;
+ (BOOL)anyModifierKeyDown;
+ (BOOL)functionKeyDown;
+ (BOOL)controlKeyDown;
+ (BOOL)commandKeyDown;
+ (BOOL)optionKeyDown;
+ (BOOL)shiftKeyDown;
+ (BOOL)capsLockKeyDown;
+ (id)photoIDsForPhotoInfos:(id)arg1;
+ (id)alignedShorterString:(id)arg1 forLongerString:(id)arg2;
+ (id)alignedStringsForString:(id)arg1 andString:(id)arg2;
+ (double)normalizedAlignedPatternMatchingScoreForString:(id)arg1 andString:(id)arg2;
+ (long long)alignedPatternMatchingScoreForString:(id)arg1 andString:(id)arg2;
+ (id)aspectRatioStringForPhotos:(id)arg1 useROI:(BOOL)arg2;
+ (id)aspectRatioStringForPhotos:(id)arg1;
+ (long long)unorderedPatternMatchingScoreForString:(id)arg1 andString:(id)arg2 wildcards:(id)arg3;
+ (long long)patternMatchingScoreForString:(id)arg1 andString:(id)arg2 wildcards:(id)arg3;
+ (long long)patternMatchingScoreForString:(id)arg1 andString:(id)arg2;
+ (id)randomlyChooseFromWeightMap:(id)arg1;
+ (id)englishTextStyleDescriptionForKey:(id)arg1;
+ (id)textStyleDescriptionForKey:(id)arg1;
+ (id)assetLargePaperSurfaceSetting;
+ (id)assetPaperSurfaceSetting;
+ (id)assetRedEyeSetting;
+ (id)assetEnhanceSetting;
+ (id)assetScalingSetting;
+ (id)customTextColors;
+ (void)setPreviousBirdseyeZoom:(double)arg1;
+ (double)previousBirdseyeZoom;
+ (void)setPreviousDetailZoom:(double)arg1;
+ (double)previousDetailZoom;
+ (void)setAutofillSuggestionsEnabled:(BOOL)arg1;
+ (BOOL)autofillSuggestionsEnabled;
+ (void)setForceShowLogo:(BOOL)arg1;
+ (BOOL)forceShowLogo;
+ (void)setOverrideLockedFrames:(BOOL)arg1;
+ (BOOL)overrideLockedFrames;
+ (void)setRenderToLayersEnabled:(BOOL)arg1;
+ (BOOL)renderToLayersEnabled;
+ (void)setAdvancedModeEnabled:(BOOL)arg1;
+ (BOOL)advancedModeEnabled;
+ (void)setPDFSharpeningEnabled:(BOOL)arg1;
+ (BOOL)PDFSharpeningEnabled;
+ (void)setPrintingStatsEnabled:(BOOL)arg1;
+ (BOOL)printingStatsEnabled;
+ (void)setPrintingGuidesEnabled:(BOOL)arg1;
+ (BOOL)printingGuidesEnabled;
+ (void)setPhotoInfoMenuEnabled:(BOOL)arg1;
+ (BOOL)photoInfoMenuEnabled;
+ (void)setAllPrintsProductsVisible:(BOOL)arg1;
+ (BOOL)allPrintsProductsVisible;
+ (void)setSmartLightEnabled:(BOOL)arg1;
+ (BOOL)smartLightEnabled;
+ (void)setUpscaleFactor:(double)arg1;
+ (double)upscaleFactor;
+ (void)setUpscaleLimit:(double)arg1;
+ (double)upscaleLimit;
+ (void)setTargetMinImageDPI:(double)arg1;
+ (double)targetMinImageDPI;
+ (void)setTestOrdersEnabled:(BOOL)arg1;
+ (BOOL)testOrdersEnabled;
+ (void)setSmallProductImageQuality:(double)arg1;
+ (double)smallProductImageQuality;
+ (void)setProductImageQuality:(double)arg1;
+ (double)productImageQuality;
+ (void)setMinimumLayoutsForFilter:(long long)arg1;
+ (long long)minimumLayoutsForFilter;
+ (void)setAutolayoutEnabled:(BOOL)arg1;
+ (BOOL)autolayoutEnabled;
+ (void)setTreatmentsEnabled:(BOOL)arg1;
+ (BOOL)treatmentsEnabled;
+ (BOOL)tearFromPanThresholdEnabled;
+ (BOOL)newDragBehaviorEnabled;
+ (BOOL)livePreviewEnabled;
+ (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
+ (BOOL)isContinuousSpellCheckingEnabled;
+ (long long)themePreviewDownloadLimit;
+ (void)setMapsEnabled:(BOOL)arg1;
+ (BOOL)mapsEnabled;
+ (BOOL)pieEnabled;
+ (void)setAutoFillEnabled:(BOOL)arg1;
+ (BOOL)autoFillEnabled;
+ (BOOL)payloadGenerationDebuggingEnabled;
+ (BOOL)frameEditingEnabled;
+ (BOOL)frameRectDebugEnabled;
+ (BOOL)facesBoundingBoxGutterCheckEnabled;
+ (BOOL)autoCompositionDebugEnabled;
+ (BOOL)themesDBWriteEnabled;
+ (BOOL)textDebugEnabled;
+ (BOOL)databaseDebugEnabled;
+ (BOOL)treatmentDebugEnabled;
+ (BOOL)pricingDebugEnabled;
+ (BOOL)debugEnabled;
+ (BOOL)type1FontsEnabled;
+ (BOOL)showDemoPricing;
+ (BOOL)demoModeEnabled;
+ (BOOL)editingEnabled;
+ (unsigned long long)unsignedIntegerFromUuid:(id)arg1;
+ (id)datetimeFromString:(id)arg1;
+ (id)stringFromDatetime:(id)arg1;
+ (BOOL)boolFromString:(id)arg1;
+ (id)stringFromBool:(BOOL)arg1;
+ (int)intFromString:(id)arg1;
+ (id)stringFromUnsignedInteger:(unsigned long long)arg1;
+ (id)stringFromInteger:(long long)arg1;
+ (id)stringFromInt:(int)arg1;
+ (id)stringFromDouble:(double)arg1;
+ (double)doubleFromString:(id)arg1;
+ (id)stringFromCGFloat:(double)arg1;
+ (id)stringFromFloat:(float)arg1;
+ (float)floatFromString:(id)arg1;
+ (id)stringFromArray:(id)arg1;
+ (id)arrayFromString:(id)arg1;
+ (id)ellipsesString;
+ (unsigned long long)twoSigFigRoundedInteger:(unsigned long long)arg1;
+ (void)removeObjects:(id)arg1 fromSet:(id)arg2;
+ (id)sortedArrayFromArray:(id)arg1 orderMap:(id)arg2 orderMapKeySelector:(SEL)arg3;
+ (id)sortedArrayFromArray:(id)arg1 orderMap:(id)arg2;
+ (id)sortedArrayFromArray:(id)arg1 sort:(unsigned long long)arg2;
+ (id)sortedArrayFromSet:(id)arg1 sort:(unsigned long long)arg2;
+ (id)generateUUID;
+ (void)setUseCPURenderer:(BOOL)arg1;
+ (BOOL)useCPURenderer;
+ (id)stringByAddingSuffixForScale:(unsigned long long)arg1 toPath:(id)arg2;
+ (id)stringByAddingSuffix:(id)arg1 toPath:(id)arg2;
+ (id)alignSequence:(id)arg1 withSequence:(id)arg2 findAlignedSequences:(BOOL)arg3;
+ (unsigned long long)configurationTreatmentTypeFromString:(id)arg1;
+ (id)stringFromConfigurationTreatmentType:(unsigned long long)arg1;
+ (unsigned long long)configurationTextStyleFromString:(id)arg1;
+ (id)stringFromConfigurationTextStyleType:(unsigned long long)arg1;
+ (unsigned long long)configCategoryFromString:(id)arg1;
+ (id)stringFromConfigCategoryId:(unsigned long long)arg1;
+ (unsigned long long)behaviorAttributeKeyFromString:(id)arg1;
+ (id)stringFromBehaviorAttribKeyType:(unsigned long long)arg1;
+ (unsigned long long)traitCategoryFromString:(id)arg1;
+ (id)stringFromTraitCategory:(unsigned long long)arg1;
+ (unsigned long long)layoutTypeForString:(id)arg1;
+ (id)stringFromLayoutType:(unsigned long long)arg1;
+ (unsigned long long)usageTypeFromString:(id)arg1;
+ (id)stringFromUsageType:(unsigned long long)arg1;
+ (unsigned long long)treatmentCategoryFromString:(id)arg1;
+ (id)stringFromCategoryId:(unsigned long long)arg1;
+ (unsigned long long)selectionStyleFromString:(id)arg1;
+ (id)stringFromSelectionStyle:(unsigned long long)arg1;
+ (unsigned long long)layerClassIdFromString:(id)arg1;
+ (id)stringFromLayerClassId:(unsigned long long)arg1;
+ (unsigned long long)layerTypeFromString:(id)arg1;
+ (id)stringFromTreatmentLayerType:(unsigned long long)arg1;
+ (int)legacyTilingMethodFromString:(id)arg1;
+ (id)stringFromTilingMethod:(int)arg1;
+ (int)legacyTileMethodFromString:(id)arg1;
+ (id)stringFromLegacyTileMethod:(int)arg1;
+ (int)innerGlowFromString:(id)arg1;
+ (id)stringFromInnerGlowMethod:(int)arg1;
+ (int)gradientTypeFromString:(id)arg1;
+ (id)stringFromGradientType:(int)arg1;
+ (unsigned long long)frameAnchorFromString:(id)arg1;
+ (id)stringFromFrameAnchor:(unsigned long long)arg1;
+ (int)connectorStyleFromString:(id)arg1;
+ (id)stringFromConnectorStyle:(int)arg1;
+ (unsigned long long)textTypeFromString:(id)arg1;
+ (id)stringFromTextType:(unsigned long long)arg1;
+ (long long)verticalTextAlignmentFromString:(id)arg1;
+ (id)stringFromVerticalTextAlignment:(long long)arg1;
+ (long long)horizontalAlignmentFromString:(id)arg1;
+ (id)stringFromHorizontalTextAlignment:(long long)arg1;
+ (int)blendModeFromString:(id)arg1;
+ (id)stringFromBlendMode:(int)arg1;
+ (unsigned long long)mirrorDirectionFromString:(id)arg1;
+ (id)stringFromMirrorDirection:(unsigned long long)arg1;

@end

