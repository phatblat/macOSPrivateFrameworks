//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKCameraController.h>

#import "VKGesturingCameraController.h"
#import "VKNavContextObserver.h"
#import "VKNavigationCameraController.h"

@class GEOMapRegion, NSString, VKAttachedNavGestureCameraBehavior, VKDetachedNavGestureCameraBehavior, VKGestureCameraBehavior<VKNavGestureCameraBehavior>, VKNavContext, VKSceneConfiguration, VKScreenCanvas<VKInteractiveMap>, VKTimedAnimation;

__attribute__((visibility("hidden")))
@interface VKNavCameraController : VKCameraController <VKNavigationCameraController, VKGesturingCameraController, VKNavContextObserver>
{
    unsigned char _cameraType;
    unsigned char _headingType;
    Unit_3d259e8a _puckCourse;
    Coordinate3D_bc242218 _puckCoordinate;
    Unit_3d259e8a _headingDelta;
    Unit_3d259e8a _headingMinDelta;
    CameraFrame_406dbd31 _lastCalculatedCameraFrame;
    CameraFrame_406dbd31 _cameraFrame;
    BOOL _needsUpdate;
    struct Spring<double, 1, mdc::SpringType::Linear> _pitchSpring;
    struct Spring<double, 1, mdc::SpringType::Angular> _headingSpring;
    struct Spring<double, 1, mdc::SpringType::Linear> _distanceFromTargetSpring;
    struct Spring<double, 2, mdc::SpringType::Linear> _screenPositionSpring;
    struct Unit<MeterUnitDescription, double> _cameraDistanceFromTarget;
    Unit_3d259e8a _cameraPitch;
    double _previousUpdateTime;
    double _maxZoomScale;
    double _minZoomScale;
    VKGestureCameraBehavior<VKNavGestureCameraBehavior> *_gestureBehavior;
    VKAttachedNavGestureCameraBehavior *_attachedGestureBehavior;
    VKDetachedNavGestureCameraBehavior *_detachedGestureBehavior;
    BOOL _isDetached;
    BOOL _panning;
    BOOL _rotating;
    BOOL _pitching;
    BOOL _zooming;
    VKTimedAnimation *_transitionAnimation;
    VKTimedAnimation *_snapPitchAnimation;
    VKTimedAnimation *_snapHeadingAnimation;
    CameraFrame_406dbd31 _transitionFrame;
    basic_string_23d93216 _currentStyleName;
    vector_36073df6 _coordinatesToFrame;
    unsigned char _styleManeuversToFrame;
    unsigned char _maneuversToFrame;
    double _minCameraHeight;
    double _maxCameraHeight;
    Unit_3d259e8a _minCameraPitch;
    Unit_3d259e8a _maxCameraPitch;
    struct VKEdgeInsets _previousMapEdgeInsets;
    struct VKEdgeInsets _framingEdgeInset;
    struct VKEdgeInsets _framingEdgeInsetProportional;
    struct VKEdgeInsets _clientFramingInsets;
    Matrix_8746f91e _puckMovementBoundsMin;
    Matrix_8746f91e _puckMovementBoundsMax;
    Matrix_8746f91e _puckScreenPosition;
    double _minHeightDeltaChangeHorizontal;
    double _maxHeightDeltaChangeHorizontal;
    double _minHeightDeltaChangeVertical;
    double _maxHeightDeltaChangeVertical;
    double _halfPuckSize;
    Box_3d7e3c2c _viewableScreenRect;
    Box_3d7e3c2c _framingScreenRect;
    _Bool _enablePan;
    _Bool _enableZoom;
    _Bool _enablePitch;
    _Bool _enableRotate;
    float _panReturnDelayTime;
    unsigned char _alternateFramingSource;
    double _maxFramingDistance;
    double _framingDistanceAfterManeuver;
    VKNavContext *_navContext;
    CDStruct_2c43369c _locationCoordinate;
    struct PolylineCoordinate _routeCoordinate;
    _Bool _frameAllGroupedManeuvers;
    unsigned char _maxManeuversToFrame;
    _Bool _ignorePointsBehind;
    _Bool _insetsAnimating;
    Coordinate3D_bc242218 _routeFocusCoordinate;
    unsigned long long _lastTargetStyleIdentifier;
    double _desiredZoomScale;
    float _animationTime;
    _Bool _isTracking;
    shared_ptr_e963992e _taskContext;
    double _depthNear;
    _Bool _leftHanded;
    _Bool _sentZoomNotification;
    VKScreenCanvas<VKInteractiveMap> *_screenCanvas;
    VKSceneConfiguration *_sceneConfiguration;
    long long _baseDisplayRate;
}

@property(nonatomic) long long baseDisplayRate; // @synthesize baseDisplayRate=_baseDisplayRate;
@property(nonatomic) struct VKEdgeInsets clientFramingInsets; // @synthesize clientFramingInsets=_clientFramingInsets;
@property(nonatomic) VKSceneConfiguration *sceneConfiguration; // @synthesize sceneConfiguration=_sceneConfiguration;
@property(nonatomic) VKScreenCanvas<VKInteractiveMap> *screenCanvas; // @synthesize screenCanvas=_screenCanvas;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned char)cameraHeadingType;
- (void)canvasDidLayout;
- (void)setCamera:(id)arg1;
- (void)stopAnimations;
- (void)setCameraFrame:(CameraFrame_406dbd31)arg1;
- (CameraFrame_406dbd31)cameraFrame;
- (void)_snapHeading;
- (void)_snapPitch;
- (void)edgeInsetsDidEndAnimating;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1;
- (void)edgeInsetsWillBeginAnimating;
- (Unit_3d259e8a)maxCameraPitch;
- (Unit_3d259e8a)minCameraPitch;
- (double)maxZoomHeight;
- (double)minZoomHeight;
- (double)maxZoomScale;
- (double)minZoomScale;
@property(nonatomic) double zoomScale;
- (void)_updateZoomScaleLimts;
- (void)_setNeedsUpdate;
- (void)navContextCameraHeadingOverrideDidChange:(id)arg1;
- (void)navContextStateDidChange:(id)arg1;
- (void)_updateForAnimatedEdgeInsets;
- (void)updateSpringsForFramingCamera;
- (void)_addAdditionalRoutePointsToFrameToList:(vector_36073df6 *)arg1;
- (void)updatePointsToFrame;
- (void)updateManeuversToFrame;
- (Coordinate3D_bc242218)routeCoordinateAtDistance:(double)arg1;
- (Coordinate3D_bc242218)routeLocationAtDistance:(double)arg1 fromManeuver:(unsigned long long)arg2;
- (double)distanceToManeuver:(unsigned long long)arg1;
- (void)updateSpringsForTrackingCamera;
- (Box_3d7e3c2c)calculateViewableScreenRect;
- (Box_3d7e3c2c)calculateViewableScreenRectForEdgeInsets:(struct VKEdgeInsets)arg1;
- (Unit_3d259e8a)calculateHeading;
- (void)stop;
- (BOOL)isRotateEnabled;
- (BOOL)isPitchEnabled;
- (void)stopSnappingAnimations;
- (BOOL)_canZoomOut;
- (BOOL)canZoomOutForTileSize:(long long)arg1;
- (BOOL)_canZoomIn;
- (BOOL)canZoomInForTileSize:(long long)arg1;
- (double)topDownMinimumZoomLevel;
- (double)currentZoomLevel;
- (double)maximumZoomLevel;
- (double)minimumZoomLevel;
- (double)_normalizedZoomLevelForDisplayZoomLevel:(double)arg1;
- (BOOL)canEnter3DMode;
- (void)setNavContext:(id)arg1;
- (void)returnToPuck;
- (void)returnToTrackingWithDelay:(double)arg1 resetZoom:(BOOL)arg2;
- (void)animateCameraWithDuration:(float)arg1 fromFrame:(const CameraFrame_406dbd31 *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (CameraFrame_406dbd31)restingCameraFrame;
- (CameraFrame_406dbd31)currentCameraFrame;
@property(nonatomic) double pitch;
@property(nonatomic) double heading;
@property(readonly, nonatomic) double altitude;
@property(nonatomic) double distanceFromCenterCoordinate;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
- (void)_updateStyles;
- (void)_updateSceneStyles:(BOOL)arg1;
- (void)stylesheetDidReload;
- (void)stylesheetDidChange;
- (BOOL)_updateSprings:(double)arg1;
- (Matrix_2bdd42a3)puckScreenPoint;
- (void)_updateDebugOverlay;
- (void)_updateDebugText;
- (id)_debugText:(BOOL)arg1 showNavCameraDebugConsoleAttributes:(BOOL)arg2;
- (id)detailedDescription;
- (BOOL)_hasRunningAnimation;
- (void)updateWithTimestamp:(double)arg1;
- (void)resetSpringsToResting;
- (void)updateCameraState;
- (BOOL)wantsTimerTick;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(const Coordinate3D_bc242218 *)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)updateLocation:(const Coordinate3D_bc242218 *)arg1 andCourse:(const Unit_3d259e8a *)arg2;
- (void)puckAnimator:(id)arg1 updatedPosition:(const Coordinate3D_bc242218 *)arg2 course:(const Unit_3d259e8a *)arg3;
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;
- (BOOL)isGesturing;
- (BOOL)tapAtPoint:(struct CGPoint)arg1;
- (void)transferGestureState:(id)arg1;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1 panAtStartPoint:(BOOL)arg2;
- (void)_updateObserverCouldZoomIn:(BOOL)arg1 couldZoomOut:(BOOL)arg2;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setDetached:(BOOL)arg1;
- (void)startWithPounce:(BOOL)arg1 startLocation:(CDStruct_c3b9c2ee)arg2 startCourse:(double)arg3 pounceCompletionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithTaskContext:(shared_ptr_e963992e)arg1 device:(struct Device *)arg2 mapDataAccess:(struct MapDataAccess *)arg3 animationRunner:(struct AnimationRunner *)arg4 runLoopController:(struct RunLoopController *)arg5 cameraDelegate:(id)arg6;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) struct AnimationRunner *animationRunner;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isFullyPitched;
@property(readonly, nonatomic) BOOL isPitched;
@property(readonly, nonatomic) BOOL isRotated;
@property(readonly, nonatomic) struct MapDataAccess *mapDataAccess;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic) double maxPitch;
@property(readonly, nonatomic) struct RunLoopController *runLoopController;
@property(readonly) Class superclass;

@end

