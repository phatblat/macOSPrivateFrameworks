//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKScreenCanvas.h>

#import "GEOResourceManifestTileGroupObserver.h"
#import "LabelManagerDelegate.h"
#import "VKCameraControllerDelegate.h"
#import "VKGlobeLineContainerDelegate.h"
#import "VKInteractiveMap.h"
#import "VKMapDataAccess.h"

@class GEOResourceManifestConfiguration, NSArray, NSHashTable, NSSet, NSString, VKARCameraController, VKAnchorWrapper, VKGlobeCameraController, VKGlobeLineContainer;

__attribute__((visibility("hidden")))
@interface VKClassicGlobeCanvas : VKScreenCanvas <VKCameraControllerDelegate, LabelManagerDelegate, GEOResourceManifestTileGroupObserver, VKGlobeLineContainerDelegate, VKInteractiveMap, VKMapDataAccess>
{
    VKGlobeCameraController *_globeCameraController;
    long long _mapType;
    CDStruct_51745937 _mapDisplayStyle;
    VKGlobeLineContainer *_lineContainer;
    double _contentScale;
    BOOL _disableRoads;
    BOOL _disableLabels;
    struct shared_ptr<md::VKGlobeStylesheet> _globeStyleSheet;
    struct AltitudeDebugSettings _debugSettings;
    struct GlobeAdapter *_globeAdapter;
    struct RealisticRenderer *_renderer;
    struct shared_ptr<md::GlobeOverlayContainer> _overlayContainer;
    struct shared_ptr<ggl::FlyoverLibrary> _flyoverLibrary;
    BOOL _initialized;
    BOOL _canShowFlyover;
    struct shared_ptr<bool> _isDead;
    BOOL _isLoading;
    BOOL _isDownloading;
    BOOL _coarseLoading;
    BOOL _tourIsDownloading;
    double _currentZoomLevel;
    CDUnknownBlockType _sceneDidLoadCallback;
    CDUnknownBlockType _artworkIsReadyBlock;
    NSHashTable *_externalAnchors;
    GEOResourceManifestConfiguration *_manifestConfiguration;
    struct shared_ptr<md::AnchorContext> _anchorContext;
    VKARCameraController *_arCameraController;
    BOOL _arRoadDisabledState;
    struct CGSize _lastCanvasSize;
    struct unique_ptr<md::FlyoverPolylineOverlayCache, std::__1::default_delete<md::FlyoverPolylineOverlayCache>> _overlayCache;
    BOOL _showsBuildings;
    BOOL _showsVenues;
    int _flyoverMode;
    id <VKInteractiveMapDelegate> _delegate;
}

+ (BOOL)supportsMapType:(long long)arg1 scale:(int)arg2 manifestConfiguration:(id)arg3;
@property(readonly, nonatomic) int flyoverMode; // @synthesize flyoverMode=_flyoverMode;
@property(nonatomic) BOOL disableLabels; // @synthesize disableLabels=_disableLabels;
@property(nonatomic) BOOL disableRoads; // @synthesize disableRoads=_disableRoads;
@property(readonly, nonatomic) VKGlobeCameraController *globeCameraController; // @synthesize globeCameraController=_globeCameraController;
@property(nonatomic) BOOL showsVenues; // @synthesize showsVenues=_showsVenues;
@property(nonatomic) BOOL showsBuildings; // @synthesize showsBuildings=_showsBuildings;
@property(copy, nonatomic) CDUnknownBlockType sceneDidLoadCallback; // @synthesize sceneDidLoadCallback=_sceneDidLoadCallback;
@property(readonly, nonatomic) BOOL flyoverAvailable; // @synthesize flyoverAvailable=_canShowFlyover;
@property(nonatomic) id <VKInteractiveMapDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (double)displayZoomLevel;
- (CameraFrame_406dbd31)rotateCameraFrameAboutCoordinate:(const CameraFrame_406dbd31 *)arg1 coordinate:(Coordinate3D_bc242218)arg2 deltaAngle:(double)arg3;
- (CameraFrame_406dbd31)_lookAtToCameraFrame:(const Matrix_6e1d3589 *)arg1 target:(const Matrix_6e1d3589 *)arg2 up:(const Matrix_6e1d3589 *)arg3;
- (void)setCameraFrame:(const CameraFrame_406dbd31 *)arg1;
- (Matrix_6e1d3589)upForCoordinate:(const Coordinate3D_bc242218 *)arg1;
- (double)heightAtCoordinate:(const Coordinate3D_bc242218 *)arg1;
- (double)fovAdjustment;
- (Matrix_08d701e4)worldViewProjectionMatrix:(const CameraFrame_406dbd31 *)arg1;
- (const Matrix_08d701e4 *)projectionMatrix;
- (RigidTransform_271c3a39)rigidTransformForFrame:(const CameraFrame_406dbd31 *)arg1;
- (Matrix_2bdd42a3)screenPixelForCoordinate:(const Coordinate3D_bc242218 *)arg1 cameraFrame:(const CameraFrame_406dbd31 *)arg2;
- (Coordinate3D_bc242218)groundCoordinateForScreenPixel:(const Matrix_2bdd42a3 *)arg1 cameraFrame:(const CameraFrame_406dbd31 *)arg2;
- (float)currentRoadSignOffset;
- (void)setNavCameraIsDetached:(BOOL)arg1;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(const Coordinate3D_bc242218 *)arg2;
- (void)puckAnimator:(id)arg1 updatedPosition:(const Coordinate3D_bc242218 *)arg2 course:(const Unit_3d259e8a *)arg3;
- (void)transitionToTracking:(BOOL)arg1 mapMode:(long long)arg2 startLocation:(CDStruct_c3b9c2ee)arg3 startCourse:(double)arg4 cameraController:(id)arg5 pounceCompletionHandler:(CDUnknownBlockType)arg6;
- (BOOL)currentSceneRequiresMSAA;
- (struct GlobeOverlayContainer *)overlayContainer;
- (void)_setDefaultFov:(float)arg1;
- (void)disableTileAnalytics;
- (void)enableTileAnalytics;
- (id)flyoverStatistics;
- (void)resetFlyoverStatistics;
- (void)disableFlyoverStatistics;
- (void)enableFlyoverStatistics;
- (void)setupMapScene;
- (void)removeExternalAnchor:(id)arg1;
- (void)addExternalAnchor:(id)arg1;
@property(readonly, nonatomic) VKAnchorWrapper *externalAnchors;
- (void)waitForLoading;
- (void)_updateDebugSettings;
@property(readonly, nonatomic, getter=isFullyDrawn) BOOL fullyDrawn;
- (void)didReceiveMemoryWarning:(BOOL)arg1 beAggressive:(BOOL)arg2;
@property(readonly, nonatomic) NSArray *rasterOverlays;
- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)removeRasterOverlay:(id)arg1;
- (void)addRasterOverlay:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
@property(readonly, nonatomic) NSSet *persistentOverlays;
@property(readonly, nonatomic) NSArray *overlays;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 flyoverModeWillChange:(int)arg2;
- (void)cameraController:(id)arg1 flyoverModeDidChange:(int)arg2;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)cameraControllerDidFinishInitialTrackingAnimation:(id)arg1;
- (void)cameraController:(id)arg1 didChangeRegionAnimated:(BOOL)arg2;
- (void)cameraController:(id)arg1 willChangeRegionAnimated:(BOOL)arg2;
- (void)cameraControllerRequestsLayout:(id)arg1;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (CDUnknownBlockType)annotationCoordinateTest;
- (CDUnknownBlockType)annotationRectTest;
- (void)lineContainerNeedsDisplay:(id)arg1;
-     // Error parsing type: v28@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16c24, name: labelManager:pendingArtworkIsReady:
-     // Error parsing type: v24@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16, name: labelManagerDidLayout:
-     // Error parsing type: v32@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16r^{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}24, name: labelManager:labelMarkerDidChangeState:
-     // Error parsing type: v32@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16r^{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}24, name: labelManager:selectedLabelMarkerWillDisappear:
-     // Error parsing type: v28@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16c24, name: labelManager:setNeedsDisplay:
-     // Error parsing type: v28@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16c24, name: labelManager:setNeedsLayout:
- (void)debugHighlightFeatureMarker:(const shared_ptr_430519ce *)arg1;
- (BOOL)isShowingNoDataPlaceholders;
- (id)attributionsForCurrentRegion;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (id)debugLabelString:(BOOL)arg1;
- (void)debugHighlightObjectAtPoint:(struct CGPoint)arg1 highlightTarget:(unsigned char)arg2;
- (void)_viewTransformSetup;
- (void)didPresent;
- (void)gglWillDrawWithTimestamp;
- (void)updateCameraForFrameResize;
- (void)_update;
- (void)updateWithTimestamp:(double)arg1;
- (struct CGPoint)convertCoordinateToCameraModelPoint:(CDStruct_c3b9c2ee)arg1;
- (struct CGPoint)convertCoordinateToPoint:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_c3b9c2ee)convertPointToCoordinateOnSphere:(struct CGPoint)arg1;
- (CDStruct_c3b9c2ee)convertPointToCoordinate:(struct CGPoint)arg1;
- (struct CGPoint)convertMapPointToPoint:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_c3b9c2ee)convertPointToMapPoint:(struct CGPoint)arg1;
- (void)stopAnimations;
- (void)resumeFlyoverTourAnimation;
- (void)pauseFlyoverTourAnimation;
- (void)startFlyoverTourAnimation:(unsigned long long)arg1 animateToStart:(BOOL)arg2 labelChanged:(CDUnknownBlockType)arg3 stateChange:(CDUnknownBlockType)arg4;
- (void)stopFlyoverAnimation;
- (void)startFlyoverAnimation:(id)arg1 animateToStart:(BOOL)arg2 labelChanged:(CDUnknownBlockType)arg3 stateChange:(CDUnknownBlockType)arg4;
- (void)prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)createFlyoverPreTourAnimation:(id)arg1 duration:(double)arg2;
@property(nonatomic) id <VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;
- (id)viewportInfo;
- (id)camera;
- (void)updateCameraFromGlobe;
- (void)transferStateFromCanvas:(id)arg1;
- (struct CGPoint)_centerScreenPoint;
- (void)stopSnappingAnimations;
- (id)detailedDescriptionDictionaryRepresentation;
- (id)detailedDescription;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)setContentsScale:(double)arg1;
- (shared_ptr_a3c46825)styleManager;
- (void)_reloadStylesheet;
- (id)consoleString:(BOOL)arg1;
- (void)dealloc;
-     // Error parsing type: @36@0:8^{MapEngine=^^?{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}{_retain_ptr<GEOResourceManifestConfiguration *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}^{Device}{_retain_ptr<_MapEngineRenderQueueSource *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{unique_ptr<ggl::DisplayLink, std::__1::default_delete<ggl::DisplayLink> >={__compressed_pair<ggl::DisplayLink *, std::__1::default_delete<ggl::DisplayLink> >=^{DisplayLink}}}{unique_ptr<ggl::SnapshotRunLoop, std::__1::default_delete<ggl::SnapshotRunLoop> >={__compressed_pair<ggl::SnapshotRunLoop *, std::__1::default_delete<ggl::SnapshotRunLoop> >=^{SnapshotRunLoop}}}^{RunLoop}{unique_ptr<md::AnimationManager, std::__1::default_delete<md::AnimationManager> >={__compressed_pair<md::AnimationManager *, std::__1::default_delete<md::AnimationManager> >=^{AnimationManager}}}{unique_ptr<md::AnimationRunner, std::__1::default_delete<md::AnimationRunner> >={__compressed_pair<md::AnimationRunner *, std::__1::default_delete<md::AnimationRunner> >=^{AnimationRunner}}}{shared_ptr<md::RunLoopController>=^{RunLoopController}^{__shared_weak_count}}@@@@{unique_ptr<md::CartographicRenderer, std::__1::default_delete<md::CartographicRenderer> >={__compressed_pair<md::CartographicRenderer *, std::__1::default_delete<md::CartographicRenderer> >=^{CartographicRenderer}}}{unique_ptr<md::realistic::RealisticRenderer, std::__1::default_delete<md::realistic::RealisticRenderer> >={__compressed_pair<md::realistic::RealisticRenderer *, std::__1::default_delete<md::realistic::RealisticRenderer> >=^{RealisticRenderer}}}^{Renderer}{unique_ptr<md::LayoutContext, std::__1::default_delete<md::LayoutContext> >={__compressed_pair<md::LayoutContext *, std::__1::default_delete<md::LayoutContext> >=^{LayoutContext}}}{_retain_ptr<VKCamera *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{shared_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{unique_ptr<md::LogicManager, std::__1::default_delete<md::LogicManager> >={__compressed_pair<md::LogicManager *, std::__1::default_delete<md::LogicManager> >=^{LogicManager}}}{unique_ptr<md::Statistics, std::__1::default_delete<md::Statistics> >={__compressed_pair<md::Statistics *, std::__1::default_delete<md::Statistics> >=^{Statistics}}}BBB{atomic<bool>=AB}{atomic<bool>=AB}B}16c24@28, name: initWithMapEngine:inBackground:manifestConfiguration:
- (void)stopLoading;
- (id)boundsForSelectedTransitLines;
- (void)deselectTransitLineMarker;
- (void)selectTransitLineMarker:(id)arg1;
- (id)selectedTransitLineIDs;
- (id)transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;
- (id)transitLineMarkersInCurrentViewport;
- (struct LabelSettings *)labelSettings;
- (void)setNightMode:(BOOL)arg1;
- (void)_setStyleTransitionProgress:(double)arg1 targetStyle:(struct DisplayStyle)arg2 step:(long long)arg3;
- (double)_styleTransitionProgress;
- (struct DisplayStyle)sourceMapDisplayStyle;
- (BOOL)supportsMapDisplayStyle:(struct DisplayStyle)arg1;
- (void)setStylesheetMapDisplayStyle:(struct DisplayStyle)arg1;
- (void)finishStyleBlend;
- (void)stylesheetAnimationDidEnd:(BOOL)arg1;
- (void)stylesheetAnimationDidProgress:(float)arg1;
- (void)stylesheetAnimationWillStartFromStyle:(struct DisplayStyle)arg1 toStyle:(struct DisplayStyle)arg2;
- (void)endStyleAnimationGroup;
- (void)beginStyleAnimationGroup;
- (void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(struct DisplayStyle)arg2 setupHandler:(CDUnknownBlockType)arg3;
@property(nonatomic) long long mapType;
- (void)setMapType:(long long)arg1 animated:(BOOL)arg2;
@property(nonatomic) BOOL trafficIncidentsEnabled;
@property(nonatomic) BOOL trafficEnabled;
- (BOOL)isPointValidForGesturing:(struct CGPoint)arg1;
@property(readonly, nonatomic) VKARCameraController *arCameraController; // @synthesize arCameraController=_arCameraController;
- (BOOL)useNewRenderPath;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

