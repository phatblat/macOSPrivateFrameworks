//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@protocol LabelManagerDelegate <NSObject>
-     // Error parsing type: v28@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16c24, name: labelManager:pendingArtworkIsReady:
-     // Error parsing type: v32@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16r^{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}24, name: labelManager:labelMarkerDidChangeState:
-     // Error parsing type: v32@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16r^{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}24, name: labelManager:selectedLabelMarkerWillDisappear:
-     // Error parsing type: v24@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16, name: labelManagerDidLayout:
-     // Error parsing type: v28@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16c24, name: labelManager:setNeedsDisplay:
-     // Error parsing type: v28@0:8^{LabelManager=^^?{weak_ptr<md::LabelManager>=^{LabelManager}^{__shared_weak_count}}{_retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}@fQCqCCBBBBBBBBBBBBBBBBBBBBBBBBBBB{atomic<bool>=AB}BBBBBBBBBBBBBB{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}{Box<unsigned int, 2>={Matrix<unsigned int, 2, 1>=[2I]}{Matrix<unsigned int, 2, 1>=[2I]}}BB^{LabelLayoutContext}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelLayoutContext=BBBBBCf{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}ddddddd{?={Matrix<double, 3, 1>=[3d]}{Matrix<double, 3, 1>=[3d]}fff}ffff{Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}{LabelAngle=C}f{Matrix<double, 4, 4>=[16d]}{Matrix<double, 4, 4>=[16d]}{Matrix<float, 2, 1>=[2f]}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}II{shared_ptr<const md::VenueLogicContext>=^{VenueLogicContext}^{__shared_weak_count}}}{LabelNavLayoutContext={Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}{Matrix<double, 3, 1>=[3d]}{Matrix<float, 2, 1>=[2f]}d{shared_ptr<md::AnchorContext>=^{AnchorContext}^{__shared_weak_count}}B}[5d]di{unique_ptr<md::LabelExternalObjectsModerator, std::__1::default_delete<md::LabelExternalObjectsModerator> >={__compressed_pair<md::LabelExternalObjectsModerator *, std::__1::default_delete<md::LabelExternalObjectsModerator> >=^{LabelExternalObjectsModerator}}}{unique_ptr<md::LabelTransitSupport, std::__1::default_delete<md::LabelTransitSupport> >={__compressed_pair<md::LabelTransitSupport *, std::__1::default_delete<md::LabelTransitSupport> >=^{LabelTransitSupport}}}{unique_ptr<md::LabelCustomFeatureSupport, std::__1::default_delete<md::LabelCustomFeatureSupport> >={__compressed_pair<md::LabelCustomFeatureSupport *, std::__1::default_delete<md::LabelCustomFeatureSupport> >=^{LabelCustomFeatureSupport}}}{unique_ptr<md::LabelNavSupport, std::__1::default_delete<md::LabelNavSupport> >={__compressed_pair<md::LabelNavSupport *, std::__1::default_delete<md::LabelNavSupport> >=^{LabelNavSupport}}}{unique_ptr<md::LabelNavTrafficSupport, std::__1::default_delete<md::LabelNavTrafficSupport> >={__compressed_pair<md::LabelNavTrafficSupport *, std::__1::default_delete<md::LabelNavTrafficSupport> >=^{LabelNavTrafficSupport}}}{unique_ptr<md::LabelImageLoader, std::__1::default_delete<md::LabelImageLoader> >={__compressed_pair<md::LabelImageLoader *, std::__1::default_delete<md::LabelImageLoader> >=^{LabelImageLoader}}}{unique_ptr<md::LabelTextDataLoader, std::__1::default_delete<md::LabelTextDataLoader> >={__compressed_pair<md::LabelTextDataLoader *, std::__1::default_delete<md::LabelTextDataLoader> >=^{LabelTextDataLoader}}}{unique_ptr<md::LabelGlyphImageLoader, std::__1::default_delete<md::LabelGlyphImageLoader> >={__compressed_pair<md::LabelGlyphImageLoader *, std::__1::default_delete<md::LabelGlyphImageLoader> >=^{LabelGlyphImageLoader}}}{vector<std::__1::shared_ptr<md::LabelMapTile>, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}^{shared_ptr<md::LabelMapTile>}{__compressed_pair<std::__1::shared_ptr<md::LabelMapTile> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{shared_ptr<md::LabelMapTile>}{StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator>=^{Allocator}}}}{Box<double, 2>={Matrix<double, 2, 1>=[2d]}{Matrix<double, 2, 1>=[2d]}}{set<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >={__tree<std::__1::shared_ptr<md::LabelMapTile>, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> >, geo::StdAllocator<std::__1::shared_ptr<md::LabelMapTile>, lhp::Allocator> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, geo::StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator> >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}{StdAllocator<std::__1::__tree_node<std::__1::shared_ptr<md::LabelMapTile>, void *>, lhp::Allocator>=^{Allocator}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<md::LabelMapTile> > >=Q}}}{unique_ptr<md::LabelFeaturePool, std::__1::default_delete<md::LabelFeaturePool> >={__compressed_pair<md::LabelFeaturePool *, std::__1::default_delete<md::LabelFeaturePool> >=^{LabelFeaturePool}}}{unique_ptr<md::LabelFeatureStyler, std::__1::default_delete<md::LabelFeatureStyler> >={__compressed_pair<md::LabelFeatureStyler *, std::__1::default_delete<md::LabelFeatureStyler> >=^{LabelFeatureStyler}}}{unique_ptr<md::LabelPool, std::__1::default_delete<md::LabelPool> >={__compressed_pair<md::LabelPool *, std::__1::default_delete<md::LabelPool> >=^{LabelPool}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<std::__1::shared_ptr<md::Label>, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}^{shared_ptr<md::Label>}{__compressed_pair<std::__1::shared_ptr<md::Label> *, geo::StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator> >=^{shared_ptr<md::Label>}{StdAllocator<std::__1::shared_ptr<md::Label>, lhp::Allocator>=^{Allocator}}}}{vector<md::Label *, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}^^{Label}{__compressed_pair<md::Label **, geo::StdAllocator<md::Label *, lhp::Allocator> >=^^{Label}{StdAllocator<md::Label *, lhp::Allocator>=^{Allocator}}}}{unique_ptr<md::FontAtlas, std::__1::default_delete<md::FontAtlas> >={__compressed_pair<md::FontAtlas *, std::__1::default_delete<md::FontAtlas> >=^{FontAtlas}}}{unique_ptr<md::FontTrackingCache, std::__1::default_delete<md::FontTrackingCache> >={__compressed_pair<md::FontTrackingCache *, std::__1::default_delete<md::FontTrackingCache> >=^{FontTrackingCache}}}{?={unique_ptr<md::FontGlyphCache, std::__1::default_delete<md::FontGlyphCache> >={__compressed_pair<md::FontGlyphCache *, std::__1::default_delete<md::FontGlyphCache> >=^{FontGlyphCache}}}}{unique_ptr<md::LabelMesh, std::__1::default_delete<md::LabelMesh> >={__compressed_pair<md::LabelMesh *, std::__1::default_delete<md::LabelMesh> >=^{LabelMesh}}}{unique_ptr<md::LabelStyleCache, std::__1::default_delete<md::LabelStyleCache> >={__compressed_pair<md::LabelStyleCache *, std::__1::default_delete<md::LabelStyleCache> >=^{LabelStyleCache}}}{shared_ptr<gss::StylesheetManager<gss::ScenePropertyID> >=^{StylesheetManager<gss::ScenePropertyID>}^{__shared_weak_count}}{unique_ptr<md::LabelCollider, std::__1::default_delete<md::LabelCollider> >={__compressed_pair<md::LabelCollider *, std::__1::default_delete<md::LabelCollider> >=^{LabelCollider}}}{unique_ptr<md::OcclusionManager, std::__1::default_delete<md::OcclusionManager> >={__compressed_pair<md::OcclusionManager *, std::__1::default_delete<md::OcclusionManager> >=^{OcclusionManager}}}QQ{shared_ptr<md::LabelTrafficTilePool>=^{LabelTrafficTilePool}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<md::LabelManagerCommand>, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}^{shared_ptr<md::LabelManagerCommand>}{__compressed_pair<std::__1::shared_ptr<md::LabelManagerCommand> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator> >=^{shared_ptr<md::LabelManagerCommand>}{StdAllocator<std::__1::shared_ptr<md::LabelManagerCommand>, lhp::Allocator>=^{Allocator}}}}IIIddQBIIIfI{array<bool, 12>=[12B]}fBB{shared_ptr<md::Label>=^{Label}^{__shared_weak_count}}{shared_ptr<md::LabelFeature>=^{LabelFeature}^{__shared_weak_count}}{LabelIdentifier=I}BqqfqCBBBBBBBBBBBBBBB{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}ii{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{SelectedLabelState={Box<float, 2>={Matrix<float, 2, 1>=[2f]}{Matrix<float, 2, 1>=[2f]}}BC}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{unique_ptr<md::Timer, std::__1::default_delete<md::Timer> >={__compressed_pair<md::Timer *, std::__1::default_delete<md::Timer> >=^{Timer}}}{_retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}{?={shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}}{shared_ptr<md::LabelMarker>=^{LabelMarker}^{__shared_weak_count}}{_retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>=^^?@{_retain_objc=}{_release_objc=}}BBB}IBf{vector<std::__1::shared_ptr<md::NavLabel>, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}^{shared_ptr<md::NavLabel>}{__compressed_pair<std::__1::shared_ptr<md::NavLabel> *, geo::StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator> >=^{shared_ptr<md::NavLabel>}{StdAllocator<std::__1::shared_ptr<md::NavLabel>, lhp::Allocator>=^{Allocator}}}}}16c24, name: labelManager:setNeedsLayout:
@end

