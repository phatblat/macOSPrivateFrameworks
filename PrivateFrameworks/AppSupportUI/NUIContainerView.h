//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

@class NSArray, NSMutableArray, NUIMultilineSizingHelper;

@interface NUIContainerView : NSView
{
    BOOL _isRTL;
    id <NUIContainerViewDelegate> _delegate;
    struct map<NSView *, _NUIContainerViewArrangedSubview, std::__1::less<NSView *>, std::__1::allocator<std::__1::pair<NSView *const, _NUIContainerViewArrangedSubview>>> _arrangedSubviewInfo;
    NSMutableArray *_arrangedSubviews;
    NSArray *_visibleArrangedSubviews;
    NUIMultilineSizingHelper *_multilineSizeHelper;
    struct NSEdgeInsets _effectiveLayoutMargins;
    NSView *_firstBaselineView;
    NSView *_lastBaselineView;
    struct vector<CALayer *, std::__1::allocator<CALayer *>> _debugBoundingBoxLayers;
    struct {
        unsigned int hiddenArrangedSubviewCount:16;
        unsigned int delaydInvalidation:8;
        unsigned int batchDepth:4;
        unsigned int inLayoutPass:2;
        unsigned int inMeasurementPass:2;
        unsigned int layoutDependency:2;
        unsigned int inEnsureArranged:1;
        unsigned int hasMargins:1;
        unsigned int sizeIsInvalid:1;
        unsigned int debugBoundingBoxes:1;
        unsigned int baselineRelative:1;
        unsigned int layoutMarginsRelative:1;
        unsigned int baselineLayoutMargins:1;
        unsigned int mustRestart:1;
        unsigned int delegateSystemLayoutSizeFittingSizeForArrangedSubview:1;
        unsigned int delegateLayoutFrameForArrangedSubview:1;
        unsigned int delegateWillMeasureFitting:1;
        unsigned int delegateShouldRestart:1;
        unsigned int delegateDidLayout:1;
    } _containerFlags;
    struct NSEdgeInsets _layoutMargins;
}

+ (void)initialize;
+ (BOOL)isDebugBoundingBoxesEnabled;
+ (BOOL)requiresConstraintBasedLayout;
+ (void)setEnableAPIMisuseAssertions:(BOOL)arg1;
+ (BOOL)enableAPIMisuseAssertions;
@property(nonatomic) struct NSEdgeInsets layoutMargins; // @synthesize layoutMargins=_layoutMargins;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)viewForLastBaselineLayout;
- (id)viewForFirstBaselineLayout;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) struct NUIDirectionalEdgeInsets directionalLayoutMargins;
- (void)invalidateIntrinsicContentSize;
- (void)_updateDebugBoundingBoxesIfNeeded;
- (void)layout;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)setMinimumSpacing:(struct NUIDirectionalEdgeInsets)arg1 adjacentToView:(id)arg2;
- (struct NUIDirectionalEdgeInsets)minimumSpacingAdjacentToView:(id)arg1;
- (void)setAlignment:(long long)arg1 forView:(id)arg2 inAxis:(long long)arg3;
- (long long)alignmentForView:(id)arg1 inAxis:(long long)arg2;
@property(nonatomic, getter=hasBaselineRelativeLayoutMarginsForArrangement) BOOL baselineRelativeLayoutMarginsForArrangement;
@property(nonatomic, getter=isLayoutMarginsRelativeArrangement) BOOL layoutMarginsRelativeArrangement;
@property(nonatomic, getter=isBaselineRelativeArrangement) BOOL baselineRelativeArrangement;
- (unsigned long long)indexOfArrangedSubview:(id)arg1;
- (void)replaceArrangedSubview:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceArrangedSubviewAtIndex:(unsigned long long)arg1 withView:(id)arg2;
- (void)insertArrangedSubview:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_addAsSubviewIfNeeded:(id)arg1;
- (void)removeArrangedSubview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)addArrangedSubview:(id)arg1;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1;
- (void)endBatchUpdates;
- (void)beginBatchUpdates;
- (unsigned int)_countHiddenArrangesSubviews;
@property(readonly, nonatomic) NSArray *visibleArrangedSubviews;
@property(copy, nonatomic) NSArray *arrangedSubviews;
@property(nonatomic) __weak id <NUIContainerViewDelegate> delegate;
- (BOOL)_verifyInternalConsistencyWarningOnly:(BOOL)arg1;
- (void)dealloc;
- (id)initWithArrangedSubviews:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isFlipped;
- (BOOL)needsBaselineDebugBoundingBoxesForArrangedSubview:(id)arg1;
- (BOOL)_isContainerView;
- (id)ns_containerWidgetType;
- (double)lastBaselineOffsetFromBottom;
- (double)firstBaselineOffsetFromTop;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (struct CGSize)intrinsicContentSize;
- (void)updateConstraints;
- (BOOL)isLayoutSizeDependentOnPerpendicularAxis;
- (BOOL)mustRestartMeasurement;
- (BOOL)shouldCancelMeasurementForCompressionInAxis:(long long)arg1;
- (BOOL)canCancelMeasurementForCompression;
- (void)layoutArrangedSubviewsInBounds:(struct CGRect)arg1;
- (id)calculateViewForLastBaselineLayout;
- (id)calculateViewForFirstBaselineLayout;
- (struct CGSize)calculateArrangedSizeFittingSize:(struct CGSize)arg1;
- (void)didRemoveArrangedSubview:(id)arg1 atIndex:(long long)arg2;
- (void)didInsertArrangedSubview:(id)arg1 atIndex:(long long)arg2;
- (void)assertNotInLayoutPass:(BOOL)arg1;
- (BOOL)isInLayoutPass;
- (struct CGRect)layoutFrameForArrangedSubview:(id)arg1 withProposedContentFrame:(struct CGRect)arg2;
- (struct CGSize)contentLayoutSizeFittingSize:(struct CGSize)arg1 forArrangedSubview:(id)arg2;
- (void)intrinsicContentSizeDidInvalidateForArrangedSubview:(id)arg1;
- (void)visibilityDidChangeForArrangedSubview:(id)arg1;
- (BOOL)setNeedsInvalidation:(long long)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct NSEdgeInsets)effectiveLayoutMargins;
- (void)ensureArrangedSubviewsAreValid;
- (BOOL)isInBatchUpdate;
- (struct CGRect)effectiveLayoutBounds;
- (id)debugDictionary;
@property(nonatomic, getter=isDebugBoundingBoxesEnabled) BOOL debugBoundingBoxesEnabled;
- (id)debugSetEnabledFlags;
- (id)debugSetDelegateRespondsToSelectors;
- (id)debugDictionaryForVisibleArrangedSubview:(id)arg1;
- (id)arrangedDescription;

@end

