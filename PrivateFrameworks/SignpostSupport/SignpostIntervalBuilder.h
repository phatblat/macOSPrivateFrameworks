//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMapTable, NSMutableDictionary, NSObject<OS_dispatch_queue>;

@interface SignpostIntervalBuilder : NSObject
{
    BOOL _buildAnimationCompositeIntervalTimelines;
    BOOL _compositeIntervalIsInFlight;
    NSMutableDictionary *_systemwideDictionary;
    NSMutableDictionary *_processwideDictionary;
    NSMutableDictionary *_threadwideDictionary;
    NSMapTable *_outstandingAnimationStarts;
    unsigned long long _totalCompositeIntervalCount;
    NSObject<OS_dispatch_queue> *_syncQueue;
}

+ (id)_framerateCalculationWhitelist;
+ (BOOL)_filterPassesRequiredSCForFramerate:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(nonatomic) BOOL compositeIntervalIsInFlight; // @synthesize compositeIntervalIsInFlight=_compositeIntervalIsInFlight;
@property(nonatomic) unsigned long long totalCompositeIntervalCount; // @synthesize totalCompositeIntervalCount=_totalCompositeIntervalCount;
@property(retain, nonatomic) NSMapTable *outstandingAnimationStarts; // @synthesize outstandingAnimationStarts=_outstandingAnimationStarts;
@property(readonly, nonatomic) NSMutableDictionary *threadwideDictionary; // @synthesize threadwideDictionary=_threadwideDictionary;
@property(readonly, nonatomic) NSMutableDictionary *processwideDictionary; // @synthesize processwideDictionary=_processwideDictionary;
@property(readonly, nonatomic) NSMutableDictionary *systemwideDictionary; // @synthesize systemwideDictionary=_systemwideDictionary;
@property(nonatomic) BOOL buildAnimationCompositeIntervalTimelines; // @synthesize buildAnimationCompositeIntervalTimelines=_buildAnimationCompositeIntervalTimelines;
- (void).cxx_destruct;
- (id)doneProcessing;
- (id)processEndEvent:(id)arg1 isAnimation:(char *)arg2;
- (void)_processCompositeInterval:(id)arg1;
- (BOOL)processBeginEvent:(id)arg1;
- (BOOL)eventIsCompositeLoopEvent:(id)arg1;
- (BOOL)isCompositeLoopSubsystem:(id)arg1 category:(id)arg2;
- (BOOL)_trackBegin:(id)arg1;
- (id)matchingEventForEvent:(id)arg1 removeIfFound:(BOOL)arg2;
- (id)_matchingEventForEvent:(id)arg1 removeIfFound:(BOOL)arg2;
- (void)_cleanupState;
- (id)init;

@end

