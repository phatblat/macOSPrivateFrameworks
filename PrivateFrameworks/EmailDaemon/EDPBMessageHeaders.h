//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PBCodable.h"

#import "NSCopying.h"

@interface EDPBMessageHeaders : PBCodable <NSCopying>
{
    CDStruct_5df41632 _bccAddress;
    CDStruct_5df41632 _bccContactIds;
    CDStruct_5df41632 _bccDomains;
    CDStruct_f0c997a8 _bccIsVips;
    CDStruct_5df41632 _ccAddress;
    CDStruct_5df41632 _ccContactIds;
    CDStruct_5df41632 _ccDomains;
    CDStruct_f0c997a8 _ccIsVips;
    CDStruct_5df41632 _references;
    CDStruct_5df41632 _subjectWords;
    CDStruct_5df41632 _toAddress;
    CDStruct_5df41632 _toContactIds;
    CDStruct_5df41632 _toDomains;
    CDStruct_f0c997a8 _toIsVips;
    unsigned long long _dateReceived;
    long long _listId;
    long long _sender;
    long long _senderContactId;
    long long _senderDomain;
    BOOL _messageIsForwarded;
    BOOL _messageIsReply;
    BOOL _senderIsVip;
    BOOL _userIsBcc;
    BOOL _userIsCc;
    BOOL _userIsSender;
    BOOL _userIsTo;
    struct {
        unsigned int dateReceived:1;
        unsigned int listId:1;
        unsigned int sender:1;
        unsigned int senderContactId:1;
        unsigned int senderDomain:1;
        unsigned int messageIsForwarded:1;
        unsigned int messageIsReply:1;
        unsigned int senderIsVip:1;
        unsigned int userIsBcc:1;
        unsigned int userIsCc:1;
        unsigned int userIsSender:1;
        unsigned int userIsTo:1;
    } _has;
}

@property(nonatomic) long long listId; // @synthesize listId=_listId;
@property(nonatomic) unsigned long long dateReceived; // @synthesize dateReceived=_dateReceived;
@property(nonatomic) BOOL userIsBcc; // @synthesize userIsBcc=_userIsBcc;
@property(nonatomic) BOOL userIsCc; // @synthesize userIsCc=_userIsCc;
@property(nonatomic) BOOL userIsTo; // @synthesize userIsTo=_userIsTo;
@property(nonatomic) BOOL messageIsForwarded; // @synthesize messageIsForwarded=_messageIsForwarded;
@property(nonatomic) BOOL messageIsReply; // @synthesize messageIsReply=_messageIsReply;
@property(nonatomic) BOOL userIsSender; // @synthesize userIsSender=_userIsSender;
@property(nonatomic) long long senderContactId; // @synthesize senderContactId=_senderContactId;
@property(nonatomic) BOOL senderIsVip; // @synthesize senderIsVip=_senderIsVip;
@property(nonatomic) long long senderDomain; // @synthesize senderDomain=_senderDomain;
@property(nonatomic) long long sender; // @synthesize sender=_sender;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setBccContactIds:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)bccContactIdAtIndex:(unsigned long long)arg1;
- (void)addBccContactId:(long long)arg1;
- (void)clearBccContactIds;
@property(readonly, nonatomic) long long *bccContactIds;
@property(readonly, nonatomic) unsigned long long bccContactIdsCount;
- (void)setBccIsVips:(char *)arg1 count:(unsigned long long)arg2;
- (BOOL)bccIsVipAtIndex:(unsigned long long)arg1;
- (void)addBccIsVip:(BOOL)arg1;
- (void)clearBccIsVips;
@property(readonly, nonatomic) char *bccIsVips;
@property(readonly, nonatomic) unsigned long long bccIsVipsCount;
- (void)setBccDomains:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)bccDomainAtIndex:(unsigned long long)arg1;
- (void)addBccDomain:(long long)arg1;
- (void)clearBccDomains;
@property(readonly, nonatomic) long long *bccDomains;
@property(readonly, nonatomic) unsigned long long bccDomainsCount;
- (void)setBccAddress:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)bccAddressAtIndex:(unsigned long long)arg1;
- (void)addBccAddress:(long long)arg1;
- (void)clearBccAddress;
@property(readonly, nonatomic) long long *bccAddress;
@property(readonly, nonatomic) unsigned long long bccAddressCount;
- (void)setCcContactIds:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)ccContactIdAtIndex:(unsigned long long)arg1;
- (void)addCcContactId:(long long)arg1;
- (void)clearCcContactIds;
@property(readonly, nonatomic) long long *ccContactIds;
@property(readonly, nonatomic) unsigned long long ccContactIdsCount;
- (void)setCcIsVips:(char *)arg1 count:(unsigned long long)arg2;
- (BOOL)ccIsVipAtIndex:(unsigned long long)arg1;
- (void)addCcIsVip:(BOOL)arg1;
- (void)clearCcIsVips;
@property(readonly, nonatomic) char *ccIsVips;
@property(readonly, nonatomic) unsigned long long ccIsVipsCount;
- (void)setCcDomains:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)ccDomainAtIndex:(unsigned long long)arg1;
- (void)addCcDomain:(long long)arg1;
- (void)clearCcDomains;
@property(readonly, nonatomic) long long *ccDomains;
@property(readonly, nonatomic) unsigned long long ccDomainsCount;
- (void)setCcAddress:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)ccAddressAtIndex:(unsigned long long)arg1;
- (void)addCcAddress:(long long)arg1;
- (void)clearCcAddress;
@property(readonly, nonatomic) long long *ccAddress;
@property(readonly, nonatomic) unsigned long long ccAddressCount;
- (void)setToContactIds:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)toContactIdAtIndex:(unsigned long long)arg1;
- (void)addToContactId:(long long)arg1;
- (void)clearToContactIds;
@property(readonly, nonatomic) long long *toContactIds;
@property(readonly, nonatomic) unsigned long long toContactIdsCount;
- (void)setToIsVips:(char *)arg1 count:(unsigned long long)arg2;
- (BOOL)toIsVipAtIndex:(unsigned long long)arg1;
- (void)addToIsVip:(BOOL)arg1;
- (void)clearToIsVips;
@property(readonly, nonatomic) char *toIsVips;
@property(readonly, nonatomic) unsigned long long toIsVipsCount;
- (void)setToDomains:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)toDomainAtIndex:(unsigned long long)arg1;
- (void)addToDomain:(long long)arg1;
- (void)clearToDomains;
@property(readonly, nonatomic) long long *toDomains;
@property(readonly, nonatomic) unsigned long long toDomainsCount;
- (void)setToAddress:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)toAddressAtIndex:(unsigned long long)arg1;
- (void)addToAddress:(long long)arg1;
- (void)clearToAddress;
@property(readonly, nonatomic) long long *toAddress;
@property(readonly, nonatomic) unsigned long long toAddressCount;
- (void)setReferences:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)referencesAtIndex:(unsigned long long)arg1;
- (void)addReferences:(long long)arg1;
- (void)clearReferences;
@property(readonly, nonatomic) long long *references;
@property(readonly, nonatomic) unsigned long long referencesCount;
@property(nonatomic) BOOL hasListId;
@property(nonatomic) BOOL hasDateReceived;
@property(nonatomic) BOOL hasUserIsBcc;
@property(nonatomic) BOOL hasUserIsCc;
@property(nonatomic) BOOL hasUserIsTo;
@property(nonatomic) BOOL hasMessageIsForwarded;
@property(nonatomic) BOOL hasMessageIsReply;
- (void)setSubjectWords:(long long *)arg1 count:(unsigned long long)arg2;
- (long long)subjectWordsAtIndex:(unsigned long long)arg1;
- (void)addSubjectWords:(long long)arg1;
- (void)clearSubjectWords;
@property(readonly, nonatomic) long long *subjectWords;
@property(readonly, nonatomic) unsigned long long subjectWordsCount;
@property(nonatomic) BOOL hasUserIsSender;
@property(nonatomic) BOOL hasSenderContactId;
@property(nonatomic) BOOL hasSenderIsVip;
@property(nonatomic) BOOL hasSenderDomain;
@property(nonatomic) BOOL hasSender;
- (void)dealloc;

@end

