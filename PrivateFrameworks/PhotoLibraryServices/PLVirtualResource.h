//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PLValidatesResourceModel.h"
#import "PLWriteableResource.h"

@class NSDate, NSString, NSURL, PLVirtualResourceUniformTypeIdentifierProxy;

@interface PLVirtualResource : NSObject <PLWriteableResource, PLValidatesResourceModel>
{
    short _localAvailabilityTarget;
    short _remoteAvailability;
    short _remoteAvailabilityTarget;
    short _trashedState;
    unsigned int _version;
    unsigned int _resourceType;
    unsigned int _recipeID;
    unsigned int _orientation;
    int _qualitySortValue;
    float _scale;
    id <PLAssetID> _assetID;
    id <PLResourceDataStore> _dataStore;
    long long _dataStoreSubtype;
    id <PLResourceDataStoreKey> _dataStoreKey;
    long long _unorientedWidth;
    long long _unorientedHeight;
    id <PLCodecIdentity> _codecID;
    id <PLUniformTypeIdentifierIdentity> _uniformTypeIdentifierID;
    NSDate *_trashedDate;
}

@property(readonly, nonatomic) short trashedState; // @synthesize trashedState=_trashedState;
@property(readonly, nonatomic) NSDate *trashedDate; // @synthesize trashedDate=_trashedDate;
- (void)setScale:(float)arg1;
@property(readonly, nonatomic) float scale;
- (void)setQualitySortValue:(int)arg1;
@property(readonly, nonatomic) int qualitySortValue;
- (void)setUniformTypeIdentifierID:(id)arg1;
@property(readonly, nonatomic) id <PLUniformTypeIdentifierIdentity> uniformTypeIdentifierID;
- (void)setCodecID:(id)arg1;
@property(readonly, nonatomic) id <PLCodecIdentity> codecID;
- (void)setUnorientedHeight:(long long)arg1;
@property(readonly, nonatomic) long long unorientedHeight;
- (void)setUnorientedWidth:(long long)arg1;
@property(readonly, nonatomic) long long unorientedWidth;
- (void)setOrientation:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int orientation;
@property(readonly, nonatomic) short remoteAvailabilityTarget; // @synthesize remoteAvailabilityTarget=_remoteAvailabilityTarget;
- (void)setRemoteAvailability:(short)arg1;
@property(readonly, nonatomic) short remoteAvailability;
@property(readonly, nonatomic) short localAvailabilityTarget; // @synthesize localAvailabilityTarget=_localAvailabilityTarget;
- (void)setDataStoreKey:(id)arg1;
@property(readonly, nonatomic) id <PLResourceDataStoreKey> dataStoreKey;
- (void)setDataStoreSubtype:(long long)arg1;
@property(readonly, nonatomic) long long dataStoreSubtype;
- (void)setDataStore:(id)arg1;
@property(readonly, nonatomic) id <PLResourceDataStore> dataStore;
- (void)setRecipeID:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int recipeID;
- (void)setResourceType:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int resourceType;
- (void)setVersion:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int version;
@property(readonly, copy, nonatomic) id <PLAssetID> assetID; // @synthesize assetID=_assetID;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
- (id)photosCTLJSONDict;
@property(readonly, nonatomic) NSURL *fileURL;
@property(readonly, nonatomic) PLVirtualResourceUniformTypeIdentifierProxy *uniformTypeIdentifier;
- (BOOL)isPlayableVideo;
@property(readonly, nonatomic) long long orientedHeight; // @dynamic orientedHeight;
@property(readonly, nonatomic) long long orientedWidth; // @dynamic orientedWidth;
@property(readonly, nonatomic) short localAvailability;
@property(readonly, nonatomic) long long estimatedDataLength; // @dynamic estimatedDataLength;
@property(readonly, nonatomic) long long dataLength; // @dynamic dataLength;
@property(readonly, nonatomic) unsigned long long cplType; // @dynamic cplType;
- (BOOL)isDerivative;
- (BOOL)isDefaultOrientation;
- (id)validateForAssetID:(id)arg1 resourceIdentity:(id)arg2;
- (id)initWithRecipe:(id)arg1 forAsset:(id)arg2;
- (id)initWithAsset:(id)arg1 resourceType:(unsigned int)arg2 version:(unsigned int)arg3 recipeID:(unsigned int)arg4;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

