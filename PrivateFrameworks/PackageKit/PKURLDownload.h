//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PackageKit/PKDownload.h>

#import "PKDownloadDelegate.h"

@class IASChunklist, NSData, NSFileHandle, NSLock, NSNumber, NSThread, NSURL, PKURLTransport;

@interface PKURLDownload : PKDownload <PKDownloadDelegate>
{
    BOOL _overwriteAllowed;
    BOOL _cancelled;
    id <PKDownloadDelegate><NSObject> _delegate;
    NSThread *_delegateThread;
    NSURL *_fileURL;
    NSURL *_chunklistURL;
    NSNumber *_chunklistSize;
    CDUnknownBlockType _connectionChallengeBlock;
    CDUnknownBlockType _sessionChallengeBlock;
    NSLock *_downloaderLock;
    PKURLTransport *_chunklistTransport;
    PKURLTransport *_fileTransport;
    NSFileHandle *_fileHandle;
    NSFileHandle *_chunklistHandle;
    IASChunklist *_chunklist;
    NSData *_chunklistHash;
    NSData *_fileResumeData;
    NSData *_chunklistResumeData;
}

+ (BOOL)canDownloadWithResumeData:(id)arg1;
+ (BOOL)canDownloadInBackground;
+ (BOOL)canDownloadURL:(id)arg1;
@property(retain) NSData *chunklistResumeData; // @synthesize chunklistResumeData=_chunklistResumeData;
@property(retain) NSData *fileResumeData; // @synthesize fileResumeData=_fileResumeData;
@property(retain, nonatomic) NSData *chunklistHash; // @synthesize chunklistHash=_chunklistHash;
@property(retain, nonatomic) IASChunklist *chunklist; // @synthesize chunklist=_chunklist;
@property(retain, nonatomic) NSFileHandle *chunklistHandle; // @synthesize chunklistHandle=_chunklistHandle;
@property(retain, nonatomic) NSFileHandle *fileHandle; // @synthesize fileHandle=_fileHandle;
@property(retain) PKURLTransport *fileTransport; // @synthesize fileTransport=_fileTransport;
@property(retain) PKURLTransport *chunklistTransport; // @synthesize chunklistTransport=_chunklistTransport;
@property BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(retain, nonatomic) NSLock *downloaderLock; // @synthesize downloaderLock=_downloaderLock;
@property(copy) CDUnknownBlockType sessionChallengeBlock; // @synthesize sessionChallengeBlock=_sessionChallengeBlock;
@property(copy) CDUnknownBlockType connectionChallengeBlock; // @synthesize connectionChallengeBlock=_connectionChallengeBlock;
@property BOOL overwriteAllowed; // @synthesize overwriteAllowed=_overwriteAllowed;
@property(retain) NSNumber *chunklistSize; // @synthesize chunklistSize=_chunklistSize;
@property(retain) NSURL *chunklistURL; // @synthesize chunklistURL=_chunklistURL;
@property(retain) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain) NSThread *delegateThread; // @synthesize delegateThread=_delegateThread;
- (id)delegate;
- (void).cxx_destruct;
- (void)__runBlock:(CDUnknownBlockType)arg1;
- (void)_runBlockOnThread:(id)arg1 withBlock:(CDUnknownBlockType)arg2 waitUntilDone:(BOOL)arg3;
- (void)_runBlockOnDelegateThread:(CDUnknownBlockType)arg1 waitUntilDone:(BOOL)arg2;
- (void)download:(id)arg1 didReceiveChallenge:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)download:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned long long)arg2;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)downloadDidBegin:(id)arg1;
- (void)download:(id)arg1 receiveLogWithLevel:(unsigned long long)arg2 withLogMesage:(id)arg3;
- (void)download:(id)arg1 didCheckDataOfLength:(unsigned long long)arg2;
- (void)download:(id)arg1 receivedResumeBytesOfLength:(long long)arg2;
- (id)download:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (BOOL)failedDownloadValidation;
- (BOOL)validatesDuringDownload;
- (void)setDestination:(id)arg1 allowOverwrite:(BOOL)arg2;
- (id)resumeData;
- (id)sourceURL;
- (id)sourcePath;
- (void)cancel;
- (void)start;
- (void)_populateChunklistFromDiskIfExists;
- (BOOL)_appendFileURL:(id)arg1 toURL:(id)arg2;
- (void)_downloadChunk:(id)arg1 usingQueue:(id)arg2 withChunkIndex:(unsigned long long)arg3 withChunkSizes:(id)arg4 withChunksValid:(id)arg5 withChunkAttempt:(unsigned long long)arg6 withBytesDownloadedSoFor:(unsigned long long)arg7 withReply:(CDUnknownBlockType)arg8;
- (void)_beginDownloadOfURL:(id)arg1 acceptingRanges:(BOOL)arg2 withExpectedLength:(long long)arg3 withQueue:(id)arg4;
- (BOOL)_verifyFileIntegrityAgainstChunklist:(id)arg1 withRange:(struct _NSRange)arg2;
- (void)_startAsyncFileDownload;
- (void)_asyncDownloadChunklist;
- (id)_localPathFromRemoteURL:(id)arg1 appendingExtension:(BOOL)arg2;
- (id)_validateChunklistIntegrityAndReturnChunklistForHandle:(id)arg1 withOutHash:(id *)arg2 withError:(id *)arg3;
- (void)dealloc;
- (id)initWithResumeData:(id)arg1 destination:(id)arg2 delegate:(id)arg3;
- (id)initWithURL:(id)arg1 withChunklistURL:(id)arg2 withChunklistSize:(id)arg3 delegate:(id)arg4;
- (void)establishAuthenticationChallengeBlocks;

@end

