//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NMSSHSession, NSData, NSDictionary, NSObject<OS_dispatch_source>;

@interface NMSSHChannel : NSObject
{
    BOOL _requestPty;
    NMSSHSession *_session;
    unsigned long long _bufferSize;
    id <NMSSHChannelDelegate> _delegate;
    long long _type;
    NSData *_lastResponse;
    long long _ptyTerminalType;
    NSDictionary *_environmentVariables;
    struct _LIBSSH2_CHANNEL *_channel;
    const char *_ptyTerminalName;
    NSObject<OS_dispatch_source> *_source;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *source; // @synthesize source=_source;
@property(nonatomic) const char *ptyTerminalName; // @synthesize ptyTerminalName=_ptyTerminalName;
@property(nonatomic) struct _LIBSSH2_CHANNEL *channel; // @synthesize channel=_channel;
@property(retain, nonatomic) NSDictionary *environmentVariables; // @synthesize environmentVariables=_environmentVariables;
@property(nonatomic) long long ptyTerminalType; // @synthesize ptyTerminalType=_ptyTerminalType;
@property(nonatomic) BOOL requestPty; // @synthesize requestPty=_requestPty;
@property(retain, nonatomic) NSData *lastResponse; // @synthesize lastResponse=_lastResponse;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) __weak id <NMSSHChannelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long bufferSize; // @synthesize bufferSize=_bufferSize;
@property(retain, nonatomic) NMSSHSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (BOOL)downloadFile:(id)arg1 to:(id)arg2 progress:(CDUnknownBlockType)arg3;
- (BOOL)downloadFile:(id)arg1 to:(id)arg2;
- (BOOL)uploadFile:(id)arg1 to:(id)arg2 progress:(CDUnknownBlockType)arg3;
- (BOOL)uploadFile:(id)arg1 to:(id)arg2;
- (BOOL)requestSizeWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;
- (BOOL)writeData:(id)arg1 error:(id *)arg2 timeout:(id)arg3;
- (BOOL)writeData:(id)arg1 error:(id *)arg2;
- (BOOL)write:(id)arg1 error:(id *)arg2 timeout:(id)arg3;
- (BOOL)write:(id)arg1 error:(id *)arg2;
- (void)closeShell;
- (BOOL)startShell:(id *)arg1;
- (void)executeCommandAsynchronously:(id)arg1;
- (id)readResponseWithError:(id *)arg1 timeout:(id)arg2 userInfo:(id)arg3;
- (id)execute:(id)arg1 error:(id *)arg2 timeout:(id)arg3;
- (id)execute:(id)arg1 error:(id *)arg2;
- (void)waitEOF;
- (BOOL)sendEOF;
- (void)closeChannel;
- (BOOL)openChannel:(id *)arg1;
- (id)initWithSession:(id)arg1;

@end

