//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class PVVideoCompositingContext;

@protocol PVRenderJobDelegate <NSObject>
+ (unsigned int)jobTypeTag;
@property(readonly) PVVideoCompositingContext *videoCompositingContext;
@property(readonly) unsigned int jobTypeTag;
- (void)renderJobFinished:(HGRef_e03d2d21)arg1;
- (void)finishCancelledJob;
- (void)finishCompletedJob;
-     // Error parsing type: v40@0:8^{vector<HGRef<HGBitmap>, std::__1::allocator<HGRef<HGBitmap> > >=^{HGRef<HGBitmap>}^{HGRef<HGBitmap>}{__compressed_pair<HGRef<HGBitmap> *, std::__1::allocator<HGRef<HGBitmap> > >=^{HGRef<HGBitmap>}}}16r^{HGRenderContext=^^?{atomic<unsigned int>=AI}{shared_ptr<const HGComputeDevice>=^{HGComputeDevice}^{__shared_weak_count}}iii^{HGRenderQueue}^{HGSynchronizable}^{HGSynchronizer}^{HGRenderer}iiiBQQ{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}}24^{FrameStats=I{?=qiIq}dddBBI{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}}32, name: setupDestinationBuffers:renderContext:frameStats:
-     // Error parsing type: v40@0:8^{vector<HGRef<HGNode>, std::__1::allocator<HGRef<HGNode> > >=^{HGRef<HGNode>}^{HGRef<HGNode>}{__compressed_pair<HGRef<HGNode> *, std::__1::allocator<HGRef<HGNode> > >=^{HGRef<HGNode>}}}16r^{HGRenderContext=^^?{atomic<unsigned int>=AI}{shared_ptr<const HGComputeDevice>=^{HGComputeDevice}^{__shared_weak_count}}iii^{HGRenderQueue}^{HGSynchronizable}^{HGSynchronizer}^{HGRenderer}iiiBQQ{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}}24^{FrameStats=I{?=qiIq}dddBBI{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}}32, name: buildGraph:renderContext:frameStats:

@optional
- (unsigned long long)packedFamilyCode;
- (int)renderContextPriority;
- (int)renderThreadPriority;
- (int)graphBuildThreadPriority;
- (int)jobPriority;
@end

