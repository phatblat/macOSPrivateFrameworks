//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PVRenderJobDelegate.h"

@class NSString, PVEffect, PVRendererBase, PVVideoCompositingContext;

@interface PVEffectPreviewRenderJobDelegate : NSObject <PVRenderJobDelegate>
{
    PVEffect *m_effect;
    CDStruct_1b6d18a9 m_time;
    struct CGImage *m_input;
    HGRef_265f9e4c m_inputHGNode;
    struct CGSize m_outputSize;
    CDUnknownBlockType m_completionHandler;
    PVRendererBase *m_pvRenderer;
    struct HGRef<HGCVBitmap> m_outputCVBitmap;
    struct PVImageProperties m_imageCreationProperties;
}

+ (unsigned int)jobTypeTag;
+ (void)cleanupCaches;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)packedFamilyCode;
- (int)renderThreadPriority;
- (int)jobPriority;
- (void)renderJobFinished:(HGRef_e03d2d21)arg1;
- (void)finishCancelledJob;
- (struct CGImage *)_makeResultImage;
- (void)finishCompletedJob;
-     // Error parsing type: v40@0:8^{vector<HGRef<HGBitmap>, std::__1::allocator<HGRef<HGBitmap> > >=^{HGRef<HGBitmap>}^{HGRef<HGBitmap>}{__compressed_pair<HGRef<HGBitmap> *, std::__1::allocator<HGRef<HGBitmap> > >=^{HGRef<HGBitmap>}}}16r^{HGRenderContext=^^?{atomic<unsigned int>=AI}{shared_ptr<const HGComputeDevice>=^{HGComputeDevice}^{__shared_weak_count}}iii^{HGRenderQueue}^{HGSynchronizable}^{HGSynchronizer}^{HGRenderer}iiiBQQ{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}}24^{FrameStats=I{?=qiIq}dddBBI{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}}32, name: setupDestinationBuffers:renderContext:frameStats:
-     // Error parsing type: v32@0:8r^{HGRenderContext=^^?{atomic<unsigned int>=AI}{shared_ptr<const HGComputeDevice>=^{HGComputeDevice}^{__shared_weak_count}}iii^{HGRenderQueue}^{HGSynchronizable}^{HGSynchronizer}^{HGRenderer}iiiBQQ{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}}16^{FrameStats=I{?=qiIq}dddBBI{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}}24, name: _setupInputHGNode:frameStats:
-     // Error parsing type: v40@0:8^{vector<HGRef<HGNode>, std::__1::allocator<HGRef<HGNode> > >=^{HGRef<HGNode>}^{HGRef<HGNode>}{__compressed_pair<HGRef<HGNode> *, std::__1::allocator<HGRef<HGNode> > >=^{HGRef<HGNode>}}}16r^{HGRenderContext=^^?{atomic<unsigned int>=AI}{shared_ptr<const HGComputeDevice>=^{HGComputeDevice}^{__shared_weak_count}}iii^{HGRenderQueue}^{HGSynchronizable}^{HGSynchronizer}^{HGRenderer}iiiBQQ{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}}24^{FrameStats=I{?=qiIq}dddBBI{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}}32, name: buildGraph:renderContext:frameStats:
@property(readonly) PVVideoCompositingContext *videoCompositingContext;
@property(readonly) unsigned int jobTypeTag;
- (void)dealloc;
- (id)initWEffect:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2 inputImage:(struct CGImage *)arg3 outputSize:(struct CGSize)arg4 completionHandler:(CDUnknownBlockType)arg5 pvRenderer:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

