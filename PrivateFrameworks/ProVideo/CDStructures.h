//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class PVInstructionGraphImageSourceNode;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ArcCompute {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColorSpace;

struct CGContext;

struct CGDataProvider;

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CachedImageInfo {
    char cached;
    struct CGSize size;
    char imageExists;
    PVInstructionGraphImageSourceNode *_source;
    struct HGSynchronizable *_lock;
};

struct ColorComponents {
    int _field1;
    double _field2[5];
};

struct ColorHisto {
    struct vector<int, std::__1::allocator<int>> _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ContextHandle {
    struct shared_ptr<ProGL::Private::ContextImpl> _field1;
};

struct ContextImpl;

struct EdgeFacet {
    struct vector<LiPolygon::PosEdge, std::__1::allocator<LiPolygon::PosEdge>> *_field1;
};

struct FigTime {
    CDStruct_1b6d18a9 _t;
};

struct FracturedFXPoolItem;

struct FracturedParams {
    _Bool _field1;
    float _field2;
    _Bool _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    float _field10;
    int _field11;
    float _field12;
    float _field13;
    double _field14[4];
    _Bool _field15;
    double _field16[4];
    float _field17;
    float _field18;
    _Bool _field19;
    float _field20;
    int _field21;
    _Bool _field22;
    float _field23;
    float _field24;
    _Bool _field25;
    float _field26;
    float _field27[2];
    float _field28[2];
};

struct FrameStats {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    double _field3;
    double _field4;
    double _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned int _field8;
    struct vector<double, std::__1::allocator<double>> _field9;
};

struct FrameStatsDescription;

struct FxBitmapImagePriv {
    id _field1;
    unsigned long long _field2;
    struct CGSize _field3;
    int _field4;
    struct CGColorSpace *_field5;
    struct CGContext *_field6;
    struct CGImage *_field7;
    struct CGDataProvider *_field8;
};

struct FxBitmapPriv {
    void *_field1;
    unsigned long long _field2;
    char _field3;
};

struct FxContextPriv {
    int _field1;
    id _field2;
    union {
        struct {
            struct CGImage *_field1;
        } _field1;
        struct {
            struct CGContext *_field1;
        } _field2;
        struct {
            unsigned long long _field1;
            struct CGSize _field2;
            char _field3;
            struct CGColorSpace *_field4;
        } _field3;
        CDStruct_183fa7cb _field4;
        CDStruct_183fa7cb _field5;
        CDStruct_183fa7cb _field6;
    } _field3;
};

struct FxHeliumImagePriv {
    HGRef_265f9e4c _field1;
};

struct FxHostCapabilitiesPriv {
    id _field1;
    unsigned int _field2;
    id _field3;
    id _field4;
};

struct FxHostPriv {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
};

struct FxImagePriv {
    CDStruct_4a07eeda _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    double _field4;
    double _field5;
    unsigned long long _field6;
    CDUnknownFunctionPointerType _field7;
    void *_field8;
    struct CGRect _field9;
    struct FxRect _field10;
    id _field11;
    struct CGColorSpace *_field12;
    unsigned long long _field13;
    int _field14;
};

struct FxKeyframeInfo {
    unsigned long long _field1;
    CDUnion_baaf6063 _field2;
    unsigned long long _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
};

struct FxMetaPlugPriv {
    id _field1;
    id _field2;
};

struct FxParameterAnglePriv {
    char _field1;
    double _field2;
    double _field3;
};

struct FxParameterColorPriv {
    char _field1;
};

struct FxParameterGroupPriv {
    id _field1;
};

struct FxParameterListSelectionPriv {
    int _field1;
    id _field2;
};

struct FxParameterPoint2dPriv {
    char _field1;
    char _field2;
};

struct FxParameterPoint3dPriv {
    id _field1;
};

struct FxParameterSliderPriv {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    char _field6;
};

struct FxParameterTextPriv {
    char _field1;
};

struct FxPathGeometryInfo {
    double _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    id _field4;
};

struct FxPinPriv {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    int _field7;
    Class _field8;
};

struct FxPlugDescriptorPriv {
    id _field1;
    id _field2;
};

struct FxPlugGroupDescriptorPriv {
    id _field1;
};

struct FxPlugGroupPriv {
    id _field1;
    id _field2;
};

struct FxPlugPriv {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct FxPoint3D {
    double _field1;
    double _field2;
    double _field3;
};

struct FxRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct FxSamplePriv {
    double _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct FxShapePriv {
    struct CGRect _field1;
    char _field2;
};

struct FxStreamPriv {
    id _field1;
};

struct FxTexturePriv {
    unsigned int _field1;
    unsigned int _field2;
    char _field3;
};

struct FxTransformPriv {
    struct CGPoint _field1;
    float _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct FxVertex {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    double _field4;
    unsigned long long _field5;
};

struct GLRenderer;

struct HGBitmap;

struct HGCVBitmap;

struct HGCVPixelBuffer;

struct HGCVPixelBufferPool;

struct HGComputeDevice;

struct HGEquirectProjectParams {
    float _field1[3];
    float _field2[3];
    float _field3[3];
    float _field4;
    float _field5;
    _Bool _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    _Bool _field17;
    float _field18[4];
    float _field19[4];
    float _field20[4];
    float _field21[4];
};

struct HGGLBlend;

struct HGGLContext;

struct HGGLTexture;

struct HGNode;

struct HGRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct HGRef<HGBitmap> {
    struct HGBitmap *m_Obj;
};

struct HGRef<HGCVBitmap> {
    struct HGCVBitmap *m_Obj;
};

struct HGRef<HGCVPixelBuffer> {
    struct HGCVPixelBuffer *m_Obj;
};

struct HGRef<HGCVPixelBufferPool> {
    struct HGCVPixelBufferPool *m_Obj;
};

struct HGRef<HGGLBlend> {
    struct HGGLBlend *_field1;
};

struct HGRef<HGGLContext> {
    struct HGGLContext *_field1;
};

struct HGRef<HGGLTexture> {
    struct HGGLTexture *m_Obj;
};

struct HGRef<HGNode> {
    struct HGNode *m_Obj;
};

struct HGRef<HGRenderJob> {
    struct HGRenderJob *m_Obj;
};

struct HGRef<HGRenderQueue> {
    struct HGRenderQueue *m_Obj;
};

struct HGRef<HGRenderer> {
    struct HGRenderer *_field1;
};

struct HGRef<HGXForm> {
    struct HGXForm *_field1;
};

struct HGRef<HStyleTransfer> {
    struct HStyleTransfer *m_Obj;
};

struct HGRef<PVCVPixelBufferPool>;

struct HGRef<PVInstructionGraphContext> {
    struct PVInstructionGraphContext *m_Obj;
};

struct HGRef<PVRenderJob> {
    struct PVRenderJob *_field1;
};

struct HGRef<PVRenderLinkJob> {
    struct PVRenderLinkJob *_field1;
};

struct HGRef<PVRenderManager> {
    struct PVRenderManager *m_Obj;
};

struct HGRenderJob;

struct HGRenderQueue;

struct HGRenderer;

struct HGSynchronizable {
    CDUnknownFunctionPointerType *_field1;
    struct _opaque_pthread_mutex_t _field2;
    struct _opaque_pthread_t *_field3;
    unsigned long long _field4;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field5;
};

struct HGXForm;

struct HStyleTransfer;

struct IPImage {
    struct CGRect fullRect;
    struct CGRect imageRect;
    float xScale;
    float yScale;
    unsigned int textureID;
    unsigned int textureTarget;
    unsigned int textureInternalFormat;
    unsigned int textureFormat;
    unsigned int textureType;
    unsigned int textureUnit;
    unsigned int drawFBO;
};

struct LiAgent {
    struct LiAgent *_field1;
    struct LiImageSource *_field2;
    struct LiImageSource *_field3;
    struct LiImageSource *_field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    struct LiRenderParameters *_field9;
    _Bool _field10;
    PCRect_54d5786f _field11;
    _Bool _field12;
    PCRect_54d5786f _field13;
    struct LiClipSet _field14;
    struct LiClipSet *_field15;
    struct LiClipSet *_field16;
    PCMatrix44Tmpl_93ed1289 *_field17;
    PCMatrix44Tmpl_93ed1289 *_field18;
    PCMatrix44Tmpl_93ed1289 *_field19;
    PCMatrix44Tmpl_93ed1289 *_field20;
    PCMatrix44Tmpl_93ed1289 *_field21;
    PCMatrix44Tmpl_93ed1289 *_field22;
    PCMatrix44Tmpl_93ed1289 *_field23;
    PCMatrix44Tmpl_93ed1289 *_field24;
    PCMatrix44Tmpl_93ed1289 *_field25;
    PCMatrix44Tmpl_93ed1289 *_field26;
    PCMatrix44Tmpl_93ed1289 *_field27;
    _Bool _field28;
    HGRef_265f9e4c _field29;
    struct LiImagePolygon _field30;
    _Bool _field31;
    PCVector2_79a470e1 _field32;
    struct LiAgentData *_field33;
    struct PCColorSpaceHandle _field34;
    struct PCColorSpaceHandle _field35;
};

struct LiAgentData;

struct LiCamera;

struct LiChannelT<PCVector3<double>> {
    struct vector<PCVector3<double>, std::__1::allocator<PCVector3<double>>> _field1;
};

struct LiClipSet {
    struct PCArray<PCVector4<double>, PCArray_Traits<PCVector4<double>>> _field1;
    struct PCArray<int, PCArray_Traits<int>> _field2;
};

struct LiImagePolygon {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct PCPlane<double> _field3;
    struct vector<LiPolygon::PosEdge, std::__1::allocator<LiPolygon::PosEdge>> _field4;
    struct PosFacet _field5;
    _Bool _field6;
    struct LiChannelT<PCVector3<double>> _field7;
    struct LiChannelT<PCVector3<double>> _field8;
    struct EdgeFacet _field9;
};

struct LiImageSource;

struct LiLight;

struct LiLightSet {
    struct PCArray<LiLight, PCArray_Traits<LiLight>> _field1;
    _Bool _field2;
};

struct LiRenderParameters;

struct LiRenderingTechnology {
    unsigned int _field1;
    int _field2;
    int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    int _field15;
    int _field16;
    _Bool _field17;
};

struct METimeRemap {
    struct FigTime _introDuration;
    struct FigTime _outroDuration;
    struct FigTime _scaleableDuration;
    _Bool _isIntroOptional;
    _Bool _isOutroOptional;
    _Bool _isStartTimeAligned;
    _Bool _isEndTimeAligned;
    _Bool _isLoop;
    _Bool _forceDisableLoop;
    char _forceDisableBuildAnimation;
    struct OZChannelBool *_pBuildInEnableChan;
    struct OZChannelBool *_pBuildOutEnableChan;
};

struct Mat4f {
    struct Vec4f _field1[4];
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct OMEdge;

struct OMSamples {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
    struct vector<OMSamplesElem *, std::__1::allocator<OMSamplesElem *>> *_field7;
    vector_ff5abfb7 _field8;
    vector_ff5abfb7 _field9;
    vector_ff5abfb7 _field10;
    struct vector<std::__1::vector<Vec3f, std::__1::allocator<Vec3f>>, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f>>>> _field11;
    struct vector<OMEdge, std::__1::allocator<OMEdge>> _field12;
};

struct OMSamplesElem {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    int _field4;
    struct vector<Vec2f, std::__1::allocator<Vec2f>> _field5;
    vector_ff5abfb7 _field6;
    _Bool _field7;
};

struct OMSpline {
    struct vector<OMVertex, std::__1::allocator<OMVertex>> _field1;
    int _field2;
    float _field3;
    _Bool _field4;
    _Bool _field5;
};

struct OMUtilErf {
    struct vector<float, std::__1::allocator<float>> _field1;
};

struct OMVertex;

struct OZCanvasState;

struct OZChannelBase {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    struct PCString _field5;
    struct PCString *_field6;
    struct OZChannelFolder *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    void *_field10;
    struct __CFString *_field11;
    struct __CFString *_field12;
    struct __CFString *_field13;
    struct OZChannelTimeConverter *_field14;
};

struct OZChannelBlindData;

struct OZChannelBool {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    struct PCString _field5;
    struct PCString *_field6;
    struct OZChannelFolder *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    void *_field10;
    struct __CFString *_field11;
    struct __CFString *_field12;
    struct __CFString *_field13;
    struct OZChannelTimeConverter *_field14;
    struct OZChannelImpl *_field15;
    struct OZChannelImpl *_field16;
    struct OZChannelInfo *_field17;
    struct OZChannelInfo *_field18;
    struct OZCurve *_field19;
};

struct OZChannelFolder {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    struct PCString _field5;
    struct PCString *_field6;
    struct OZChannelFolder *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    void *_field10;
    struct __CFString *_field11;
    struct __CFString *_field12;
    struct __CFString *_field13;
    struct OZChannelTimeConverter *_field14;
    struct vector<OZChannelBase *, std::__1::allocator<OZChannelBase *>> *_field15;
    unsigned int _field16;
    unsigned int _field17;
};

struct OZChannelImpl;

struct OZChannelInfo;

struct OZChannelPercent {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    struct PCString _field5;
    struct PCString *_field6;
    struct OZChannelFolder *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    void *_field10;
    struct __CFString *_field11;
    struct __CFString *_field12;
    struct __CFString *_field13;
    struct OZChannelTimeConverter *_field14;
    struct OZChannelImpl *_field15;
    struct OZChannelImpl *_field16;
    struct OZChannelInfo *_field17;
    struct OZChannelInfo *_field18;
    struct OZCurve *_field19;
};

struct OZChannelRef;

struct OZChannelSceneNode {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    struct PCString _field5;
    struct PCString *_field6;
    struct OZChannelFolder *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    void *_field10;
    struct __CFString *_field11;
    struct __CFString *_field12;
    struct __CFString *_field13;
    struct OZChannelTimeConverter *_field14;
    struct vector<OZChannelBase *, std::__1::allocator<OZChannelBase *>> *_field15;
    unsigned int _field16;
    unsigned int _field17;
    struct FigTime _field18;
    struct PCTimeRange _field19;
    _Bool _field20;
    _Bool _field21;
    struct OZObjectManipulator *_field22;
    struct OZTimeMarkerSet *_field23;
    struct list<OZSimulationBehavior *, std::__1::allocator<OZSimulationBehavior *>> _field24;
    struct PCString _field25;
    struct OZSceneNode *_field26;
};

struct OZChannelTimeConverter;

struct OZCurve;

struct OZDocument {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct PCSafeHandle *_field3;
    struct OZScene *_field4;
    struct PCString _field5;
    struct list<OZObjectSelections *, std::__1::allocator<OZObjectSelections *>> _field6;
    struct vector<OZChannelRef, std::__1::allocator<OZChannelRef>> _field7;
    struct PCString _field8;
    unsigned int _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    _Bool _field13;
    int _field14;
    struct PCString _field15;
    struct PCString _field16;
    unsigned int _field17;
    unsigned long long _field18;
    _Bool _field19;
    struct OZNotificationManager *_field20;
    id _field21;
    _Bool _field22;
    struct OZViewerState *_field23[4];
    struct OZCanvasState *_field24;
    struct OZProjectPanelState *_field25;
    struct OZTimelineState *_field26;
    struct OZInspectorState *_field27;
    _Bool _field28;
    unsigned int _field29;
    unsigned int _field30;
    struct PCString _field31;
    _Bool _field32;
    struct OZRigWidget *_field33;
    struct vector<OZChannelRef, std::__1::allocator<OZChannelRef>> _field34;
    int _field35;
    _Bool _field36;
};

struct OZElement;

struct OZFactory;

struct OZFxPlugRenderContextManager {
    CDUnknownFunctionPointerType *_vptr$OZFxPlugRenderContextManager;
    struct PCColorSpaceHandle _workingColorSpace;
    float _blendingGamma;
    struct map<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>, std::__1::less<_opaque_pthread_t *>, std::__1::allocator<std::__1::pair<_opaque_pthread_t *const, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>>> _contexts;
    struct PCSpinLock _contextLock;
};

struct OZFxPlugSharedBase {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    id _field3;
    id _field4;
    void *_field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    struct PCString _field20;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    int _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct OZChannelBase *_field34;
    _Bool _field35;
    id _field36;
    _Bool _field37;
    _Bool _field38;
    unsigned long long _field39;
    _Bool _field40;
    struct PCMutex _field41;
    unsigned int _field42;
};

struct OZInspectorState;

struct OZNotificationManager;

struct OZObjectManipulator;

struct OZPlaybackEngine {
    int _field1;
    int _field2;
};

struct OZProcessControl;

struct OZProjectPanelState;

struct OZRenderNode;

struct OZRenderParams {
    struct OZRenderState _field1;
    _Bool _field2;
    struct OZProcessControl *_field3;
    struct GLRenderer *_field4;
    struct shared_ptr<const HGComputeDevice> _field5;
    struct shared_ptr<const HGComputeDevice> _field6;
    struct PCImageAttributes _field7;
    struct PCHash128 _field8;
    struct PCHash128 _field9;
    _Bool _field10;
    PCVector2_5d498db0 _field11;
    PCVector2_5d498db0 _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    int _field26;
    _Bool _field27;
    unsigned int _field28;
    double _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    struct PCColor _field36;
    int _field37;
    _Bool _field38;
    PCRect_3a266109 _field39;
    PCRect_3a266109 _field40;
    PCRect_54d5786f _field41;
    PCRect_3a266109 _field42;
    _Bool _field43;
    int _field44;
    struct CGColorSpace *_field45;
    float _field46;
    struct PCColorSpaceHandle _field47;
    int _field48;
    struct PCColorSpaceHandle _field49;
    PCMatrix44Tmpl_93ed1289 _field50;
    _Bool _field51;
    struct OZPlaybackEngine _field52;
    id _field53;
    id _field54;
    struct FigTime _field55;
    map_184f33b3 *_field56;
    struct map<unsigned int, PCRect<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCRect<double>>>> _field57;
    struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _field58;
    struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _field59;
    double _field60;
    id _field61;
    struct FigTime _field62;
    struct FigTime _field63;
    struct FigTime _field64;
    struct FigTime _field65;
    struct FigTime _field66;
    _Bool _field67;
    _Bool _field68;
    _Bool _field69;
    _Bool _field70;
    struct shared_ptr<PCImage> _field71;
    _Bool _field72;
    _Bool _field73;
    struct PCPtr<OZRenderParams::SharedInfo> _field74;
    double _field75;
    double _field76;
    _Bool _field77;
    struct PCPtr<LiCamera> _field78;
    struct PCPtr<LiCamera> _field79;
    _Bool _field80;
    _Bool _field81;
    struct LiRenderingTechnology _field82;
    struct LiLightSet _field83;
    _Bool _field84;
    struct HGRef<HGCVBitmap> _field85;
    _Bool _field86;
    _Bool _field87;
    _Bool _field88;
};

struct OZRenderState {
    struct FigTime _field1;
    double _field2;
    double _field3;
    double _field4;
    unsigned int _field5;
    struct OZTransformNode *_field6;
    _Bool _field7;
    PCMatrix44Tmpl_93ed1289 _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    struct OZRenderNode *_field15;
    int _field16;
    _Bool _field17;
    struct OZElement *_field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    int _field30;
    struct TransformSet _field31;
    struct set<OZElement *, std::__1::less<OZElement *>, std::__1::allocator<OZElement *>> *_field32;
};

struct OZRig {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct PCSafeHandle *_field4;
    struct PCHash128 _field5;
    CDUnknownFunctionPointerType *_field6;
    struct OZChannelSceneNode _field7;
    struct OZChannelFolder _field8;
    struct OZChannelFolder _field9;
    struct OZChannelFolder _field10;
    struct OZChannelFolder _field11;
    struct OZChannelFolder _field12;
    struct OZSceneNode *_field13;
    struct OZScene *_field14;
    struct list<OZEffect *, std::__1::allocator<OZEffect *>> _field15;
    struct list<OZBehavior *, std::__1::allocator<OZBehavior *>> _field16;
    unsigned int _field17;
    double _field18;
    struct PCHash128 _field19;
    vector_f672cb0f _field20;
    struct __list_iterator<OZSceneNode *, void *> _field21;
    unsigned int _field22;
    struct OZChannelFolder _field23;
    struct list<OZSceneNode *, std::__1::allocator<OZSceneNode *>> _field24;
    unsigned int _field25;
    _Bool _field26;
    _Bool _field27;
    unsigned int _field28;
};

struct OZRigWidget;

struct OZScene;

struct OZSceneNode {
    CDUnknownFunctionPointerType *_field1;
    struct OZFactory *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct PCSafeHandle *_field4;
    struct PCHash128 _field5;
    CDUnknownFunctionPointerType *_field6;
    struct OZChannelSceneNode _field7;
    struct OZChannelFolder _field8;
    struct OZChannelFolder _field9;
    struct OZChannelFolder _field10;
    struct OZChannelFolder _field11;
    struct OZChannelFolder _field12;
    struct OZSceneNode *_field13;
    struct OZScene *_field14;
    struct list<OZEffect *, std::__1::allocator<OZEffect *>> _field15;
    struct list<OZBehavior *, std::__1::allocator<OZBehavior *>> _field16;
    unsigned int _field17;
    double _field18;
    struct PCHash128 _field19;
    vector_f672cb0f _field20;
    struct __list_iterator<OZSceneNode *, void *> _field21;
    unsigned int _field22;
};

struct OZTimeMarkerSet;

struct OZTimelineState;

struct OZTransformNode;

struct OZViewerState;

struct OnceStats {
    double _field1;
    double _field2;
};

struct PAEColorWheelData {
    double r;
    double t;
    double sat;
    double e;
};

struct PAEKeyerOMKeyer2D {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct pair<Vec2f, Vec2f> _field4;
    struct pair<Vec2f, Vec2f> _field5;
    float _field6;
    float _field7;
    struct Vec2f _field8;
    float *_field9;
    struct vector<float, std::__1::allocator<float>> _field10;
    struct OMUtilErf _field11;
    struct OMUtilErf _field12;
    struct Mat4f _field13;
    vector_ff5abfb7 _field14;
    int _field15;
    id _field16;
    id _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
};

struct PAEKeyerPie {
    CDUnknownFunctionPointerType *_field1;
    struct ArcCompute _field2;
    struct ArcCompute _field3;
    int _field4;
    struct vector<Vec2f, std::__1::allocator<Vec2f>> _field5;
};

struct PCArray<LiLight, PCArray_Traits<LiLight>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct LiLight *_field4;
};

struct PCArray<PCVector4<double>, PCArray_Traits<PCVector4<double>>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct PCVector4<double> *_field4;
};

struct PCArray<int, PCArray_Traits<int>> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int *_field4;
};

struct PCBitmap;

struct PCColor {
    struct ColorComponents _field1;
    struct PCColorSpaceHandle _field2;
};

struct PCColorSpaceHandle {
    struct CGColorSpace *_cgColorSpace;
};

struct PCHash128 {
    unsigned int _field1[4];
};

struct PCImage;

struct PCImageAttributes {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    int _field6;
    struct PCColorSpaceHandle _field7;
    unsigned int _field8;
    int _field9;
    _Bool _field10;
    void *_field11;
    unsigned long long _field12;
    void *_field13;
};

struct PCMatrix44Tmpl<double> {
    double _field1[4][4];
};

struct PCMatrix44Tmpl<float> {
    float _field1[4][4];
};

struct PCMutex {
    CDUnknownFunctionPointerType *_vptr$PCMutex;
    struct _opaque_pthread_mutex_t _Mutex;
};

struct PCPlane<double> {
    struct PCVector3<double> _field1;
    struct PCVector3<double> _field2;
};

struct PCPtr<LiCamera> {
    struct LiCamera *_field1;
    struct PCSharedCount _field2;
};

struct PCPtr<LiImageSource> {
    struct LiImageSource *_field1;
    struct PCSharedCount _field2;
};

struct PCPtr<OZRenderParams::SharedInfo> {
    struct SharedInfo *_field1;
    struct PCSharedCount _field2;
};

struct PCRect<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct PCRect<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct PCRect<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct PCRecursiveMutex {
    CDUnknownFunctionPointerType *_vptr$PCMutex;
    struct _opaque_pthread_mutex_t _Mutex;
};

struct PCSafeHandle;

struct PCSharedCount {
    struct PC_Sp_counted_base *_field1;
};

struct PCSpinLock {
    struct os_unfair_lock_s _lock;
};

struct PCString {
    struct __CFString *_field1;
};

struct PCTimeRange {
    struct FigTime _field1;
    struct FigTime _field2;
};

struct PCVector2<double> {
    double _field1;
    double _field2;
};

struct PCVector2<float> {
    float _field1;
    float _field2;
};

struct PCVector3<double> {
    double _field1;
    double _field2;
    double _field3;
};

struct PCVector4<double>;

struct PC_Sp_counted_base;

struct PGContext {
    struct weak_ptr<PGContext> _field1;
    struct ContextHandle _field2;
};

struct PVGCDLock;

struct PVIGHGNodeCacheKey {
    unsigned long long _field1;
    CDStruct_1b6d18a9 _field2;
    id _field3;
};

struct PVImageProperties {
    unsigned int cvPixelFormat;
    int bitsPerPixel;
    unsigned int alphaInfo;
    struct CGColorSpace *cgColorSpaceRef;
};

struct PVInputHGNodeMap<PVInstructionGraphSourceNode *> {
    struct map<PVInstructionGraphSourceNode *, HGRef<HGNode>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGNode>>>> _field1;
    struct map<PVInstructionGraphSourceNode *, PCRect<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCRect<double>>>> _field2;
    struct map<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCMatrix44Tmpl<double>>>> _field3;
    struct map<PVInstructionGraphSourceNode *, int, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, int>>> _field4;
};

struct PVInputHGNodeMap<unsigned int> {
    map_184f33b3 _field1;
    struct map<unsigned int, PCRect<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCRect<double>>>> _field2;
    struct map<unsigned int, PCMatrix44Tmpl<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCMatrix44Tmpl<double>>>> _field3;
    struct map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> _field4;
};

struct PVInstructionGraphContext;

struct PVLoadedEffectItem;

struct PVPerfStats {
    double _field1;
    int _field2;
    struct OnceStats _field3;
    struct vector<PVPerfStats::FrameStats, std::__1::allocator<PVPerfStats::FrameStats>> _field4;
    _Bool _field5;
    struct FrameStats _field6;
    struct FrameStats _field7;
    struct FrameStats _field8;
    struct FrameStats _field9;
    struct FrameStats _field10;
    struct FrameStats _field11;
    double _field12;
    struct PlaybackRateCalculator _field13;
    id _field14;
    struct FrameStatsDescription *_field15;
};

struct PVRenderJob;

struct PVRenderLinkJob;

struct PVRenderManager;

struct PVTransformAnimationInfo {
    CDStruct_1b6d18a9 time;
    struct CGPoint translation;
    double scale;
    double rotation;
};

struct PVTransformInfo {
    CDStruct_183601bc _field1;
};

struct PerfTimer {
    double _start;
    double _end;
};

struct PlaybackRateCalculator {
    struct vector<PVPerfStats::FrameStats, std::__1::allocator<PVPerfStats::FrameStats>> *_field1;
    long long _field2;
    long long _field3;
    _Bool _field4;
    unsigned int _field5;
};

struct PosEdge;

struct PosFacet {
    struct vector<LiPolygon::PosEdge, std::__1::allocator<LiPolygon::PosEdge>> *_field1;
};

struct RGBA8Pixel;

struct RGBAfPixel {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SharedInfo;

struct TDColor3 {
    float one;
    float two;
    float three;
};

struct TransformSet {
    unsigned long long _field1;
};

struct Vec2f {
    float _field1[2];
};

struct Vec3f {
    float _field1[3];
};

struct Vec4f {
    float _field1[4];
};

struct _CGLContextObject;

struct __CFString;

struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> {
    struct point_t<double, false, false> *_field1;
};

struct __list_iterator<OZSceneNode *, void *> {
    struct __list_node_base<OZSceneNode *, void *> *_field1;
};

struct __list_node_base<OZBehavior *, void *> {
    struct __list_node_base<OZBehavior *, void *> *_field1;
    struct __list_node_base<OZBehavior *, void *> *_field2;
};

struct __list_node_base<OZEffect *, void *> {
    struct __list_node_base<OZEffect *, void *> *_field1;
    struct __list_node_base<OZEffect *, void *> *_field2;
};

struct __list_node_base<OZObjectSelections *, void *> {
    struct __list_node_base<OZObjectSelections *, void *> *_field1;
    struct __list_node_base<OZObjectSelections *, void *> *_field2;
};

struct __list_node_base<OZSceneNode *, void *> {
    struct __list_node_base<OZSceneNode *, void *> *_field1;
    struct __list_node_base<OZSceneNode *, void *> *_field2;
};

struct __list_node_base<OZSimulationBehavior *, void *> {
    struct __list_node_base<OZSimulationBehavior *, void *> *_field1;
    struct __list_node_base<OZSimulationBehavior *, void *> *_field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bezier_t<double, false> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
};

struct bezier_t<double, true> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
};

struct color_t<double> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
    double _field6;
    double _field7;
    double _field8;
    struct bezier_t<double, false> _field9;
};

struct deque<OZChannelFolder *, std::__1::allocator<OZChannelFolder *>> {
    struct __split_buffer<OZChannelFolder **, std::__1::allocator<OZChannelFolder **>> {
        struct OZChannelFolder ***_field1;
        struct OZChannelFolder ***_field2;
        struct OZChannelFolder ***_field3;
        struct __compressed_pair<OZChannelFolder ***, std::__1::allocator<OZChannelFolder **>> {
            struct OZChannelFolder ***_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<OZChannelFolder *>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<PVLoadedEffectItem, std::__1::allocator<PVLoadedEffectItem>> {
    struct __split_buffer<PVLoadedEffectItem *, std::__1::allocator<PVLoadedEffectItem *>> {
        struct PVLoadedEffectItem **_field1;
        struct PVLoadedEffectItem **_field2;
        struct PVLoadedEffectItem **_field3;
        struct __compressed_pair<PVLoadedEffectItem **, std::__1::allocator<PVLoadedEffectItem *>> {
            struct PVLoadedEffectItem **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<PVLoadedEffectItem>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<int, std::__1::allocator<int>> {
    struct __split_buffer<int *, std::__1::allocator<int *>> {
        int **__first_;
        int **__begin_;
        int **__end_;
        struct __compressed_pair<int **, std::__1::allocator<int *>> {
            int **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<int>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<unsigned long, std::__1::allocator<unsigned long>> {
    struct __split_buffer<unsigned long *, std::__1::allocator<unsigned long *>> {
        unsigned long long **__first_;
        unsigned long long **__begin_;
        unsigned long long **__end_;
        struct __compressed_pair<unsigned long **, std::__1::allocator<unsigned long *>> {
            unsigned long long **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __value_;
    } __size_;
};

struct hue_t<double> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
    double _field6;
    struct bezier_t<double, true> _field7;
};

struct imageProcessingParams {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
};

struct list<OZBehavior *, std::__1::allocator<OZBehavior *>> {
    struct __list_node_base<OZBehavior *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<OZBehavior *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<OZEffect *, std::__1::allocator<OZEffect *>> {
    struct __list_node_base<OZEffect *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<OZEffect *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<OZObjectSelections *, std::__1::allocator<OZObjectSelections *>> {
    struct __list_node_base<OZObjectSelections *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<OZObjectSelections *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<OZSceneNode *, std::__1::allocator<OZSceneNode *>> {
    struct __list_node_base<OZSceneNode *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<OZSceneNode *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<OZSimulationBehavior *, std::__1::allocator<OZSimulationBehavior *>> {
    struct __list_node_base<OZSimulationBehavior *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<OZSimulationBehavior *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<PVInstructionGraphSourceNode *, HGRef<HGNode>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGNode>>>> {
    struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode>>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode>>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, HGRef<HGNode>>, std::__1::less<PVInstructionGraphSourceNode *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCMatrix44Tmpl<double>>>> {
    struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>>, std::__1::less<PVInstructionGraphSourceNode *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<PVInstructionGraphSourceNode *, PCRect<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCRect<double>>>> {
    struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double>>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double>>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, PCRect<double>>, std::__1::less<PVInstructionGraphSourceNode *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<PVInstructionGraphSourceNode *, int, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, int>>> {
    struct __tree<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true>, std::__1::allocator<std::__1::__value_type<PVInstructionGraphSourceNode *, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVInstructionGraphSourceNode *, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVInstructionGraphSourceNode *, std::__1::__value_type<PVInstructionGraphSourceNode *, int>, std::__1::less<PVInstructionGraphSourceNode *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *, std::__1::less<PVSPI_OSThermalPressureLevel>, std::__1::allocator<std::__1::pair<const PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *>>> {
    struct __tree<std::__1::__value_type<PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *>, std::__1::__map_value_compare<PVSPI_OSThermalPressureLevel, std::__1::__value_type<PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *>, std::__1::less<PVSPI_OSThermalPressureLevel>, true>, std::__1::allocator<std::__1::__value_type<PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<PVSPI_OSThermalPressureLevel, std::__1::__value_type<PVSPI_OSThermalPressureLevel, PVLivePlayerThrottlingControlParameters *>, std::__1::less<PVSPI_OSThermalPressureLevel>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>, std::__1::less<_opaque_pthread_t *>, std::__1::allocator<std::__1::pair<_opaque_pthread_t *const, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>>> {
    struct __tree<std::__1::__value_type<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>, std::__1::__map_value_compare<_opaque_pthread_t *, std::__1::__value_type<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>, std::__1::less<_opaque_pthread_t *>, true>, std::__1::allocator<std::__1::__value_type<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<_opaque_pthread_t *, std::__1::__value_type<_opaque_pthread_t *, std::__1::stack<OZFxPlugRenderContext *, std::__1::deque<OZFxPlugRenderContext *, std::__1::allocator<OZFxPlugRenderContext *>>>>, std::__1::less<_opaque_pthread_t *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, __CVBuffer *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, __CVBuffer *>>> {
    struct __tree<std::__1::__value_type<int, __CVBuffer *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, __CVBuffer *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, __CVBuffer *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, __CVBuffer *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, __CVBuffer *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, HGRef<HGNode>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, HGRef<HGNode>>>> {
    struct __tree<std::__1::__value_type<unsigned int, HGRef<HGNode>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, HGRef<HGNode>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, HGRef<HGNode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, OZChannelBase *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, OZChannelBase *>>> {
    struct __tree<std::__1::__value_type<unsigned int, OZChannelBase *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, OZChannelBase *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, OZChannelBase *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, OZChannelBase *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, OZChannelBase *>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, PCMatrix44Tmpl<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCMatrix44Tmpl<double>>>> {
    struct __tree<std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCMatrix44Tmpl<double>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, PCRect<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCRect<double>>>> {
    struct __tree<std::__1::__value_type<unsigned int, PCRect<double>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCRect<double>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PCRect<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PCRect<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PCRect<double>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, PVInstructionGraphNode *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PVInstructionGraphNode *>>> {
    struct __tree<std::__1::__value_type<unsigned int, PVInstructionGraphNode *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PVInstructionGraphNode *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PVInstructionGraphNode *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PVInstructionGraphNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PVInstructionGraphNode *>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, ParameterTransactionHelpers, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, ParameterTransactionHelpers>>> {
    struct __tree<std::__1::__value_type<unsigned int, ParameterTransactionHelpers>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, ParameterTransactionHelpers>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, ParameterTransactionHelpers>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, ParameterTransactionHelpers>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, ParameterTransactionHelpers>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, id<PVLivePlayerSource>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, id<PVLivePlayerSource>>>> {
    struct __tree<std::__1::__value_type<unsigned int, id<PVLivePlayerSource>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, id<PVLivePlayerSource>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, id<PVLivePlayerSource>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, id<PVLivePlayerSource>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, id<PVLivePlayerSource>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> {
    struct __tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, unsigned int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, unsigned long long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long long>>> {
    struct __tree<std::__1::__value_type<unsigned int, unsigned long long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long long>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct offsetcolor_t<double> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct bezier_t<double, false> _field10;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<Vec2f, Vec2f> {
    struct Vec2f _field1;
    struct Vec2f _field2;
};

struct point_t<double, false, false>;

struct set<HGRef<LoadableInstruction>, LoadableInstructionCompare, std::__1::allocator<HGRef<LoadableInstruction>>> {
    struct __tree<HGRef<LoadableInstruction>, LoadableInstructionCompare, std::__1::allocator<HGRef<LoadableInstruction>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<HGRef<LoadableInstruction>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, LoadableInstructionCompare> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<OZElement *, std::__1::less<OZElement *>, std::__1::allocator<OZElement *>>;

struct shared_ptr<PCBitmap> {
    struct PCBitmap *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PCImage> {
    struct PCImage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ProGL::Private::ContextImpl> {
    struct ContextImpl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const HGComputeDevice> {
    struct HGComputeDevice *_field1;
    struct __shared_weak_count *_field2;
};

struct stack<OZChannelFolder *, std::__1::deque<OZChannelFolder *, std::__1::allocator<OZChannelFolder *>>> {
    struct deque<OZChannelFolder *, std::__1::allocator<OZChannelFolder *>> _field1;
};

struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> {
    struct deque<unsigned long, std::__1::allocator<unsigned long>> c;
};

struct unique_ptr<PVGCDLock, std::__1::default_delete<PVGCDLock>> {
    struct __compressed_pair<PVGCDLock *, std::__1::default_delete<PVGCDLock>> {
        struct PVGCDLock *__value_;
    } __ptr_;
};

struct unique_ptr<PVPerfStats, std::__1::default_delete<PVPerfStats>> {
    struct __compressed_pair<PVPerfStats *, std::__1::default_delete<PVPerfStats>> {
        struct PVPerfStats *__value_;
    } __ptr_;
};

struct unique_ptr<PerfTimer, std::__1::default_delete<PerfTimer>> {
    struct __compressed_pair<PerfTimer *, std::__1::default_delete<PerfTimer>> {
        struct PerfTimer *__value_;
    } __ptr_;
};

struct vector<FracturedUtils::FracturedFXPoolItem *, std::__1::allocator<FracturedUtils::FracturedFXPoolItem *>> {
    struct FracturedFXPoolItem **__begin_;
    struct FracturedFXPoolItem **__end_;
    struct __compressed_pair<FracturedUtils::FracturedFXPoolItem **, std::__1::allocator<FracturedUtils::FracturedFXPoolItem *>> {
        struct FracturedFXPoolItem **__value_;
    } __end_cap_;
};

struct vector<HGRef<HGBitmap>, std::__1::allocator<HGRef<HGBitmap>>> {
    HGRef_0776e7a8 *__begin_;
    HGRef_0776e7a8 *__end_;
    struct __compressed_pair<HGRef<HGBitmap>*, std::__1::allocator<HGRef<HGBitmap>>> {
        HGRef_0776e7a8 *__value_;
    } __end_cap_;
};

struct vector<HGRef<PVCVPixelBufferPool>, std::__1::allocator<HGRef<PVCVPixelBufferPool>>> {
    struct HGRef<PVCVPixelBufferPool> *__begin_;
    struct HGRef<PVCVPixelBufferPool> *__end_;
    struct __compressed_pair<HGRef<PVCVPixelBufferPool>*, std::__1::allocator<HGRef<PVCVPixelBufferPool>>> {
        struct HGRef<PVCVPixelBufferPool> *__value_;
    } __end_cap_;
};

struct vector<HGRef<PVRenderJob>, std::__1::allocator<HGRef<PVRenderJob>>> {
    HGRef_e03d2d21 *__begin_;
    HGRef_e03d2d21 *__end_;
    struct __compressed_pair<HGRef<PVRenderJob>*, std::__1::allocator<HGRef<PVRenderJob>>> {
        HGRef_e03d2d21 *__value_;
    } __end_cap_;
};

struct vector<LiPolygon::PosEdge, std::__1::allocator<LiPolygon::PosEdge>> {
    struct PosEdge *_field1;
    struct PosEdge *_field2;
    struct __compressed_pair<LiPolygon::PosEdge *, std::__1::allocator<LiPolygon::PosEdge>> {
        struct PosEdge *_field1;
    } _field3;
};

struct vector<OMEdge, std::__1::allocator<OMEdge>> {
    struct OMEdge *_field1;
    struct OMEdge *_field2;
    struct __compressed_pair<OMEdge *, std::__1::allocator<OMEdge>> {
        struct OMEdge *_field1;
    } _field3;
};

struct vector<OMSamplesElem *, std::__1::allocator<OMSamplesElem *>>;

struct vector<OMVertex, std::__1::allocator<OMVertex>> {
    struct OMVertex *_field1;
    struct OMVertex *_field2;
    struct __compressed_pair<OMVertex *, std::__1::allocator<OMVertex>> {
        struct OMVertex *_field1;
    } _field3;
};

struct vector<OZChannelBase *, std::__1::allocator<OZChannelBase *>>;

struct vector<OZChannelBlindData *, std::__1::allocator<OZChannelBlindData *>> {
    struct OZChannelBlindData **__begin_;
    struct OZChannelBlindData **__end_;
    struct __compressed_pair<OZChannelBlindData **, std::__1::allocator<OZChannelBlindData *>> {
        struct OZChannelBlindData **__value_;
    } __end_cap_;
};

struct vector<OZChannelRef, std::__1::allocator<OZChannelRef>> {
    struct OZChannelRef *_field1;
    struct OZChannelRef *_field2;
    struct __compressed_pair<OZChannelRef *, std::__1::allocator<OZChannelRef>> {
        struct OZChannelRef *_field1;
    } _field3;
};

struct vector<PCVector3<double>, std::__1::allocator<PCVector3<double>>> {
    struct PCVector3<double> *_field1;
    struct PCVector3<double> *_field2;
    struct __compressed_pair<PCVector3<double>*, std::__1::allocator<PCVector3<double>>> {
        struct PCVector3<double> *_field1;
    } _field3;
};

struct vector<PVPerfStats::FrameStats, std::__1::allocator<PVPerfStats::FrameStats>> {
    struct FrameStats *_field1;
    struct FrameStats *_field2;
    struct __compressed_pair<PVPerfStats::FrameStats *, std::__1::allocator<PVPerfStats::FrameStats>> {
        struct FrameStats *_field1;
    } _field3;
};

struct vector<RGBA8Pixel, std::__1::allocator<RGBA8Pixel>> {
    struct RGBA8Pixel *_field1;
    struct RGBA8Pixel *_field2;
    struct __compressed_pair<RGBA8Pixel *, std::__1::allocator<RGBA8Pixel>> {
        struct RGBA8Pixel *_field1;
    } _field3;
};

struct vector<Vec2f, std::__1::allocator<Vec2f>> {
    struct Vec2f *_field1;
    struct Vec2f *_field2;
    struct __compressed_pair<Vec2f *, std::__1::allocator<Vec2f>> {
        struct Vec2f *_field1;
    } _field3;
};

struct vector<Vec3f, std::__1::allocator<Vec3f>> {
    struct Vec3f *_field1;
    struct Vec3f *_field2;
    struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f>> {
        struct Vec3f *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<std::__1::vector<Vec3f, std::__1::allocator<Vec3f>>, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f>>>> {
    vector_ff5abfb7 *_field1;
    vector_ff5abfb7 *_field2;
    struct __compressed_pair<std::__1::vector<Vec3f, std::__1::allocator<Vec3f>>*, std::__1::allocator<std::__1::vector<Vec3f, std::__1::allocator<Vec3f>>>> {
        vector_ff5abfb7 *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct weak_ptr<PGContext> {
    struct PGContext *_field1;
    struct __shared_weak_count *_field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
} CDStruct_183fa7cb;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char _field8;
    double _field9;
} CDStruct_4a07eeda;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
} CDStruct_a6477b43;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
} CDStruct_d2aef016;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    CDUnion_baaf6063 _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    double _field4;
    double _field5;
    unsigned long long _field6;
} CDStruct_f5b31fc1;

typedef struct {
    CDUnion_baaf6063 _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    double _field4;
    double _field5;
    struct _CGLContextObject *_field6;
    unsigned long long _field7;
} CDStruct_b8eb0ecc;

// Template types
typedef struct HGRef<HGBitmap> {
    struct HGBitmap *m_Obj;
} HGRef_0776e7a8;

typedef struct HGRef<HGCVPixelBuffer> {
    struct HGCVPixelBuffer *m_Obj;
} HGRef_55a77cc8;

typedef struct HGRef<HGGLBlend> {
    struct HGGLBlend *_field1;
} HGRef_baa0c882;

typedef struct HGRef<HGGLContext> {
    struct HGGLContext *_field1;
} HGRef_2925969f;

typedef struct HGRef<HGGLTexture> {
    struct HGGLTexture *m_Obj;
} HGRef_34ac394f;

typedef struct HGRef<HGNode> {
    struct HGNode *m_Obj;
} HGRef_265f9e4c;

typedef struct HGRef<HGRenderer> {
    struct HGRenderer *_field1;
} HGRef_5aef67ae;

typedef struct HGRef<HGXForm> {
    struct HGXForm *_field1;
} HGRef_b27030d6;

typedef struct HGRef<PVInstructionGraphContext> {
    struct PVInstructionGraphContext *m_Obj;
} HGRef_6bae45d3;

typedef struct HGRef<PVRenderJob> {
    struct PVRenderJob *_field1;
} HGRef_e03d2d21;

typedef struct HGRef<PVRenderLinkJob> {
    struct PVRenderLinkJob *_field1;
} HGRef_b5f7fda3;

typedef struct HGRef<PVRenderManager> {
    struct PVRenderManager *m_Obj;
} HGRef_9706a068;

typedef struct PCMatrix44Tmpl<double> {
    double _field1[4][4];
} PCMatrix44Tmpl_93ed1289;

typedef struct PCMatrix44Tmpl<float> {
    float _field1[4][4];
} PCMatrix44Tmpl_9c426645;

typedef struct PCPtr<LiImageSource> {
    struct LiImageSource *_field1;
    struct PCSharedCount _field2;
} PCPtr_133a54e9;

typedef struct PCRect<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} PCRect_3a266109;

typedef struct PCRect<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} PCRect_7f811c82;

typedef struct PCRect<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} PCRect_54d5786f;

typedef struct PCVector2<double> {
    double _field1;
    double _field2;
} PCVector2_5d498db0;

typedef struct PCVector2<float> {
    float _field1;
    float _field2;
} PCVector2_79a470e1;

typedef struct PVInputHGNodeMap<PVInstructionGraphSourceNode *> {
    struct map<PVInstructionGraphSourceNode *, HGRef<HGNode>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, HGRef<HGNode>>>> _field1;
    struct map<PVInstructionGraphSourceNode *, PCRect<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCRect<double>>>> _field2;
    struct map<PVInstructionGraphSourceNode *, PCMatrix44Tmpl<double>, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, PCMatrix44Tmpl<double>>>> _field3;
    struct map<PVInstructionGraphSourceNode *, int, std::__1::less<PVInstructionGraphSourceNode *>, std::__1::allocator<std::__1::pair<PVInstructionGraphSourceNode *const, int>>> _field4;
} PVInputHGNodeMap_cba5f928;

typedef struct PVInputHGNodeMap<unsigned int> {
    map_184f33b3 _field1;
    struct map<unsigned int, PCRect<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCRect<double>>>> _field2;
    struct map<unsigned int, PCMatrix44Tmpl<double>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PCMatrix44Tmpl<double>>>> _field3;
    struct map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> _field4;
} PVInputHGNodeMap_d4d649d7;

typedef struct color_t<double> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
    double _field6;
    double _field7;
    double _field8;
    struct bezier_t<double, false> _field9;
} color_t_8a798535;

typedef struct hue_t<double> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
    double _field6;
    struct bezier_t<double, true> _field7;
} hue_t_6ddfb2b5;

typedef struct map<int, __CVBuffer *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, __CVBuffer *>>> {
    struct __tree<std::__1::__value_type<int, __CVBuffer *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, __CVBuffer *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, __CVBuffer *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, __CVBuffer *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, __CVBuffer *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_ba6fd08a;

typedef struct map<unsigned int, HGRef<HGNode>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, HGRef<HGNode>>>> {
    struct __tree<std::__1::__value_type<unsigned int, HGRef<HGNode>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, HGRef<HGNode>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, HGRef<HGNode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, HGRef<HGNode>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_184f33b3;

typedef struct map<unsigned int, OZChannelBase *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, OZChannelBase *>>> {
    struct __tree<std::__1::__value_type<unsigned int, OZChannelBase *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, OZChannelBase *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, OZChannelBase *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, OZChannelBase *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, OZChannelBase *>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_2b94c774;

typedef struct offsetcolor_t<double> {
    CDUnknownFunctionPointerType *_field1;
    struct point_t<double, false, false> *_field2;
    struct point_t<double, false, false> *_field3;
    struct __compressed_pair<cc::point_t<double, false, false>*, std::__1::allocator<cc::point_t<double, false, false>>> _field4;
    CDUnknownFunctionPointerType *_field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct bezier_t<double, false> _field10;
} offsetcolor_t_d4b9b3c6;

typedef struct shared_ptr<PCBitmap> {
    struct PCBitmap *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1a5c5a10;

typedef struct vector<HGRef<HGBitmap>, std::__1::allocator<HGRef<HGBitmap>>> {
    HGRef_0776e7a8 *__begin_;
    HGRef_0776e7a8 *__end_;
    struct __compressed_pair<HGRef<HGBitmap>*, std::__1::allocator<HGRef<HGBitmap>>> {
        HGRef_0776e7a8 *__value_;
    } __end_cap_;
} vector_bfafc335;

typedef struct vector<OZChannelBlindData *, std::__1::allocator<OZChannelBlindData *>> {
    struct OZChannelBlindData **__begin_;
    struct OZChannelBlindData **__end_;
    struct __compressed_pair<OZChannelBlindData **, std::__1::allocator<OZChannelBlindData *>> {
        struct OZChannelBlindData **__value_;
    } __end_cap_;
} vector_61caf964;

typedef struct vector<RGBA8Pixel, std::__1::allocator<RGBA8Pixel>> {
    struct RGBA8Pixel *_field1;
    struct RGBA8Pixel *_field2;
    struct __compressed_pair<RGBA8Pixel *, std::__1::allocator<RGBA8Pixel>> {
        struct RGBA8Pixel *_field1;
    } _field3;
} vector_513fe8f7;

typedef struct vector<Vec3f, std::__1::allocator<Vec3f>> {
    struct Vec3f *_field1;
    struct Vec3f *_field2;
    struct __compressed_pair<Vec3f *, std::__1::allocator<Vec3f>> {
        struct Vec3f *_field1;
    } _field3;
} vector_ff5abfb7;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
} vector_f672cb0f;

#pragma mark Typedef'd Unions

typedef union {
    double frame;
    CDStruct_183601bc *seconds;
} CDUnion_baaf6063;

