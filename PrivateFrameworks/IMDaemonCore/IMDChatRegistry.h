//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TUConversationManagerDelegate.h"

@class IMDCKUtilities, IMDChatStore, IMDMessageHistorySyncController, IMDMessageProcessingController, NSArray, NSData, NSMutableDictionary, NSRecursiveLock, NSString, TUConversationManager;

@interface IMDChatRegistry : NSObject <TUConversationManagerDelegate>
{
    NSRecursiveLock *_chatsLock;
    NSRecursiveLock *_handlesLock;
    NSMutableDictionary *_chats;
    BOOL _isLoading;
    BOOL _doneLoadingAfterMerge;
    BOOL _blackholedChatsExistCache;
    NSMutableDictionary *_chatsByGroupID;
    BOOL _hasDumpedLogsForNoExisitingGroup;
    NSMutableDictionary *_idToHandlesMap;
    NSData *_historyToken;
    IMDCKUtilities *_ckUtilities;
    IMDChatStore *_chatStore;
    IMDMessageProcessingController *_messageProcessingController;
    IMDMessageHistorySyncController *_messageHistorySyncController;
    NSMutableDictionary *_personCentricGroupedChatsCache;
    NSMutableDictionary *_cachedAliasToCNIDMap;
    TUConversationManager *_conversationManager;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) TUConversationManager *conversationManager; // @synthesize conversationManager=_conversationManager;
@property(retain, nonatomic) NSMutableDictionary *cachedAliasToCNIDMap; // @synthesize cachedAliasToCNIDMap=_cachedAliasToCNIDMap;
@property(retain, nonatomic) NSMutableDictionary *personCentricGroupedChatsCache; // @synthesize personCentricGroupedChatsCache=_personCentricGroupedChatsCache;
@property(readonly, nonatomic) IMDMessageHistorySyncController *messageHistorySyncController; // @synthesize messageHistorySyncController=_messageHistorySyncController;
@property(readonly, nonatomic) IMDMessageProcessingController *messageProcessingController; // @synthesize messageProcessingController=_messageProcessingController;
@property(nonatomic) BOOL hasDumpedLogsForNoExisitingGroup; // @synthesize hasDumpedLogsForNoExisitingGroup=_hasDumpedLogsForNoExisitingGroup;
@property(retain, nonatomic) IMDChatStore *chatStore; // @synthesize chatStore=_chatStore;
@property(retain, nonatomic) IMDCKUtilities *ckUtilities; // @synthesize ckUtilities=_ckUtilities;
@property(readonly, nonatomic) NSData *historyToken; // @synthesize historyToken=_historyToken;
@property(retain, nonatomic) NSMutableDictionary *idToHandlesMap; // @synthesize idToHandlesMap=_idToHandlesMap;
- (void)updateMeCardHasUpdatedForAllChats;
- (void)_chatGUIDsThatNeedRemerging:(id *)arg1 chatDictionaryArray:(id *)arg2 aliasMap:(id)arg3;
- (void)_chatGUIDsThatNeedRemergingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_checkForContactChanges;
- (void)_contactsChanged:(id)arg1;
- (id)_chatsContainingHandles:(id)arg1;
- (id)existingUnnamedGroupChatsContainingHandles:(id)arg1;
- (id)existingOneOnOneChatsWithIdentifiers:(id)arg1;
- (id)_handlesWithChangedContactsOriginalMap:(id)arg1 newMap:(id)arg2;
- (id)_extractHandlesFromMap:(id)arg1 usingCNID:(id)arg2;
- (void)_updateCachedCNIDMapForHandles:(id)arg1;
- (void)_populateContactIDOnHandles;
- (id)_generateCurrentAliasToCNIDDictionary;
- (void)_updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)aliasToCNIDMap;
- (void)setHistoryToken:(id)arg1;
- (id)_aliasToCNIDMapForAliases:(id)arg1;
- (void)_updateCachedAliasToCNIDMap:(id)arg1 withHistoryToken:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)_contactsBasedMerginEnabled;
- (void)invalidatePersonCentricGroupedChatsCache;
- (void)simulateMessageReceive:(id)arg1 serviceName:(id)arg2 groupID:(id)arg3 handles:(id)arg4 sender:(id)arg5;
- (id)_existingiMessageChatForChatIdentifier:(id)arg1 style:(unsigned char)arg2;
- (BOOL)isBeingSetup;
- (BOOL)doneLoadingAfterMerge;
- (void)clearPendingDeleteTable;
- (id)copyRecordIDsAndGUIDsPendingCloudKitDelete;
- (void)processMessageUsingCKRecord:(id)arg1 updatedLastMessageCount:(int)arg2;
- (void)processMessageUsingCKRecord:(id)arg1;
- (void)_setSortIDOnIncomingMessage:(id)arg1 forChat:(id)arg2;
- (void)_addItemToParentChatIfNotLocationItem:(id)arg1 parentChat:(id)arg2 updatedLastMessageCount:(unsigned long long)arg3;
- (id)_parentChatIDFromCKRecord:(id)arg1;
- (id)_itemFromCKRecord:(id)arg1;
- (id)_lookupChatUsingID:(id)arg1;
- (id)messagesToUploadToCloudKitWithLimit:(unsigned long long)arg1;
- (void)__removeChatFromGroupIDChatIndex:(id)arg1;
- (void)__addChatToGroupIDChatIndex:(id)arg1;
- (void)_updateSyncStatisticsForMessage:(id)arg1 incrementTotalCount:(unsigned long long)arg2;
- (void)_updateSyncStatisticsForChat:(id)arg1 incrementTotalCount:(unsigned long long)arg2;
- (BOOL)_shouldUpdateSyncStatsForMessage:(id)arg1 originalSyncState:(long long)arg2;
- (BOOL)_shouldUpdateSyncStatsForChat:(id)arg1 originalSyncState:(long long)arg2;
- (id)_statsCollector;
- (void)_updateHandleInDBWithPCMID:(id)arg1 handle:(id)arg2;
- (void)_updatePCMIDForHandle:(id)arg1;
- (id)_personCentricIDForHandleID:(id)arg1;
- (void)_updatePCMIDOnHandles:(id)arg1;
- (id)_handlesThatNeedPCMIDUpdatedGivenArray:(id)arg1;
- (id)_handlesThatNeedPCMIDsUpdatedGivenMap:(id)arg1;
- (void)_addHandlesToPCMIDMapForChatParticipants:(id)arg1 pcmidToHandleMap:(id)arg2;
- (id)_pcmidToHandlesMapForChats:(id)arg1;
- (void)_noteDownAttemptToMigratePersonCentricIDsOnIMDHandles;
- (BOOL)_shouldMigrateIMDHandlesPersonCentricIDsOnAllChats;
- (void)repairPersonCentricIDsOnChatsIfNeeded;
- (void)resetChatSyncStateForRecord:(id)arg1;
- (void)markDefferredChatsAsNeedingSync;
- (void)markChatAsDeferredForSyncingUsingCKRecord:(id)arg1;
- (void)updateChatUsingCKRecord:(id)arg1;
- (void)_markForksAsSyncedForChat:(id)arg1;
- (BOOL)_isUsingStingRay;
- (BOOL)_ensureNoExistingGroupForCKRecord:(id)arg1;
- (id)_existingChatForCKRecord:(id)arg1;
- (id)_existingChatWithOriginalGroupID:(id)arg1 onService:(id)arg2;
- (void)_insertChatUsingCKRecord:(id)arg1;
- (void)updateChatWithGUID:(id)arg1 serverChangeToken:(id)arg2 recordID:(id)arg3;
- (id)chatsToUploadToCloudKitWithLimit:(unsigned long long)arg1 isUsingStingRay:(BOOL)arg2;
- (id)personCentricGroupedChatsArrayWithMaximumNumberOfChats:(long long)arg1 skipsLastMessageLoading:(BOOL)arg2 usingChats:(id)arg3 useCachedChatGroups:(BOOL)arg4;
- (id)chatIdToLastMessageMapOfOldChats;
- (id)sortPersonCentricChatGroups:(id)arg1;
- (id)truncateSortedChatsGroupedByPersonCentricID:(id)arg1 toMaximumNumberOfChats:(long long)arg2;
- (id)groupChatsBasedOnIdentityUsingCacheIfApplicable:(id)arg1;
- (id)groupChatsBasedOnIdentity:(id)arg1;
- (id)_aliasToHandlesMap:(id)arg1;
- (id)_allHandles;
- (BOOL)repairDuplicateChatsIfNeeded;
- (BOOL)_mergeDuplicateGroupsIfNeeded;
- (struct NSArray *)_createGroupChatsArray;
- (id)_findLosingChatGUIDsInArrayOfChats:(struct NSArray *)arg1 withWinner:(id)arg2;
- (id)_findChatWinnerInDuplicateChatArray:(struct NSArray *)arg1 fixDisplayName:(char *)arg2;
- (struct NSArray *)findDuplicateChats:(struct NSArray *)arg1;
- (BOOL)_chat:(id)arg1 isDuplicateOfChat:(id)arg2;
- (BOOL)_updateDuplicateUnnamedGroupsWithNewGroupIDIfNeeded;
- (struct NSArray *)findDuplicateUnnamedGroups:(struct NSArray *)arg1;
- (void)_makeAllAttachmentsClassC;
- (void)systemDidUnlock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (id)allHandlesForID:(id)arg1;
- (void)removeIMDHandleFromRegistry:(id)arg1;
- (void)addIMDHandleToRegistry:(id)arg1;
- (BOOL)updateProperties:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3;
- (BOOL)saveChats;
- (BOOL)_saveChats;
- (void)_persistMergeIDMergedChatsIfNeeded;
- (BOOL)loadChatsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)refreshUIWhileSyncing;
- (void)_forceReloadChats:(BOOL)arg1;
- (void)_setInitialLoadForTesting:(BOOL)arg1;
- (id)_chatInfoForSaving;
- (id)_chatInfoInRange:(struct _NSRange)arg1 wantsBlackholed:(BOOL)arg2;
- (id)_blackholedChatInfoForNumberOfChats:(long long)arg1;
- (id)_chatInfoForNumberOfChats:(long long)arg1;
- (id)_allChatInfo;
- (id)_chatInfoForConnection;
- (void)_fixUpChatParticipantsIfNeeded:(id)arg1;
- (void)_fixSMSGroupChatAndStoreIfNeeded:(id)arg1 iMessageChat:(id)arg2;
- (id)stringForChatStyle:(unsigned char)arg1;
- (void)removeMessage:(id)arg1 fromChat:(id)arg2;
- (void)addMessage:(id)arg1 toChat:(id)arg2 deferSpotlightIndexing:(BOOL)arg3;
- (void)addMessage:(id)arg1 toChat:(id)arg2;
- (void)removeItem:(id)arg1 fromChat:(id)arg2;
- (void)addItem:(id)arg1 toChat:(id)arg2;
- (void)archiveChat:(id)arg1;
- (void)removeChat:(id)arg1;
- (void)addChat:(id)arg1 firstLoad:(BOOL)arg2;
- (void)addChat:(id)arg1;
- (void)checkBlackholedChatsExistAfterUpdatingChatWithAdd:(BOOL)arg1;
- (void)updateGroupIDForChat:(id)arg1 newGroupID:(id)arg2;
- (void)updateStateForChat:(id)arg1 forcePost:(BOOL)arg2 shouldRebuildFailedMessageDate:(BOOL)arg3 setUnreadCountToZero:(BOOL)arg4;
- (void)updateStateForChat:(id)arg1 forcePost:(BOOL)arg2 shouldRebuildFailedMessageDate:(BOOL)arg3 shouldCalculateUnreadCount:(BOOL)arg4;
- (void)updateStateForChat:(id)arg1 forcePost:(BOOL)arg2 shouldRebuildFailedMessageDate:(BOOL)arg3;
- (void)updateStateForChat:(id)arg1 forcePost:(BOOL)arg2;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2 shouldRebuildFailedMessageDate:(BOOL)arg3 setUnreadCountToZero:(BOOL)arg4;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2 shouldRebuildFailedMessageDate:(BOOL)arg3 shouldCalculateUnreadCount:(BOOL)arg4;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2 shouldRebuildFailedMessageDate:(BOOL)arg3;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2;
- (void)updateStateForChat:(id)arg1 fromMessage:(id)arg2 toMessage:(id)arg3 forcePost:(BOOL)arg4 hintMessage:(id)arg5 shouldRebuildFailedMessageDate:(BOOL)arg6 shouldCalculateUnreadCount:(BOOL)arg7 setUnreadCountToZero:(BOOL)arg8;
- (BOOL)updateUnreadCountForChat:(id)arg1;
- (void)updateLastMessageForChat:(id)arg1 hintMessage:(id)arg2 historyQuery:(BOOL)arg3;
- (void)updateLastMessageForChat:(id)arg1 hintMessage:(id)arg2;
- (id)allExistingChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)allExistingSupportedServiceChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)allChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2 serviceNames:(id)arg3;
- (id)existingChatForRoom:(id)arg1 account:(id)arg2;
- (id)existingChatForIDs:(id)arg1 account:(id)arg2 displayName:(id)arg3 groupID:(id)arg4 style:(unsigned char)arg5;
- (id)existingChatForIDs:(id)arg1 account:(id)arg2 style:(unsigned char)arg3;
- (id)existingChatsForIDs:(id)arg1 onService:(id)arg2 style:(unsigned char)arg3;
- (id)existingChatForID:(id)arg1 account:(id)arg2;
- (id)existingChatWithEngramID:(id)arg1;
- (id)existingChatWithIdentifier:(id)arg1 account:(id)arg2;
- (id)existingChatsWithGroupID:(id)arg1;
- (id)existingChatWithGUID:(id)arg1;
- (id)chatForRoom:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 guid:(id)arg4;
- (id)chatForHandles:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 style:(unsigned char)arg4 groupID:(id)arg5 displayName:(id)arg6 guid:(id)arg7 lastAddressedHandle:(id)arg8 lastAddressedSIMID:(id)arg9 isBlackholed:(BOOL)arg10;
- (id)chatForHandle:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 guid:(id)arg4 lastAddressedHandle:(id)arg5 lastAddressedSIMID:(id)arg6 isBlackholed:(BOOL)arg7;
- (id)_chatsWithBlackholed:(BOOL)arg1;
@property(readonly, nonatomic) BOOL blackholedChatsExist;
@property(readonly, nonatomic) NSArray *blackholedChats;
@property(readonly, nonatomic) NSArray *allChats;
@property(readonly, nonatomic) NSArray *chats;
- (id)_sharedMessageStore;
- (void)dealloc;
- (id)init;
- (id)_messageStore;
- (BOOL)_shouldAddNewItemForConversation:(id)arg1;
- (void)conversationManager:(id)arg1 stateChangedForConversation:(id)arg2;
- (id)_conversationItemForChat:(id)arg1 conversation:(id)arg2;
- (id)_initiatorForConversation:(id)arg1 chat:(id)arg2;
- (id)_chatForTUGroupID:(id)arg1;
- (void)_addTUConversationToMessageStore:(id)arg1 shouldBroadcast:(BOOL)arg2;
- (void)_insertCurrentActiveTUConversationsIfNeeded;
- (id)_activeTUConversations;
- (void)setUpInitialConversationManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

