//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "AVCRemoteVideoClientDelegate.h"
#import "AVConferenceDelegate.h"
#import "CALayerDelegate.h"
#import "IDSSessionDelegate.h"
#import "NSWindowDelegate.h"
#import "NSWindowRestoration.h"
#import "SSAddressResolutionObserver.h"
#import "SSConnectionProgressViewControllerDelegate.h"
#import "SSConnectionPromptObserver.h"
#import "SSCredentialsRequester.h"
#import "SSCurtainMessageViewControllerDelegate.h"
#import "SSFadeViewDelegate.h"
#import "SSFrameBufferViewDelegate.h"
#import "SSSessionDelegate.h"
#import "SSSessionSelectViewControllerDelegate.h"

@class AVCRemoteVideoClient, AVConference, CALayer, IDSSession, NSArray, NSCursor, NSDate, NSDictionary, NSImage, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSNumber, NSObject<OS_dispatch_semaphore>, NSOrderedSet, NSShadow, NSString, NSTimer, NSTrackingArea, NSXPCConnection, NWConnectionManager, NWDatagramConnection, SSBorderView, SSConnectionAddressViewController, SSConnectionAuthenticationViewController, SSConnectionProgressViewController, SSConnectionWindowController, SSCredentials, SSCurtainMessageViewController, SSFadeView, SSFrameBufferView, SSNotificationOverlayViewController, SSPanningScrollView, SSScreenInfo, SSSession, SSSessionSelectViewController;

@interface SSSessionView : NSView <IDSSessionDelegate, SSConnectionProgressViewControllerDelegate, SSSessionSelectViewControllerDelegate, SSCurtainMessageViewControllerDelegate, SSConnectionPromptObserver, AVConferenceDelegate, AVCRemoteVideoClientDelegate, CALayerDelegate, SSSessionDelegate, SSFrameBufferViewDelegate, SSAddressResolutionObserver, SSCredentialsRequester, SSFadeViewDelegate, NSWindowDelegate, NSWindowRestoration>
{
    NSOrderedSet *_preferredURLs;
    long long _callID;
    double _borderSpacing;
    double _borderWidth;
    struct CGColor *_borderColor;
    NSShadow *_borderShadow;
    NSObject<OS_dispatch_semaphore> *_AVConferenceSemaphore;
    NSObject<OS_dispatch_semaphore> *_AVConferenceJ99Semaphore;
    NSObject<OS_dispatch_semaphore> *_stopCallIDSemaphore;
    BOOL _assistModeWithMouseUp;
    BOOL _curtained;
    BOOL _shouldShowCursorForUnknownCursorState;
    BOOL quarantined;
    BOOL _fillsWindow;
    BOOL _shouldSharePasteboard;
    BOOL _shouldAllowSendPasteboard;
    BOOL _allowsFileTransferToRemote;
    BOOL _allowsFileTransferFromRemote;
    BOOL allowsSSHTunnelForLegacyVNC;
    BOOL shouldWarnUserForUnencryptedLegacyVNC;
    BOOL hasEntireScreen;
    BOOL shouldReauthenticate;
    BOOL isOffConsole;
    BOOL showingFullScreenMenuBar;
    BOOL simulatingLiveResize;
    BOOL isUsingVirtualDisplay;
    BOOL clientChangedCurtainMode;
    BOOL userEndedConnection;
    BOOL shouldNotifyOfFailureToEnterCurtainMode;
    BOOL shouldNotifyOfFailureToExitCurtainMode;
    BOOL userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC;
    BOOL animatingResize;
    BOOL switchedDisplay;
    BOOL changingFullScreenMode;
    BOOL mouseButtonIsDown;
    BOOL menuBarIsLocked;
    BOOL loggedAppleIDEndSessionMessage;
    BOOL userClosedSessionWindow;
    BOOL _idsInviteAcceptedWithScreenSharingQRService;
    BOOL _useAVConference;
    BOOL _hasUnknownCursorState;
    _Bool _audioChatStatusFromAgent;
    _Bool _audioMuteStatusFromAgent;
    BOOL _AVConferenceVideoAtttributesSet;
    BOOL _sessionAllowsControl;
    BOOL _requestedControl;
    BOOL _canToggleCurtainMode;
    BOOL _shouldNotifyOfVirtualDisplayStateChange;
    BOOL _shouldNotifyOfAllowsControlStateChange;
    BOOL _shouldSuppressFirstControlStateOverlay;
    BOOL _deferredRequestUpdates;
    BOOL _shouldSkipAddressWindow;
    BOOL _stoppingSession;
    BOOL _AppleIDInviteWasAcceptedOrDeclined;
    BOOL _audioCanBeEnabled;
    BOOL _sessionPaused;
    int sessionState;
    unsigned int _desiredLayerRotation;
    long long _controlMode;
    NSCursor *_observeCursor;
    NSCursor *_hilightCursor;
    NSCursor *_controlCursor;
    id <SSSessionFileTransferDelegate> _fileTransferDelegate;
    SSSession *session;
    SSFrameBufferView *frameBufferView;
    SSPanningScrollView *scrollView;
    SSFadeView *reconnectOverlay;
    SSConnectionWindowController *connectionWindowController;
    SSSessionSelectViewController *sessionSelectViewController;
    SSConnectionProgressViewController *connectionProgressViewController;
    SSConnectionAddressViewController *connectionAddressViewController;
    SSConnectionAuthenticationViewController *connectionAuthenticationViewController;
    struct OpaqueEventHandlerRef *menuAutoShowEventHandler;
    NSString *currentConsoleUser;
    long long chosenSessionSelectionAction;
    NSString *requestConsoleCommand;
    SSCredentials *cachedCredentials;
    NSMutableOrderedSet *availableKerberosIdentities;
    NSDate *resolveStartTime;
    NSString *bonjourDisplayName;
    NSArray *resolvedAddresses;
    NSString *userEnteredAddressString;
    NSString *cachedURL;
    NSMutableArray *attemptedAuthTypes;
    NSString *kerberosClientPrincipal;
    NSString *lastRetainedKerberosClientPrincipal;
    NSTimer *connectionProgressTimer;
    NSTimer *connectionProgressTimeoutTimer;
    NSTrackingArea *menuBarTrackingArea;
    NSMutableDictionary *netAuthContext;
    CALayer *AVConferenceVideoLayer;
    IDSSession *_idsSession;
    IDSSession *_idsSessionOSX_QR;
    IDSSession *_idsSessionThatWasAccepted;
    IDSSession *_idsSessionThatWasDeclined;
    id <SSSessionViewDelegate> _delegate;
    NSArray *_screens;
    NSImage *_userPicture;
    double _lastResignTime;
    id _connectionToInvitationAgent;
    NSString *_connectionIDFromInvitationAgent;
    AVConference *_avConference;
    AVCRemoteVideoClient *_remoteVideoClient;
    SSScreenInfo *__selectedScreen;
    SSBorderView *__borderView;
    SSCurtainMessageViewController *_curtainMessageViewController;
    SSNotificationOverlayViewController *_overlayNotificationViewController;
    NSXPCConnection *_xpcConnection;
    NSString *_curtainMessage;
    NSMutableOrderedSet *_attemptedURLs;
    NSOrderedSet *_preferredCredentials;
    NSMutableOrderedSet *_attemptedCredentials;
    NSArray *_unresolvedAddresses;
    NSTimer *_menuBarUnlockTimer;
    NSMutableArray *_cursorTrackingAreas;
    unsigned long long _menuBarLockCounter;
    NWDatagramConnection *_datagramConnection;
    NWConnectionManager *_datagramConnectionManager;
    NSDictionary *_AVConferenceAcceptDictionary;
    NSNumber *_osVersion;
    NSString *_osType;
    double _occlusionScaleFactor;
    struct CGRect _screenFrame;
    struct CGRect _deferredRequestFrameRect;
    struct CGRect _occlusionFrame;
    struct SSOrientationDetails savedScreenOrientation;
}

+ (BOOL)screenSharingEnabledLocally;
+ (id)colorizeImage:(id)arg1 withColor:(id)arg2;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)keyPathsForValuesAffectingSelectedScreen;
+ (id)keyPathsForValuesAffectingFileTransferDelegate;
+ (id)keyPathsForValuesAffectingAllowsFileTransferFromRemote;
+ (id)keyPathsForValuesAffectingAllowsFileTransferToRemote;
+ (id)keyPathsForValuesAffectingFillsWindow;
+ (id)keyPathsForValuesAffectingCurtained;
+ (id)keyPathsForValuesAffectingShouldSharePasteboard;
+ (id)keyPathsForValuesAffectingIsControlling;
+ (id)keyPathsForValuesAffectingControlMode;
+ (id)keyPathsForValuesAffectingIsNotConnected;
+ (id)keyPathsForValuesAffectingIsDisconnected;
+ (id)keyPathsForValuesAffectingIsReconnecting;
+ (id)keyPathsForValuesAffectingIsConnecting;
+ (id)keyPathsForValuesAffectingIsConnected;
+ (id)keyPathsForValuesAffectingSupportsFileTransfer;
+ (id)keyPathsForValuesAffectingSupportsControlModeRequest;
+ (id)keyPathsForValuesAffectingRequestControl;
+ (id)keyPathsForValuesAffectingSupportsControlMode;
+ (id)keyPathsForValuesAffectingSupportsChangingScreenQualityMode;
+ (id)keyPathsForValuesAffectingSupportsScalingScreen;
+ (id)keyPathsForValuesAffectingSupportsCurtainMode;
+ (id)keyPathsForValuesAffectingSupportsSharedPasteboard;
+ (id)keyPathsForValuesAffectingSupportsCopyPaste;
+ (id)keyPathsForValuesAffectingIsLegacyVNC;
+ (id)keyPathsForValuesAffectingShouldScaleScreen;
+ (BOOL)isRedwoodApp;
+ (id)connectionOptionsWithOptions:(id)arg1 urlOptions:(id)arg2;
@property BOOL sessionPaused; // @synthesize sessionPaused=_sessionPaused;
@property double occlusionScaleFactor; // @synthesize occlusionScaleFactor=_occlusionScaleFactor;
@property struct CGRect occlusionFrame; // @synthesize occlusionFrame=_occlusionFrame;
@property unsigned int desiredLayerRotation; // @synthesize desiredLayerRotation=_desiredLayerRotation;
@property(retain) NSString *osType; // @synthesize osType=_osType;
@property(retain) NSNumber *osVersion; // @synthesize osVersion=_osVersion;
@property BOOL audioCanBeEnabled; // @synthesize audioCanBeEnabled=_audioCanBeEnabled;
@property BOOL AppleIDInviteWasAcceptedOrDeclined; // @synthesize AppleIDInviteWasAcceptedOrDeclined=_AppleIDInviteWasAcceptedOrDeclined;
@property BOOL stoppingSession; // @synthesize stoppingSession=_stoppingSession;
@property(retain) NSDictionary *AVConferenceAcceptDictionary; // @synthesize AVConferenceAcceptDictionary=_AVConferenceAcceptDictionary;
@property(retain) NWConnectionManager *datagramConnectionManager; // @synthesize datagramConnectionManager=_datagramConnectionManager;
@property(retain) NWDatagramConnection *datagramConnection; // @synthesize datagramConnection=_datagramConnection;
@property unsigned long long menuBarLockCounter; // @synthesize menuBarLockCounter=_menuBarLockCounter;
@property(retain) NSMutableArray *cursorTrackingAreas; // @synthesize cursorTrackingAreas=_cursorTrackingAreas;
@property(retain) NSTimer *menuBarUnlockTimer; // @synthesize menuBarUnlockTimer=_menuBarUnlockTimer;
@property(copy) NSArray *unresolvedAddresses; // @synthesize unresolvedAddresses=_unresolvedAddresses;
@property(retain) NSMutableOrderedSet *attemptedCredentials; // @synthesize attemptedCredentials=_attemptedCredentials;
@property(copy) NSOrderedSet *preferredCredentials; // @synthesize preferredCredentials=_preferredCredentials;
@property(retain) NSMutableOrderedSet *attemptedURLs; // @synthesize attemptedURLs=_attemptedURLs;
@property(copy) NSString *curtainMessage; // @synthesize curtainMessage=_curtainMessage;
@property BOOL shouldSkipAddressWindow; // @synthesize shouldSkipAddressWindow=_shouldSkipAddressWindow;
@property struct CGRect deferredRequestFrameRect; // @synthesize deferredRequestFrameRect=_deferredRequestFrameRect;
@property BOOL deferredRequestUpdates; // @synthesize deferredRequestUpdates=_deferredRequestUpdates;
@property BOOL shouldSuppressFirstControlStateOverlay; // @synthesize shouldSuppressFirstControlStateOverlay=_shouldSuppressFirstControlStateOverlay;
@property BOOL shouldNotifyOfAllowsControlStateChange; // @synthesize shouldNotifyOfAllowsControlStateChange=_shouldNotifyOfAllowsControlStateChange;
@property BOOL shouldNotifyOfVirtualDisplayStateChange; // @synthesize shouldNotifyOfVirtualDisplayStateChange=_shouldNotifyOfVirtualDisplayStateChange;
@property BOOL canToggleCurtainMode; // @synthesize canToggleCurtainMode=_canToggleCurtainMode;
@property BOOL requestedControl; // @synthesize requestedControl=_requestedControl;
@property BOOL sessionAllowsControl; // @synthesize sessionAllowsControl=_sessionAllowsControl;
@property(retain) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(retain) SSNotificationOverlayViewController *overlayNotificationViewController; // @synthesize overlayNotificationViewController=_overlayNotificationViewController;
@property(retain) SSCurtainMessageViewController *curtainMessageViewController; // @synthesize curtainMessageViewController=_curtainMessageViewController;
@property(retain) SSBorderView *_borderView; // @synthesize _borderView=__borderView;
@property(retain) SSScreenInfo *_selectedScreen; // @synthesize _selectedScreen=__selectedScreen;
@property BOOL AVConferenceVideoAtttributesSet; // @synthesize AVConferenceVideoAtttributesSet=_AVConferenceVideoAtttributesSet;
@property(retain) AVCRemoteVideoClient *remoteVideoClient; // @synthesize remoteVideoClient=_remoteVideoClient;
@property(retain) AVConference *avConference; // @synthesize avConference=_avConference;
@property _Bool audioMuteStatusFromAgent; // @synthesize audioMuteStatusFromAgent=_audioMuteStatusFromAgent;
@property _Bool audioChatStatusFromAgent; // @synthesize audioChatStatusFromAgent=_audioChatStatusFromAgent;
@property(retain) NSString *connectionIDFromInvitationAgent; // @synthesize connectionIDFromInvitationAgent=_connectionIDFromInvitationAgent;
@property(retain) id connectionToInvitationAgent; // @synthesize connectionToInvitationAgent=_connectionToInvitationAgent;
@property double lastResignTime; // @synthesize lastResignTime=_lastResignTime;
@property BOOL hasUnknownCursorState; // @synthesize hasUnknownCursorState=_hasUnknownCursorState;
@property(retain) NSImage *userPicture; // @synthesize userPicture=_userPicture;
@property(copy) NSArray *screens; // @synthesize screens=_screens;
@property BOOL useAVConference; // @synthesize useAVConference=_useAVConference;
@property id <SSSessionViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) IDSSession *idsSessionThatWasDeclined; // @synthesize idsSessionThatWasDeclined=_idsSessionThatWasDeclined;
@property(readonly) BOOL idsInviteAcceptedWithScreenSharingQRService; // @synthesize idsInviteAcceptedWithScreenSharingQRService=_idsInviteAcceptedWithScreenSharingQRService;
@property(retain) IDSSession *idsSessionThatWasAccepted; // @synthesize idsSessionThatWasAccepted=_idsSessionThatWasAccepted;
@property(retain) IDSSession *idsSessionOSX_QR; // @synthesize idsSessionOSX_QR=_idsSessionOSX_QR;
@property(retain) IDSSession *idsSession; // @synthesize idsSession=_idsSession;
@property struct SSOrientationDetails savedScreenOrientation; // @synthesize savedScreenOrientation;
@property(retain) CALayer *AVConferenceVideoLayer; // @synthesize AVConferenceVideoLayer;
@property BOOL userClosedSessionWindow; // @synthesize userClosedSessionWindow;
@property BOOL loggedAppleIDEndSessionMessage; // @synthesize loggedAppleIDEndSessionMessage;
@property(retain) NSMutableDictionary *netAuthContext; // @synthesize netAuthContext;
@property BOOL menuBarIsLocked; // @synthesize menuBarIsLocked;
@property BOOL mouseButtonIsDown; // @synthesize mouseButtonIsDown;
@property(retain) NSTrackingArea *menuBarTrackingArea; // @synthesize menuBarTrackingArea;
@property(retain) NSTimer *connectionProgressTimeoutTimer; // @synthesize connectionProgressTimeoutTimer;
@property(retain) NSTimer *connectionProgressTimer; // @synthesize connectionProgressTimer;
@property BOOL changingFullScreenMode; // @synthesize changingFullScreenMode;
@property(retain) NSString *lastRetainedKerberosClientPrincipal; // @synthesize lastRetainedKerberosClientPrincipal;
@property(retain) NSString *kerberosClientPrincipal; // @synthesize kerberosClientPrincipal;
@property(retain) NSMutableArray *attemptedAuthTypes; // @synthesize attemptedAuthTypes;
@property(copy) NSString *cachedURL; // @synthesize cachedURL;
@property(copy) NSString *userEnteredAddressString; // @synthesize userEnteredAddressString;
@property(copy) NSArray *resolvedAddresses; // @synthesize resolvedAddresses;
@property(copy) NSString *bonjourDisplayName; // @synthesize bonjourDisplayName;
@property(copy) NSDate *resolveStartTime; // @synthesize resolveStartTime;
@property(retain) NSMutableOrderedSet *availableKerberosIdentities; // @synthesize availableKerberosIdentities;
@property(retain) SSCredentials *cachedCredentials; // @synthesize cachedCredentials;
@property(copy) NSString *requestConsoleCommand; // @synthesize requestConsoleCommand;
@property long long chosenSessionSelectionAction; // @synthesize chosenSessionSelectionAction;
@property(copy) NSString *currentConsoleUser; // @synthesize currentConsoleUser;
@property BOOL switchedDisplay; // @synthesize switchedDisplay;
@property(getter=isAnimatingResize) BOOL animatingResize; // @synthesize animatingResize;
@property BOOL userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC; // @synthesize userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC;
@property BOOL shouldNotifyOfFailureToExitCurtainMode; // @synthesize shouldNotifyOfFailureToExitCurtainMode;
@property BOOL shouldNotifyOfFailureToEnterCurtainMode; // @synthesize shouldNotifyOfFailureToEnterCurtainMode;
@property BOOL userEndedConnection; // @synthesize userEndedConnection;
@property BOOL clientChangedCurtainMode; // @synthesize clientChangedCurtainMode;
@property BOOL isUsingVirtualDisplay; // @synthesize isUsingVirtualDisplay;
@property BOOL simulatingLiveResize; // @synthesize simulatingLiveResize;
@property BOOL showingFullScreenMenuBar; // @synthesize showingFullScreenMenuBar;
@property BOOL isOffConsole; // @synthesize isOffConsole;
@property BOOL shouldReauthenticate; // @synthesize shouldReauthenticate;
@property BOOL hasEntireScreen; // @synthesize hasEntireScreen;
@property int sessionState; // @synthesize sessionState;
@property BOOL shouldWarnUserForUnencryptedLegacyVNC; // @synthesize shouldWarnUserForUnencryptedLegacyVNC;
@property BOOL allowsSSHTunnelForLegacyVNC; // @synthesize allowsSSHTunnelForLegacyVNC;
@property struct OpaqueEventHandlerRef *menuAutoShowEventHandler; // @synthesize menuAutoShowEventHandler;
@property(retain) SSConnectionAuthenticationViewController *connectionAuthenticationViewController; // @synthesize connectionAuthenticationViewController;
@property(retain) SSConnectionAddressViewController *connectionAddressViewController; // @synthesize connectionAddressViewController;
@property(retain) SSConnectionProgressViewController *connectionProgressViewController; // @synthesize connectionProgressViewController;
@property(retain) SSSessionSelectViewController *sessionSelectViewController; // @synthesize sessionSelectViewController;
@property(retain) SSConnectionWindowController *connectionWindowController; // @synthesize connectionWindowController;
@property(retain) SSFadeView *reconnectOverlay; // @synthesize reconnectOverlay;
@property(retain) SSPanningScrollView *scrollView; // @synthesize scrollView;
@property(retain) SSFrameBufferView *frameBufferView; // @synthesize frameBufferView;
@property(retain) SSSession *session; // @synthesize session;
@property id <SSSessionFileTransferDelegate> _fileTransferDelegate; // @synthesize _fileTransferDelegate;
@property BOOL _allowsFileTransferFromRemote; // @synthesize _allowsFileTransferFromRemote;
@property BOOL _allowsFileTransferToRemote; // @synthesize _allowsFileTransferToRemote;
@property BOOL _shouldAllowSendPasteboard; // @synthesize _shouldAllowSendPasteboard;
@property BOOL _shouldSharePasteboard; // @synthesize _shouldSharePasteboard;
@property BOOL _fillsWindow; // @synthesize _fillsWindow;
@property(retain) NSCursor *_controlCursor; // @synthesize _controlCursor;
@property(retain) NSCursor *_hilightCursor; // @synthesize _hilightCursor;
@property(retain) NSCursor *_observeCursor; // @synthesize _observeCursor;
@property BOOL quarantined; // @synthesize quarantined;
@property BOOL _shouldShowCursorForUnknownCursorState; // @synthesize _shouldShowCursorForUnknownCursorState;
@property BOOL _curtained; // @synthesize _curtained;
@property long long _controlMode; // @synthesize _controlMode;
- (struct CGImage *)CGImageFromRemoteScreen;
- (void)propagateMouseDown:(id)arg1;
- (void)setSwitchedDisplayWithNumber:(id)arg1;
@property(readonly) BOOL supportsAssistModeAnnotation;
@property(readonly) BOOL supportsFileTransfer;
@property(readonly) BOOL supportsAskToOpenURL;
@property(readonly) BOOL supportsAskToPutTextIntoClipboard;
@property(readonly) BOOL supportsTextMessage;
@property(readonly) BOOL supportsViewerAskToResume;
@property(readonly) BOOL supportsViewerPause;
@property(readonly) BOOL supportsAssistModeDirectionChange;
@property(readonly) BOOL supportsAssistModeColorChange;
@property(readonly) BOOL supportsAssistMode;
@property(readonly) BOOL supportsControlModeRequest;
@property(readonly) BOOL supportsControlMode;
@property(readonly) BOOL supportsChangingScreenQualityMode;
@property(readonly) BOOL supportsScalingScreen;
@property(readonly) BOOL supportsCurtainMode;
@property(readonly) BOOL supportsSharedPasteboard;
@property(readonly) BOOL supportsCopyPaste;
@property BOOL assistModeWithMouseUp;
@property(readonly) BOOL isInLiveResize;
@property(readonly) BOOL isSelectingSession;
@property(readonly) BOOL isGatheringAddressForConnection;
@property(readonly) BOOL isLegacyVNC;
@property id <SSSessionFileTransferDelegate> fileTransferDelegate;
@property BOOL allowsFileTransferFromRemote;
@property(readonly) BOOL audioChatEnabled;
@property(getter=isAudioChatMuted) BOOL audioChatMuted;
@property(readonly) BOOL audioChatSupported;
@property BOOL allowsFileTransferToRemote;
@property(nonatomic) int assistPointerKind;
@property(nonatomic) BOOL assistModeActive;
@property BOOL assistModeEnabled;
@property BOOL shouldAllowSendPasteboard;
@property BOOL shouldSharePasteboard;
@property(retain) NSCursor *controlCursor;
@property(retain) NSCursor *hilightCursor;
@property(retain) NSCursor *observeCursor;
@property long long screenQualityMode;
@property BOOL shouldShowCursorForUnknownCursorState;
@property(retain) SSScreenInfo *selectedScreen;
@property(getter=isCurtained) BOOL curtained;
@property BOOL shouldScaleScreen;
@property(readonly) BOOL isSessionVisible;
@property long long controlMode;
@property(readonly) BOOL isSharingControl;
@property(readonly) BOOL isControlling;
@property(readonly) BOOL isNotConnected;
@property(readonly) BOOL isDisconnected;
@property(readonly) BOOL isReconnecting;
@property(readonly) BOOL isConnected;
@property(readonly) BOOL isConnecting;
@property(readonly) BOOL isFullScreen;
@property(readonly) BOOL isBonjourSession;
@property BOOL fillsWindow;
@property(readonly) struct CGRect sessionFrame;
@property(readonly) struct CGSize contentSize;
@property struct CGColor *borderColor;
@property double borderWidth;
@property double borderSpacing;
@property(readonly, retain) NSView *borderView;
- (void)setShadow:(id)arg1;
- (id)shadow;
@property(readonly) BOOL isForcedViewer;
- (id)displayName;
@property(readonly) BOOL isAppleIDInvitationSession;
- (void)loadProgressIcon;
- (BOOL)isWindowVisible:(id)arg1;
- (void)userClosedConnectionAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runClosedConnectionSheetWithLocalizedMessage:(id)arg1;
- (void)runUserClosedConnectionSheet;
- (void)fadeDidEnd;
- (void)endReconnectOverlayQuickReplacement;
- (void)endReconnectOverlay:(BOOL)arg1;
- (void)showReconnectOverlayView:(BOOL)arg1 andMaxAlpha:(float)arg2;
- (void)showReconnectOverlayView:(BOOL)arg1;
- (void)showReconnectOverlayView;
- (void)startReconnectOverlayWithDelay:(double)arg1 showSpinner:(BOOL)arg2;
- (void)startReconnectOverlay;
- (void)showControlRequestNotification;
- (void)showAllowsControlStateChangeNotification:(BOOL)arg1;
- (void)dismissPausedNotification;
- (void)showPausedNotification;
- (void)dismissNotificationOverlay;
- (void)showNotificationOverlayWithImage:(id)arg1 andLabel:(id)arg2 andPersistence:(BOOL)arg3;
- (id)imageNamed:(id)arg1;
- (void)handleScreenParameterChange:(id)arg1;
- (void)closeConnectingWindow;
- (BOOL)isAddressGatheringConnectionViewVisible;
- (BOOL)isSessionSelectViewVisible;
- (BOOL)isConnectionWindowVisible;
- (void)showAuthenticationViewForHostName:(id)arg1 canConnectAsGuest:(BOOL)arg2 vnc:(BOOL)arg3;
- (void)reshowConnectionAuthenticationWindow;
- (BOOL)isConnectionAddressViewVisible;
- (void)showConnectionAddressWindowWithURLString:(id)arg1;
- (void)showConnectionAddressWindow;
- (void)clearAllViewControllers;
- (void)fillConnectionWindowWithViewFromController:(id)arg1;
- (void)showConnectionWindowWithViewFromController:(id)arg1 ignoreOtherApps:(BOOL)arg2;
- (void)updateAutoLayoutContraintsForView:(id)arg1;
- (BOOL)isConnectionProgressViewVisible;
- (void)showConnectionProgressViewWithLabel:(id)arg1 identity:(id)arg2;
- (void)showConnectionProgressView;
- (id)lockedByMessageWithUserMessage:(id)arg1;
- (void)showCurtainMessageWindow;
- (BOOL)shouldProceedWithHostKeyMismatch;
- (BOOL)shouldProceedWithVNC;
- (BOOL)shouldProceedWithGuestConnection;
- (void)showNotRedwoodAppWarning;
- (void)showConnectToSelfWarning;
- (void)showSSHNotAvailableWarning;
- (void)showSSHConfigurationWarning;
- (void)showPermanentFailure;
- (void)showConnectionFailedWarning:(int)arg1;
- (BOOL)closeOrReshowConnectionAddressWindow;
- (void)showManagementAppWarning;
- (void)showCouldNotControlWarning;
- (void)showAuthenticationNoMechWarning;
- (void)showAuthenticationFailedWarning;
- (void)showInvalidAddressWarning;
- (void)showIDSIsNotWorkingWarning;
- (void)showAppleIDIsUnresolvableWarning;
- (void)showAppleIDIsBlockedLocallyWarning;
- (void)showAppleIDIsBlockedWarning;
- (void)showAppleIDInvitationWasUnansweredWarning;
- (void)showAppleIDInvitationWasDeclinedWarning;
- (void)showAskToObserveWasDeniedWarning;
- (void)showShareConsoleRequestDeniedWarning;
- (void)showFailedToChangeSharingModeWarning;
- (void)showFailedToObserveWarning;
- (void)showFailedToControlWarning;
- (void)showFailedToExitCurtainModeWarning;
- (void)showFailedToEnterCurtainModeWarning;
- (id)windowToTarget;
- (void)showWarningWithTitle:(id)arg1 andMessage:(id)arg2 withStatus:(int)arg3;
- (void)showWarningWithTitle:(id)arg1 andMessage:(id)arg2;
- (void)configureForNewFillsWindowValue:(BOOL)arg1 withOldValue:(BOOL)arg2 oldWindow:(id)arg3 newWindow:(id)arg4;
- (void)unregisterForSessionObservation;
- (void)registerForSessionObservation;
- (void)configureDragAndDropFileCopy;
- (void)configurePanningMode:(long long)arg1;
- (void)configureViewerForScaling:(BOOL)arg1;
- (void)configureInputEventConsumer;
- (void)configureViewerForLocalContentsScale;
- (double)aspectRatio;
- (BOOL)perceivedScalingFactorHasChanged;
- (BOOL)resetScalingFactorIfNeeded:(double)arg1 forced:(BOOL)arg2;
- (void)fullScreenUsableRectChanged;
- (BOOL)isFullScreenToolbarAutohidingEnabled;
- (BOOL)windowIsFullScreen:(id)arg1;
- (BOOL)fullScreenWindowNeedsShrinkingForFrame:(struct CGRect)arg1;
- (void)resizeSessionForFrame:(struct CGRect)arg1;
- (void)resizeSessionToLargestPossibleSize;
- (struct CGSize)defaultInitialSessionSize;
- (struct CGRect)toolbarRect;
- (struct CGSize)windowOverhead;
- (struct CGSize)subtractWindowOverheadFromSize:(struct CGSize)arg1;
- (struct CGSize)addWindowOverheadToSize:(struct CGSize)arg1;
- (struct CGRect)sessionContainingRect;
- (struct Rect)dockAndMenuBarInsets;
- (struct Rect)sessionContainingRectInsets;
- (struct Rect)sessionShrinkInsetsForFrame:(struct CGRect)arg1;
- (struct Rect)toolbarAndTitleBarInsets;
- (struct Rect)sessionInsets;
- (struct CGSize)addInsets:(struct Rect)arg1 toSize:(struct CGSize)arg2;
- (struct CGSize)subtractInsets:(struct Rect)arg1 fromSize:(struct CGSize)arg2;
- (struct CGRect)subtractInsets:(struct Rect)arg1 fromRect:(struct CGRect)arg2;
- (struct CGSize)largestPossibleWindowedSessionSize;
- (struct CGSize)largestPossibleSessionSize;
@property struct CGRect screenFrame; // @synthesize screenFrame=_screenFrame;
- (struct CGSize)adjustedContentSize:(struct CGSize)arg1 forContainingRectWithSize:(struct CGSize)arg2 unscaledSize:(struct CGSize)arg3 resultingScalingFactor:(double *)arg4;
- (struct CGRect)adjustedFrame:(struct CGRect)arg1 forContainingRect:(struct CGRect)arg2 positionAdjustment:(int)arg3 sessionInsets:(struct Rect)arg4 containingRectInsets:(struct Rect)arg5 unscaledSize:(struct CGSize)arg6 resultingScalingFactor:(double *)arg7;
- (struct CGRect)adjustedFrame:(struct CGRect)arg1 forUnscaledSize:(struct CGSize)arg2 withResultingScalingFactor:(double *)arg3;
- (double)adjustedScalingFactorForFrame:(struct CGRect)arg1;
- (double)scalingFactorForContentSize:(struct CGSize)arg1 unscaledSize:(struct CGSize)arg2;
- (void)saveUserFrame;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (id)kerberosLabel;
- (void)releaseKerberosCredential;
- (void)retainKerberosCredential;
- (void)cleanupForCancel;
- (void)cleanupUserCancelledCredentialsRequest;
- (BOOL)cachedCredentialsAreValidForAuthType:(id)arg1;
- (void)reconnectSessionAndResolve:(BOOL)arg1;
- (void)reconnectSessionAndResolve;
- (void)connect;
- (void)cancelProgress:(id)arg1;
- (void)cancelResolve:(id)arg1;
- (void)startResolveProgress:(id)arg1;
- (void)addressResolutionFailedMainThread:(id)arg1;
- (void)addressesResolvedMainThread:(id)arg1;
- (void)resolveURL:(id)arg1;
@property(copy) NSOrderedSet *preferredURLs;
- (id)localCursor;
- (id)cursorForViewMode;
- (id)assistPointerColor;
- (void)curtainPromptConfirmedWithMessage:(id)arg1;
- (void)curtainPromptCanceled;
- (void)clearCredentialsAndConnect;
- (id)escapedURL;
- (id)displayNameForDialogs;
- (void)guestAccessRequestCancelled;
- (void)gatheredCredentials:(id)arg1 withStatus:(int)arg2;
- (void)IDSServiceMessageReceived:(id)arg1 context:(id)arg2;
- (void)resolvedBonjourName:(id)arg1;
- (void)startedBonjourResolveAtTimestamp:(id)arg1;
- (void)resolvedAddresses:(id)arg1 withStatus:(int)arg2;
- (void)logAddressResolutionToMessageTracerWithStatus:(int)arg1;
- (void)teardownForNewConnectionPrompt;
- (void)handleSessionEnded:(id)arg1 fromID:(id)arg2 withInfo:(id)arg3;
- (void)session:(id)arg1 didReceiveData:(id)arg2;
- (void)sessionEnded:(id)arg1 withReason:(unsigned int)arg2 error:(id)arg3;
- (void)activeSessionEndedWithReason:(unsigned int)arg1 error:(id)arg2;
- (void)session:(id)arg1 receivedSessionEndFromID:(id)arg2 withData:(id)arg3;
- (void)session:(id)arg1 receivedSessionMessageFromID:(id)arg2 withData:(id)arg3;
- (void)session:(id)arg1 receivedInvitationCancelFromID:(id)arg2 withData:(id)arg3;
- (void)session:(id)arg1 receivedInvitationDeclineFromID:(id)arg2 withData:(id)arg3;
- (void)session:(id)arg1 receivedInvitationAcceptFromID:(id)arg2 withData:(id)arg3;
- (void)sessionStarted:(id)arg1;
- (void)conference:(id)arg1 withCallID:(long long)arg2 networkHint:(BOOL)arg3;
- (void)conference:(id)arg1 videoQualityNotificationForCallID:(long long)arg2 isDegraded:(BOOL)arg3 isRemote:(BOOL)arg4;
- (void)conference:(id)arg1 cancelRelayRequest:(long long)arg2 requestDict:(id)arg3;
- (void)conference:(id)arg1 sendRelayUpdate:(long long)arg2 updateDict:(id)arg3;
- (void)conference:(id)arg1 inititiateRelayRequest:(long long)arg2 requestDict:(id)arg3;
- (void)serverDiedForConference:(id)arg1;
- (void)conference:(id)arg1 remoteVideoPaused:(BOOL)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 remoteAudioPaused:(BOOL)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 remoteVideoAttributesChanged:(id)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 remoteScreenAttributesChanged:(id)arg2 callID:(long long)arg3;
- (void)conference:(id)arg1 receivedFirstRemoteFrameForCallID:(long long)arg2;
- (void)conference:(id)arg1 updateOutputFrequencyLevel:(id)arg2;
- (void)conference:(id)arg1 updateInputFrequencyLevel:(id)arg2;
- (void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3;
- (void)conference:(id)arg1 didStartSession:(BOOL)arg2 withUserInfo:(id)arg3;
- (void)conference:(id)arg1 withCallID:(long long)arg2 remoteMediaStalled:(BOOL)arg3;
- (int)orientationForCurrentAngle;
- (void)setOrientationForConference:(id)arg1 videoAttributes:(id)arg2 callID:(long long)arg3;
- (int)J99HackForScreenOrientation:(int)arg1 videoOrientation:(int)arg2;
- (id)copyInviteDictionaryForRemoteInviteDictionary:(id)arg1;
- (void)startAudioAVConferenceCallWithRemoteDictionary:(id)arg1;
- (void)initAudioAVConference;
- (void)startAVConferenceCallWithRemoteDictionary:(id)arg1;
- (void)initAVConference;
- (void)credentialsEntered;
- (void)addressEntered:(id)arg1;
- (void)setViewControllersConnectingState:(BOOL)arg1;
- (void)closeConnectionWindow;
- (void)connectionCanceled;
- (void)stopWaitingForUserOnMainDisplay:(id)arg1;
- (void)selectCancelled:(id)arg1;
- (void)selectVirtualDisplay:(id)arg1;
- (void)selectMainDisplay:(id)arg1;
- (void)didFinishDroppingRemotePaths;
- (void)ssFrameBufferView:(id)arg1 didDropRemotePath:(id)arg2 atLocalDropDestination:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)ssSessionDisplaysDidWake:(id)arg1;
- (void)ssSessionDisplaysDidSleep:(id)arg1;
- (void)ssSessionRequestToAddTextToPasteboard:(id)arg1 result:(int)arg2;
- (void)ssSessionRequestToOpenURL:(id)arg1 result:(int)arg2;
- (void)ssSessionRequestToResume:(id)arg1 result:(int)arg2;
- (void)ssSessionResumed:(id)arg1;
- (void)ssSessionPaused:(id)arg1;
- (void)ssSession:(id)arg1 didSetLocalWindowUIResolution:(id)arg2;
- (void)ssSession:(id)arg1 allowsControl:(BOOL)arg2;
- (void)ssSession:(id)arg1 canToggleCurtainModeChanged:(BOOL)arg2;
- (void)ssSession:(id)arg1 onConsoleChanged:(BOOL)arg2;
- (void)ssSession:(id)arg1 touchEvent:(id)arg2;
- (void)ssSession:(id)arg1 virtualDisplayStateChanged:(BOOL)arg2;
- (void)ssSessionUserClosedConnection:(id)arg1;
- (void)ssSessionBeeped:(id)arg1;
- (void)ssSession:(id)arg1 fileCopyDidComplete:(id)arg2;
- (void)ssSession:(id)arg1 fileCopyProgressDidUpdate:(id)arg2;
- (void)ssSession:(id)arg1 dragDroppedLocalPaths:(id)arg2 onRemotePath:(id)arg3;
- (void)ssSession:(id)arg1 systemInfoRequestCompleted:(id)arg2;
- (void)ssSessionRemotePasteboardChanged:(id)arg1;
- (void)ssSession:(id)arg1 cursorPositionChanged:(struct SSPoint)arg2;
- (void)ssSession:(id)arg1 fullScreenUpdateProgress:(double)arg2;
- (void)ssSession:(id)arg1 sizeChanged:(struct SSSize)arg2;
- (void)finishSizeChangedWithFrame:(struct CGRect)arg1;
- (void)ssSessionReady:(id)arg1;
- (BOOL)aspectRatio:(struct CGSize)arg1 matches:(struct CGSize)arg2;
- (void)ssSession:(id)arg1 sessionSelectionResult:(int)arg2;
- (void)ssSession:(id)arg1 wantsSessionSelection:(id)arg2 consoleUser:(id)arg3;
- (void)ssSession:(id)arg1 authenticationResult:(int)arg2;
- (void)saveCredentialsToKeychain;
- (void)fetchShouldSaveCredentials:(id)arg1;
- (void)fetchCredentialsPassword:(id)arg1;
- (id)loadCredentialsFromKeychain:(id)arg1 forAuthType:(id)arg2;
- (int)removeCredentialsFromKeychainWithAuthType:(id)arg1 accountName:(id)arg2;
- (struct __SecKeychainItem *)findCredentialInKeychainForAuthType:(id)arg1 inRequestedAccountName:(id)arg2 outAccountName:(id *)arg3;
- (id)standardizedKeychainIdentityWithPort:(id *)arg1;
- (id)standardizedUserInputString:(id)arg1 port:(id *)arg2;
- (void)ssSession:(id)arg1 wantsCredentialsForAuthenticationTypes:(id)arg2;
- (id)servicePrincipalForClientPrincipal:(id)arg1;
- (id)orderedArrayOfAuthTypesForMethod:(long long)arg1 preferKerberos:(BOOL)arg2 serverAllowedTypes:(id)arg3;
- (BOOL)shouldPreferKerberosWithAuthTypes:(id)arg1 wasBTMM:(char *)arg2;
- (id)principalSetIfKerberosIsInAuthTypes:(id)arg1;
- (void)ssSessionTerminated:(id)arg1;
- (void)ssSession:(id)arg1 showConnectDidFailUI:(int)arg2;
- (void)ssSession:(id)arg1 connectDidFail:(int)arg2;
- (void)ssSession:(id)arg1 delegateControlModeSet:(long long)arg2;
- (void)workspaceActiveSpaceChanged:(id)arg1;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (id)windowRestorationStateForWindow:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)armMenuBarUnlockTimer;
- (void)unlockMenuBar;
- (void)lockMenuBar;
- (void)menuBarUnlockTimer:(id)arg1;
- (short)fullScreenToolbarHeight;
- (void)updateTrackingAreas;
- (void)addCursorTrackingArea;
- (void)cursorUpdate:(id)arg1;
- (void)cursorUpdateCore;
- (void)addMenuBarTrackingArea;
- (short)menuBarHeight;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (void)setMenuBarDelay:(double)arg1;
- (void)lockMenuBar:(BOOL)arg1;
- (void)armUnlockMenuBarTimer;
- (void)unlockMenuBarTimer:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)menuAutoShowHandlerWithEventKind:(unsigned int)arg1 andWillShowMenuBar:(BOOL)arg2;
- (void)removeMenuBarTransitionHandler;
- (void)installMenuBarTransitionHandler;
- (void)windowDidChangeOcclusionState:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)clearSessionStateAndDisconnect:(BOOL)arg1;
- (void)closeSession;
- (void)focus;
- (BOOL)ssSessionIsRedwood;
- (BOOL)handleSSInputEvent:(id)arg1;
- (void)adjustShrinkModeForEvent:(id)arg1;
- (void)setShowCursor:(id)arg1;
- (void)setHideCursor:(id)arg1;
- (void)getRemotePasteboard:(id)arg1;
- (void)sendLocalPasteboard:(id)arg1;
- (void)captureScreen:(id)arg1;
- (void)requestToOpenURL:(id)arg1;
- (void)showMessageToUser:(id)arg1;
- (void)requestToCopyTextToPasteboard:(id)arg1;
- (void)requestToResumeScreenSharing;
- (void)pauseScreenSharing;
- (void)requestSystemInfo:(int)arg1 args:(id)arg2 senderToken:(unsigned int)arg3;
- (void)requestSystemInfo:(int)arg1 args:(id)arg2;
- (void)connectToAddress:(id)arg1 withOptions:(id)arg2;
- (void)connectToURLs:(id)arg1 withPreferredCredentials:(id)arg2 options:(id)arg3;
- (void)connectToURLs:(id)arg1 withOptions:(id)arg2;
- (void)connectToURL:(id)arg1 withPreferredCredentials:(id)arg2 options:(id)arg3;
- (void)connectToURL:(id)arg1 withOptions:(id)arg2;
- (void)connectWithOptions:(id)arg1;
- (struct CGPoint)translateInBounds:(struct CGRect)arg1 xPercent:(double)arg2 yPercent:(double)arg3 enclosingRect:(struct CGRect)arg4;
- (struct CGPoint)translatePoint:(struct CGPoint)arg1 enclosingRect:(struct CGRect)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)resetToUnscruntchedFullScreenMode;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)setupFrameBufferView;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

