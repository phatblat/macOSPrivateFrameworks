//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDate, NSMapTable, NSMutableDictionary, NSString, WBSPerSitePreference;

__attribute__((visibility("hidden")))
@interface ManagedPlugIn : NSObject
{
    NSMutableDictionary *_hostnamesToPolicies;
    NSMapTable *_browserViewControllerToPageURL;
    BOOL _eligibleForWhitelisting;
    BOOL _runUnsandboxedOnFirstVisit;
    BOOL _updateWasAvailableWhenUnavailableDialogWasLastShown;
    BOOL _disallowPromptBeforeUseDialog;
    BOOL _firstVisitPolicyManagedByAdmin;
    BOOL _changingPolicyPerSitePreventedByAdmin;
    BOOL _blockedForSecurity;
    BOOL _blockedForCompatibility;
    BOOL _pluginUpdateAvailable;
    BOOL _sandboxed;
    BOOL _supported;
    BOOL _isOffByDefault;
    int _firstVisitPolicy;
    unsigned int _loadPolicy;
    NSString *_identifier;
    NSString *_name;
    NSString *_nameForPerSitePreferencesPopover;
    NSString *_version;
    NSString *_path;
    NSString *_urlString;
    NSString *_mimeType;
    NSString *_pluginVersionWhenUnavailableDialogWasLastShown;
    WBSPerSitePreference *_preference;
    id <ManagedPlugInDelegate> _delegate;
    NSDate *_lastUsedDate;
}

@property(readonly, nonatomic) BOOL isOffByDefault; // @synthesize isOffByDefault=_isOffByDefault;
@property(retain, nonatomic) NSDate *lastUsedDate; // @synthesize lastUsedDate=_lastUsedDate;
@property(readonly, nonatomic, getter=isSupported) BOOL supported; // @synthesize supported=_supported;
@property(nonatomic) __weak id <ManagedPlugInDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) WBSPerSitePreference *preference; // @synthesize preference=_preference;
@property(nonatomic, getter=isSandboxed) BOOL sandboxed; // @synthesize sandboxed=_sandboxed;
@property(nonatomic, getter=isPluginUpdateAvailable) BOOL pluginUpdateAvailable; // @synthesize pluginUpdateAvailable=_pluginUpdateAvailable;
@property(nonatomic, getter=isBlockedForCompatibility) BOOL blockedForCompatibility; // @synthesize blockedForCompatibility=_blockedForCompatibility;
@property(nonatomic, getter=isBlockedForSecurity) BOOL blockedForSecurity; // @synthesize blockedForSecurity=_blockedForSecurity;
@property(nonatomic, getter=isChangingPolicyPerSitePreventedByAdmin) BOOL changingPolicyPerSitePreventedByAdmin; // @synthesize changingPolicyPerSitePreventedByAdmin=_changingPolicyPerSitePreventedByAdmin;
@property(nonatomic, getter=isFirstVisitPolicyManagedByAdmin) BOOL firstVisitPolicyManagedByAdmin; // @synthesize firstVisitPolicyManagedByAdmin=_firstVisitPolicyManagedByAdmin;
@property(nonatomic) BOOL disallowPromptBeforeUseDialog; // @synthesize disallowPromptBeforeUseDialog=_disallowPromptBeforeUseDialog;
@property(nonatomic) BOOL updateWasAvailableWhenUnavailableDialogWasLastShown; // @synthesize updateWasAvailableWhenUnavailableDialogWasLastShown=_updateWasAvailableWhenUnavailableDialogWasLastShown;
@property(copy, nonatomic) NSString *pluginVersionWhenUnavailableDialogWasLastShown; // @synthesize pluginVersionWhenUnavailableDialogWasLastShown=_pluginVersionWhenUnavailableDialogWasLastShown;
@property(nonatomic) BOOL runUnsandboxedOnFirstVisit; // @synthesize runUnsandboxedOnFirstVisit=_runUnsandboxedOnFirstVisit;
@property(nonatomic) unsigned int loadPolicy; // @synthesize loadPolicy=_loadPolicy;
@property(nonatomic, getter=isEligibleForWhitelisting) BOOL eligibleForWhitelisting; // @synthesize eligibleForWhitelisting=_eligibleForWhitelisting;
@property(nonatomic) int firstVisitPolicy; // @synthesize firstVisitPolicy=_firstVisitPolicy;
@property(copy, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(copy, nonatomic) NSString *urlString; // @synthesize urlString=_urlString;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, copy, nonatomic) NSString *nameForPerSitePreferencesPopover; // @synthesize nameForPerSitePreferencesPopover=_nameForPerSitePreferencesPopover;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)updateHostPolicy:(id)arg1 knownToUsePlugIn:(BOOL)arg2;
- (void)setEligibleForWhitelistedAskPolicy:(BOOL)arg1;
@property(readonly, nonatomic) NSArray *nonBlockHostPolicies;
- (BOOL)expirePoliciesSetBeforePlugInWasAvailable;
- (BOOL)expirePoliciesIfNecessary;
- (BOOL)_isHostPolicyAllowAndExpired:(id)arg1;
- (BOOL)_isPolicyAllowAndExpired:(int)arg1 lastVisitedDate:(id)arg2;
- (BOOL)clearBlockPolicies;
- (BOOL)clearBlockPolicyForPageURL:(id)arg1;
- (BOOL)clearAllPolicies;
- (void)pruneSyntheticPoliciesIfNeeded;
- (BOOL)_clearHostPoliciesPassingTest:(CDUnknownBlockType)arg1;
- (BOOL)browserViewControllerWillClose:(id)arg1;
- (BOOL)browserViewController:(id)arg1 didFinishUsingPlugInOnPageWithURL:(id)arg2;
- (BOOL)browserViewController:(id)arg1 didBeginUsingPlugInOnPageWithURL:(id)arg2;
- (BOOL)_removeUnusedPolicyForHostnameIfNeeded:(id)arg1;
- (BOOL)_openPageIsUsingPlugInForHostname:(id)arg1;
@property(readonly, nonatomic) int defaultFirstVisitPolicy;
- (id)policyForPageURL:(id)arg1 wasCreated:(char *)arg2;
- (id)existingPolicyForPageURL:(id)arg1;
- (id)_hostnameForPageURL:(id)arg1;
- (void)clearPolicy:(id)arg1;
- (void)appendPoliciesEnabledBeforePlugInWasInstalledForURLStrings:(id)arg1;
- (void)appendPoliciesInDictionaryRepresentation:(id)arg1 isManagedByAdmin:(BOOL)arg2;
- (void)addPolicy:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, nonatomic, getter=isBlockedByXProtect) BOOL blockedByXProtect;
- (BOOL)isUnsafe;
- (id)blockedPluginHostPoliciesForDisplayIncludingSyntheticPoliciesForOpenURLs:(id)arg1;
@property(readonly, nonatomic) NSArray *blockedPluginHostPolicies;
- (id)initWithPlugInInfo:(id)arg1 isSupported:(BOOL)arg2;
- (id)init;

@end

