//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FetcherDelegate.h"

@class NSCache, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSString, NSTimer, NSURL, ReadingListDataStore;

__attribute__((visibility("hidden")))
@interface ReadingListController : NSObject <FetcherDelegate>
{
    struct unique_ptr<Safari::ReadingListFetcher, std::__1::default_delete<Safari::ReadingListFetcher>> _backgroundFetcher;
    NSMutableSet *_readingListItemUUIDsWithPendingThumbnailRequests;
    NSObject *_networkChangeNotificationObserver;
    long long _headroom;
    unsigned long long _queuedDeleteOperationsCount;
    struct unique_ptr<SafariShared::SuddenTerminationDisabler, std::__1::default_delete<SafariShared::SuddenTerminationDisabler>> _suddenTerminationDisabler;
    NSTimer *_deleteRemovedItemsTimer;
    NSMutableArray *_readingListItemsToFetch;
    NSMutableDictionary *_syncItemsToFetchSoon;
    NSTimer *_fetchSyncItemsSoonTimer;
    ReadingListDataStore *_readingListDataStore;
    NSCache *_thumbnailsCache;
    NSObject<OS_dispatch_queue> *_fileIOQueue;
    BOOL _userIsOffline;
    NSURL *_readingListWebArchivesDirectoryURL;
    NSMapTable *_itemsToIconRequestTokens;
    BOOL _readerShouldBeShownIfPossible;
}

+ (BOOL)readingListIsAvailable;
+ (id)sharedController;
@property(nonatomic) BOOL readerShouldBeShownIfPossible; // @synthesize readerShouldBeShownIfPossible=_readerShouldBeShownIfPossible;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_processItemsToFetch;
- (void)_readingListItemsDidChange:(id)arg1;
- (void)_fetchSyncedReadingListItemSoon:(id)arg1;
- (void)_didRemoveReadingListItem:(id)arg1;
- (void)_deleteAllArchives;
- (void)_deleteRemovedItemsSoon;
- (void)_deleteOperationDidFinish;
- (void)_deleteOperationWillBeAddedToQueue;
- (void)_didSaveWebArchiveOfSize:(unsigned long long)arg1;
- (void)_didFinishArchivingReadingListItemWithUUID:(id)arg1 pageType:(int)arg2 fileSaveResult:(int)arg3 fileSize:(long long)arg4;
- (void)_saveWebArchiveData:(id)arg1 pageType:(int)arg2 forReadingListItem:(id)arg3 toFileURL:(id)arg4;
- (void)_didFailFetchingReadingListItem:(id)arg1 pageFetchResult:(int)arg2;
- (void)_didUpdateReadingListItem:(id)arg1 readingListFetcherInfo:(id)arg2;
- (id)_archiveURLIfOnDiskForReadingListItem:(id)arg1 pageNumber:(unsigned long long)arg2;
- (id)_thumbnailFileURLForReadingListItemUUID:(id)arg1;
- (id)_thumbnailFileURLForReadingListItem:(id)arg1;
- (id)_archiveFolderURLForReadingListItem:(id)arg1;
- (id)_archiveFolderURLForReadingListItemUUID:(id)arg1;
- (void)_stopObservingNetworkChangeNotifications;
- (void)_didReceiveNetworkChangeNotification;
- (void)_beginObservingNetworkChangeNotifications;
- (void)_saveThumbnailImage:(id)arg1 forItem:(id)arg2;
- (void)_fetchThumbnailImageWithURL:(id)arg1 forItem:(id)arg2;
- (void)cancelFallbackIconRequestForItem:(id)arg1;
- (void)getFallbackIconForItem:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_addThumbnailImageToCache:(id)arg1 forItem:(id)arg2;
- (void)_addItemWithBookmark:(id)arg1 addUserInteraction:(int)arg2 allowUndo:(BOOL)arg3 didCheckIfBookmarkEditingIsPermitted:(BOOL)arg4;
- (void)_addItem:(id)arg1 atIndex:(unsigned long long)arg2 allowUndo:(BOOL)arg3 didCheckIfBookmarkEditingIsPermitted:(BOOL)arg4;
- (void)pruneWebArchives;
- (id)urlForViewingReadingListItem:(id)arg1;
- (id)liveOrArchiveURLForReadingListItem:(id)arg1 pageURL:(id)arg2;
- (BOOL)isReadingListItemReaderizedPageArchiveURL:(id)arg1;
- (BOOL)isReadingListItemArchiveURL:(id)arg1;
- (id)readerizedPageArchiveURLForReadingListItem:(id)arg1;
- (id)pageArchiveURLForReadingListItem:(id)arg1 pageNumber:(unsigned long long)arg2;
- (BOOL)_shouldSaveArticlesOfflineAutomatically;
- (BOOL)_shouldSaveWebArchiveDataForItem:(id)arg1;
- (void)fetcher:(struct ReadingListFetcher *)arg1 didFetchReaderWebArchive:(id)arg2 forItem:(id)arg3;
- (void)fetcher:(struct ReadingListFetcher *)arg1 didFetchWebArchive:(id)arg2 forPageNumber:(unsigned long long)arg3 ofItem:(id)arg4;
- (void)fetcher:(struct ReadingListFetcher *)arg1 didFindURL:(id)arg2 forPageNumber:(unsigned long long)arg3 ofItem:(id)arg4;
- (void)fetcher:(struct ReadingListFetcher *)arg1 didFailFetchWithResult:(int)arg2 forItem:(id)arg3;
- (void)fetcher:(struct ReadingListFetcher *)arg1 didUpdateInfo:(id)arg2 forItem:(id)arg3;
- (void)fetcher:(struct ReadingListFetcher *)arg1 didSucceedFetchingInfo:(id)arg2 forItem:(id)arg3;
- (void)canFetchAnotherItemWithFetcher:(struct ReadingListFetcher *)arg1;
- (void)fetcher:(struct ReadingListFetcher *)arg1 willFetchItem:(id)arg2;
- (void)getReadingListItem:(id *)arg1 outPageNumber:(unsigned long long *)arg2 forBackForwardItem:(const struct BackForwardListItem *)arg3;
- (void)setReadingListItem:(id)arg1 pageNumber:(unsigned long long)arg2 forBackForwardItem:(const struct BackForwardListItem *)arg3;
- (void)thumbnailImageForUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)thumbnailImageForItem:(id)arg1;
- (void)fetchInfoForItem:(id)arg1;
- (void)dequeuePendingNonUserInitiatedFetches;
- (void)queueFetchForAllUnarchivedItems;
- (void)queueFetchForItem:(id)arg1;
- (void)removeArchiveForReadingListItem:(id)arg1;
- (BOOL)isFetchInProgress;
- (id)itemForURLString:(id)arg1;
- (id)itemForUUID:(id)arg1;
- (unsigned long long)itemCount;
- (id)allItems;
- (void)markItem:(id)arg1 asUnread:(BOOL)arg2;
- (void)removeItem:(id)arg1;
- (void)addItemWithBookmark:(id)arg1 addUserInteraction:(int)arg2 allowUndo:(BOOL)arg3 didCheckIfBookmarkEditingIsPermitted:(BOOL)arg4;
- (void)addItemWithLinkTitle:(id)arg1 linkLabel:(id)arg2 linkURL:(id)arg3 addUserInteraction:(int)arg4 allowUndo:(BOOL)arg5;
- (void)addItemWithTitle:(id)arg1 url:(id)arg2 addUserInteraction:(int)arg3 allowUndo:(BOOL)arg4;
- (BOOL)addURLsFromPasteboard:(id)arg1;
- (void)clearAllItems;
@property(readonly, nonatomic) BOOL hasOfflineReadingListItems;
- (void)savePendingChangesBeforeTermination;
- (id)initWithWebArchivesDirectoryURL:(id)arg1;
- (void)resetImageURLIconFetchAndOfflineArchiveRequestStateForItemsAddedAfterDate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

