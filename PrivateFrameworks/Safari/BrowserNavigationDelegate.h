//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "ExternalURLNavigationDelegate.h"
#import "WKNavigationDelegatePrivate.h"

@class BrowserViewController, ExternalURLNavigationHandler, NSString, NSTimer, NSURL, WBSAppLink, _WKUserInitiatedAction;

__attribute__((visibility("hidden")))
@interface BrowserNavigationDelegate : NSObject <ExternalURLNavigationDelegate, WKNavigationDelegatePrivate>
{
    BrowserViewController *_browserViewController;
    NSTimer *_cachePageTextTimer;
    NSTimer *_cacheSnapshotTimer;
    NSTimer *_preFillFormsTimer;
    NSTimer *_resetCrashCountTimer;
    BOOL _progressIsForInitialMainFrameLoad;
    unsigned long long _recentWebProcessCrashCount;
    BOOL _wasBrowserInitiatedLoad;
    _WKUserInitiatedAction *_lastUserInitiatedAction;
    ExternalURLNavigationHandler *_externalURLNavigationHandler;
    BOOL _isExternalSchemeRedirectScheduled;
    CDUnknownBlockType _pendingNavigationActionDueToExternalSchemePromptHandler;
    NSURL *_urlReloadedWithOverriddenEnableContentBlockers;
    BOOL _overriddenContentBlockersEnabledSetting;
    WBSAppLink *_currentAppLink;
    BOOL _navigatingViaBackForwardList;
    BOOL _navigatingToCachedPageViaBackForwardList;
    BOOL _didLoadCurrentURLWithContentBlockersEnabled;
}

@property(readonly, nonatomic) BOOL didLoadCurrentURLWithContentBlockersEnabled; // @synthesize didLoadCurrentURLWithContentBlockersEnabled=_didLoadCurrentURLWithContentBlockersEnabled;
@property(nonatomic, getter=isNavigatingToCachedPageViaBackForwardList) BOOL navigatingToCachedPageViaBackForwardList; // @synthesize navigatingToCachedPageViaBackForwardList=_navigatingToCachedPageViaBackForwardList;
@property(nonatomic, getter=isNavigatingViaBackForwardList) BOOL navigatingViaBackForwardList; // @synthesize navigatingViaBackForwardList=_navigatingViaBackForwardList;
- (void).cxx_destruct;
- (void)_showAppLinkBannerIfNeeded;
- (void)_webView:(id)arg1 resolveWebGLLoadPolicyForURL:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)_webView:(id)arg1 webGLLoadPolicyForURL:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)_webView:(id)arg1 didBlockInsecurePluginVersionWithInfo:(id)arg2;
- (void)_webView:(id)arg1 decidePolicyForPluginLoadWithCurrentPolicy:(long long)arg2 pluginInfo:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_webView:(id)arg1 willGoToBackForwardListItem:(id)arg2 inPageCache:(BOOL)arg3;
- (void)_webView:(id)arg1 backForwardListItemAdded:(id)arg2 removed:(id)arg3;
- (void)_webView:(id)arg1 URL:(id)arg2 contentRuleListIdentifiers:(id)arg3 notifications:(id)arg4;
- (void)_webView:(id)arg1 contentRuleListWithIdentifier:(id)arg2 performedAction:(id)arg3 forURL:(id)arg4;
- (void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webView:(id)arg1 webContentProcessDidTerminateWithReason:(long long)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3;
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)_webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 userInfo:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)_webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 userInfo:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (BOOL)donatePageTextMetadata:(id)arg1 allowingDonationWithoutReaderText:(BOOL)arg2;
- (void)_clearBlockedWindowConfigurationCachesIfNecessary:(BOOL)arg1;
- (BOOL)_canDonatePageTextToSpotlight;
- (BOOL)_allowCachingPageText;
- (BOOL)_allowCachingSnapshot;
- (void)_cacheSnapshotSoon;
- (void)_cachePageTextSoon;
- (void)_resetCrashCountSoon;
- (void)didStartBrowserInitiatedLoadForURL:(id)arg1 usingBackForwardList:(BOOL)arg2;
- (void)_preFillFormsSoon;
- (BOOL)_canAuthenticateAgainstProtectionSpace:(id)arg1;
- (void)_locationChangeDoneForWebView:(id)arg1 frameType:(long long)arg2 pageLoadType:(int)arg3 error:(id)arg4;
- (void)_loadURLSoonWithUserAndPasswordRemoved:(id)arg1;
- (BOOL)_handleUserPreferredStartPageLink:(id)arg1 navigationType:(unsigned int)arg2 eventModifiers:(unsigned long long)arg3 eventMouseButton:(long long)arg4;
- (void)_openHelpAnchorID:(id)arg1;
- (void)_handleErrorPageSearchWebURL:(id)arg1;
- (void)_reloadCrashedPages;
- (BOOL)_handleErrorPageLink:(id)arg1 webView:(id)arg2 frame:(id)arg3 originatingFrame:(id)arg4;
- (void)externalURLNavigationHandlerDidCompleteNavigationAction:(id)arg1;
- (void)externalURLNavigationHandlerDidEnqueueNavigationAction:(id)arg1;
- (BOOL)_openURLUsingPassKit:(id)arg1;
- (void)_openURLExternally:(id)arg1 isMainFrame:(BOOL)arg2 navigationAction:(id)arg3;
@property(readonly, nonatomic) double estimatedProgress;
- (void)cancelProgressFeedback;
- (void)endProgressFeedback;
- (void)_didStartProgressForURL:(id)arg1;
- (id)_provisionalURLFromMainFrameInWebView:(id)arg1;
- (void)_handleUseWithWebsitePoliciesForURL:(id)arg1 isMainFrame:(BOOL)arg2 decisionHandlerWillUseWebsitePoliciesForReload:(BOOL)arg3 preferredUsePolicy:(long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_loadWebsitePoliciesForURL:(id)arg1 isForMainFrameNavigation:(BOOL)arg2 isForReload:(BOOL)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)overrideEnableContentBlockersOnNextReload:(BOOL)arg1;
- (void)updateWebsitePoliciesForURL:(id)arg1;
- (BOOL)_decidePolicyForActionIfActionIsClickingToNavigateToPlugInDownloadPageForDisabledPluginForURL:(id)arg1 navigationType:(long long)arg2 isMainFrame:(BOOL)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (void)_handlePolicyWhenNotReusingCurrentWebViewForURL:(id)arg1 policy:(long long)arg2 readingListItem:(id)arg3 pageNumber:(unsigned long long)arg4 navigationType:(long long)arg5;
- (BOOL)_shouldGoBackInPinnedTabForURLWindowPolicy:(long long)arg1 navigationType:(long long)arg2 URL:(id)arg3;
- (BOOL)_isSpawningNewTabForURLWindowPolicy:(long long)arg1 navigationType:(long long)arg2;
- (void)_unableToImplementPolicyForMainFrameForURL:(id)arg1;
- (void)_clearSpeculativeStateForDivertedLoadDecision:(long long)arg1 isMainFrame:(BOOL)arg2;
- (void)_handlePolicyDecisionForURL:(id)arg1 isMainFrame:(BOOL)arg2 decision:(long long)arg3 decisionHandlerWillUseWebsitePolicies:(long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (long long)_verifyDownloadPolicyDecisionForURL:(id)arg1 isMainFrame:(BOOL)arg2;
- (void)verifyAndHandlePolicyDecisionForURL:(id)arg1 isMainFrame:(BOOL)arg2 decision:(long long)arg3 decisionHandlerWillUseWebsitePolicies:(long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (CDUnknownBlockType)decisionHandlerForNavigationResponsePolicyDecisionHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)policyDecisionHandlerForNavigationAction:(id)arg1 decisionHandler:(CDUnknownBlockType)arg2 inNewProcess:(BOOL)arg3;
- (void)close;
- (void)dealloc;
- (id)initWithBrowserViewController:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

