//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SKManagerListener.h"

@class NSHashTable, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSSet, NSString, SMSystem_Daemon;

@interface SMSystemScanner : NSObject <SKManagerListener>
{
    BOOL _switchingWirelessNetworks;
    unsigned long long _scannerState;
    SMSystem_Daemon *_currentSystem;
    NSMutableDictionary *_localSystems;
    NSObject<OS_dispatch_queue> *_localSystemsListQueue;
    NSMutableDictionary *_autoLoaderSystems;
    NSObject<OS_dispatch_queue> *_autoLoaderSystemsListQueue;
    NSMutableDictionary *_timeCapsuleSystems;
    NSObject<OS_dispatch_queue> *_timeCapsuleSystemsListQueue;
    NSHashTable *_systemEventListeners;
    NSHashTable *_scannerClients;
    NSObject<OS_dispatch_queue> *_scannerQueue;
    NSObject<OS_dispatch_queue> *_autoLoaderBrowserQueue;
    NSObject<OS_dispatch_queue> *_timeCapsuleBrowserQueue;
    NSMutableDictionary *_availabilityNotifications;
    NSMutableSet *_observedSystems;
}

+ (id)keyPathsForValuesAffectingAllSystems;
+ (id)sharedScanner;
@property(retain) NSMutableSet *observedSystems; // @synthesize observedSystems=_observedSystems;
@property(retain) NSMutableDictionary *availabilityNotifications; // @synthesize availabilityNotifications=_availabilityNotifications;
@property(retain) NSObject<OS_dispatch_queue> *timeCapsuleBrowserQueue; // @synthesize timeCapsuleBrowserQueue=_timeCapsuleBrowserQueue;
@property(retain) NSObject<OS_dispatch_queue> *autoLoaderBrowserQueue; // @synthesize autoLoaderBrowserQueue=_autoLoaderBrowserQueue;
@property(retain) NSObject<OS_dispatch_queue> *scannerQueue; // @synthesize scannerQueue=_scannerQueue;
@property(retain) NSHashTable *scannerClients; // @synthesize scannerClients=_scannerClients;
@property(retain) NSHashTable *systemEventListeners; // @synthesize systemEventListeners=_systemEventListeners;
@property(retain) NSObject<OS_dispatch_queue> *timeCapsuleSystemsListQueue; // @synthesize timeCapsuleSystemsListQueue=_timeCapsuleSystemsListQueue;
@property(retain) NSMutableDictionary *timeCapsuleSystems; // @synthesize timeCapsuleSystems=_timeCapsuleSystems;
@property(retain) NSObject<OS_dispatch_queue> *autoLoaderSystemsListQueue; // @synthesize autoLoaderSystemsListQueue=_autoLoaderSystemsListQueue;
@property(retain) NSMutableDictionary *autoLoaderSystems; // @synthesize autoLoaderSystems=_autoLoaderSystems;
@property(retain) NSObject<OS_dispatch_queue> *localSystemsListQueue; // @synthesize localSystemsListQueue=_localSystemsListQueue;
@property(retain) NSMutableDictionary *localSystems; // @synthesize localSystems=_localSystems;
@property BOOL switchingWirelessNetworks; // @synthesize switchingWirelessNetworks=_switchingWirelessNetworks;
@property(retain) SMSystem_Daemon *currentSystem; // @synthesize currentSystem=_currentSystem;
@property unsigned long long scannerState; // @synthesize scannerState=_scannerState;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)notifyWhenSystemIsAvailable:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)stopObservingSystem:(id)arg1;
- (void)startObservingSystem:(id)arg1;
- (void)updateScannerState;
- (void)removeScannerClient:(id)arg1;
- (void)addScannerClient:(id)arg1;
- (void)askListenersToSelectSystem:(id)arg1;
- (void)notifyListenersOfChange:(id)arg1 onSystem:(id)arg2;
- (void)notifyListenersOfRemovedSystem:(id)arg1;
- (void)notifyListenersOfNewSystem:(id)arg1;
- (void)removeSystemChangesListener:(id)arg1;
- (void)addNewSystemChangesListener:(id)arg1;
- (void)unmountRemoteTMSharesExcluding:(id)arg1;
- (void)unmountAllRemoteTMShares;
- (BOOL)registerAlreadyMountedBackups:(id)arg1;
- (void)addNonBonjourRemoteShare:(id)arg1;
- (void)remoteShareDisappeared:(id)arg1;
- (void)matchBackupToTMDisk:(id)arg1;
- (void)disksDisappeared:(id)arg1;
- (void)disksChanged:(id)arg1;
- (void)disksAppeared:(id)arg1;
- (id)createContainingSparseBundleSystemForPath:(id)arg1;
- (void)addArchiveAndInstallSystems:(id)arg1;
- (int)addSystemsFromTMDataVolume:(id)arg1 andRemoteDiskID:(id)arg2 andDADiskID:(id)arg3;
- (id)addSystemsFromTMSparseBundles:(id)arg1 onVolume:(id)arg2 andRemoteDiskID:(id)arg3 andDADiskID:(id)arg4;
- (id)timeCapsuleParentOfMountPoint:(id)arg1;
- (void)scanDisk:(id)arg1;
- (BOOL)mountDiskIfNeeded:(id)arg1;
- (void)removeAllSystemsFromList:(id)arg1 onQueue:(id)arg2;
- (void)notifyListenersOfImmediateRemovals:(id)arg1;
- (void)stopScanning;
- (void)startScanning;
- (void)changeScanningStateFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;
- (void)startScannersFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;
- (void)stopScannersFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;
- (void)timeCapsuleBrowserThread;
- (void)autoLoaderBrowserThread;
- (id)matchSMSystem:(id)arg1;
- (id)findSystemByURL:(id)arg1;
- (id)findSystemByLongTermIdentifier:(id)arg1;
- (id)findSystemByIdentifier:(id)arg1;
- (void)removeSystem:(id)arg1 lockQueue:(BOOL)arg2;
- (void)removeSystem:(id)arg1;
- (BOOL)addNewSystem:(id)arg1 replaceIfKnown:(BOOL)arg2;
- (void)addNewSystem:(id)arg1;
- (void)systemAppeared:(id)arg1;
@property(readonly) NSSet *allSystems;
- (id)listAndQueueForSystem:(id)arg1;
- (id)systemListsAndQueues;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

