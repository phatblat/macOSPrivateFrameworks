//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <SystemMigration/SMSystem_Daemon.h>

@class NSMutableSet, NSObject<OS_dispatch_queue>, NSString;

@interface SMSystem_Daemon_RemoteTMDiskShare : SMSystem_Daemon
{
    NSString *shareName;
    NSString *humanName;
    long long sharedSystems;
    long long dmgsProcessed;
    unsigned long long flags;
    NSMutableSet *timeMachineSystems;
    NSObject<OS_dispatch_queue> *timeMachineSystemsQueue;
    NSString *_mountPoint;
}

+ (id)keyPathsForValuesAffectingDisplayState;
+ (id)keyPathsForValuesAffectingVolumeName;
+ (id)keyPathsForValuesAffectingAvailableActionLabel;
+ (id)keyPathsForValuesAffectingAvailableAction;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (unsigned long long)requiredScannerState;
@property(retain) NSString *mountPoint; // @synthesize mountPoint=_mountPoint;
@property(retain) NSObject<OS_dispatch_queue> *timeMachineSystemsQueue; // @synthesize timeMachineSystemsQueue;
@property(retain) NSMutableSet *timeMachineSystems; // @synthesize timeMachineSystems;
@property unsigned long long flags; // @synthesize flags;
@property long long dmgsProcessed; // @synthesize dmgsProcessed;
@property long long sharedSystems; // @synthesize sharedSystems;
@property(retain) NSString *humanName; // @synthesize humanName;
@property(retain) NSString *shareName; // @synthesize shareName;
- (void).cxx_destruct;
- (id)description;
- (id)accessibilityDescription;
@property(readonly) BOOL mountWithSMB;
@property(readonly) BOOL mountedFromServer;
@property(readonly) BOOL requiresUsername;
@property(readonly) BOOL usesSinglePassword;
@property(readonly) BOOL usesGuestAccess;
- (void)unRegisterTimeMachineSystem:(id)arg1;
- (void)registerTimeMachineSystem:(id)arg1;
- (void)searchForBackupsAtMountpoint:(id)arg1;
- (BOOL)mount:(BOOL)arg1;
- (BOOL)mountNetAuth:(BOOL)arg1;
- (void)unmount;
- (void)mount;
- (BOOL)isMountableByUser;
- (BOOL)isMounting;
- (BOOL)isMounted;
- (id)volumeIcon;
- (id)modelIcon;
- (id)volumeName;
- (id)childSystems;
- (BOOL)selectableSystem;
- (BOOL)availableAction;
- (id)displayName;
- (BOOL)isInternal;
- (id)systemVersion;
- (id)systemName;
- (unsigned long long)systemType;
- (id)UUID;
- (void)invalidate;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 humanName:(id)arg2 flags:(unsigned long long)arg3;

@end

