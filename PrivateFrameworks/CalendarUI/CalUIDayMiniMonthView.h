//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "CalUIAXMiniMonthProxyDelegate.h"

@class CalUIAXMiniMonthProxy, CalUIMiniMonthViewFormatter, NSArray, NSButton, NSCalendar, NSDate, NSMutableArray, NSString, NSTextField, NSTrackingArea;

@interface CalUIDayMiniMonthView : NSView <CalUIAXMiniMonthProxyDelegate>
{
    NSDate *_date;
    NSDate *_month;
    NSTrackingArea *_trackingArea;
    BOOL _supportsScrubbing;
    BOOL _supportsHovering;
    id <CalUIMiniMonthViewDelegate> _delegate;
    CalUIMiniMonthViewFormatter *_formatter;
    CalUIAXMiniMonthProxy *_axMiniMonthProxy;
    NSMutableArray *_thisMonthsDayCells;
    NSMutableArray *_allDayCells;
    NSDate *_nextMonth;
    NSTextField *_monthNameField;
    NSButton *_previousMonthButton;
    NSButton *_nextMonthButton;
    unsigned long long _daysInWeek;
    unsigned long long _firstDayOfWeek;
    NSCalendar *_calendar;
    long long _widthPerDay;
    NSArray *_weekDayTitles;
}

+ (id)interestedDragTypes;
@property(retain) NSArray *weekDayTitles; // @synthesize weekDayTitles=_weekDayTitles;
@property long long widthPerDay; // @synthesize widthPerDay=_widthPerDay;
@property(retain) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property unsigned long long firstDayOfWeek; // @synthesize firstDayOfWeek=_firstDayOfWeek;
@property unsigned long long daysInWeek; // @synthesize daysInWeek=_daysInWeek;
@property(retain) NSButton *nextMonthButton; // @synthesize nextMonthButton=_nextMonthButton;
@property(retain) NSButton *previousMonthButton; // @synthesize previousMonthButton=_previousMonthButton;
@property(retain) NSTextField *monthNameField; // @synthesize monthNameField=_monthNameField;
@property(retain) NSDate *nextMonth; // @synthesize nextMonth=_nextMonth;
@property(retain) NSMutableArray *allDayCells; // @synthesize allDayCells=_allDayCells;
@property(retain) NSMutableArray *thisMonthsDayCells; // @synthesize thisMonthsDayCells=_thisMonthsDayCells;
@property(retain) CalUIAXMiniMonthProxy *axMiniMonthProxy; // @synthesize axMiniMonthProxy=_axMiniMonthProxy;
@property BOOL supportsHovering; // @synthesize supportsHovering=_supportsHovering;
@property BOOL supportsScrubbing; // @synthesize supportsScrubbing=_supportsScrubbing;
@property(retain) CalUIMiniMonthViewFormatter *formatter; // @synthesize formatter=_formatter;
@property __weak id <CalUIMiniMonthViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) NSDate *month; // @synthesize month=_month;
- (void).cxx_destruct;
- (id)axColumnCount;
- (id)axRowCount;
- (struct CGRect)axFrame;
- (id)axSize;
- (id)axFirstDate;
- (id)axSelectedChildren;
- (id)axChildren;
- (struct CGRect)effectiveFrame;
- (void)_updateWeekDayTitles;
- (void)_updateConstants;
- (void)_updateGeometry;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)selectDayCell:(id)arg1;
- (unsigned long long)numberOfRows;
- (unsigned long long)minimumNumberOfRowsNeededForInMonthDays;
- (double)_xOffsetForColumn:(long long)arg1;
- (double)_yOffsetForRow:(long long)arg1 totalRows:(long long)arg2 totalHeight:(double)arg3;
- (double)_bottomInsetForTotalRows:(long long)arg1 totalHeight:(double)arg2;
- (double)_heightForRow:(long long)arg1 totalRows:(long long)arg2 totalHeight:(double)arg3;
- (double)_widthForColumn:(long long)arg1;
- (id)_miniMonthDayCellForDate:(id)arg1 isActive:(BOOL)arg2 isPrevMonth:(BOOL)arg3 isNextMonth:(BOOL)arg4;
- (void)_updateAttributesForDayCell:(id)arg1 isPrevNextMonth:(BOOL)arg2;
- (id)_attributedWeekNumberStringForDate:(id)arg1;
- (id)_attributedMonthStringShortened:(BOOL)arg1;
- (unsigned long long)_weekRowForDayCell:(id)arg1;
- (unsigned long long)_columnForDayCell:(id)arg1;
- (unsigned long long)_weekRowForDayNumber:(long long)arg1 firstWeekdayOfMonth:(long long)arg2 firstDayOfWeek:(long long)arg3 daysInAWeek:(unsigned long long)arg4;
@property(retain) NSDate *date;
- (void)drawRect:(struct CGRect)arg1;
- (void)layout;
- (void)configureDayCells;
- (void)updateWithDate:(id)arg1 force:(BOOL)arg2;
- (void)updateWithDate:(id)arg1;
- (void)backOneMonthAndNotify:(BOOL)arg1;
- (void)backOneMonth;
- (void)forwardOneMonthAndNotify:(BOOL)arg1;
- (void)forwardOneMonth;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (id)_eventFromDragSource:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)effectiveAppearance;
- (BOOL)allowsVibrancy;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 formatter:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

