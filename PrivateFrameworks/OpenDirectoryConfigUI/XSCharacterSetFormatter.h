//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSFormatter.h"

@class NSCharacterSet, NSString;

__attribute__((visibility("hidden")))
@interface XSCharacterSetFormatter : NSFormatter
{
    NSCharacterSet *_validCharacters;
    unsigned long long _maxLength;
    unsigned long long _minLength;
    BOOL _lengthIsLimitedByBytes;
    NSString *_charactersInCustomSet;
    BOOL _allowsNilValue;
    BOOL _allowsEmptyString;
}

+ (id)formatterWithAllowedCharacters:(id)arg1 minimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3;
+ (id)formatterWithAllowedCharacters:(id)arg1 maximumLength:(unsigned long long)arg2;
+ (id)formatterWithAllowedCharacters:(id)arg1;
+ (id)formatter;
@property BOOL allowsNilValue; // @synthesize allowsNilValue=_allowsNilValue;
@property BOOL allowsEmptyString; // @synthesize allowsEmptyString=_allowsEmptyString;
@property BOOL lengthIsLimitedByBytes; // @synthesize lengthIsLimitedByBytes=_lengthIsLimitedByBytes;
@property unsigned long long minimumLength; // @synthesize minimumLength=_minLength;
@property unsigned long long maximumLength; // @synthesize maximumLength=_maxLength;
@property(copy) NSCharacterSet *allowedCharacters; // @synthesize allowedCharacters=_validCharacters;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (BOOL)isPartialStringValid:(id)arg1 newEditingString:(id *)arg2 errorDescription:(id *)arg3;
- (BOOL)_stringIsValid:(id)arg1;
- (void)setCharactersInCustomSet:(id)arg1;
- (id)charactersInCustomSet;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAllowedCharacters:(id)arg1 minimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3;
- (id)initWithAllowedCharacters:(id)arg1 maximumLength:(unsigned long long)arg2;
- (id)initWithAllowedCharacters:(id)arg1;
- (id)init;
@property(copy) NSString *allowedCharactersString;

@end

