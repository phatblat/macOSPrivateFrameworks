//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class NSMutableDictionary, NSURL;

@interface BKAssetMetadata : NSObject <NSCopying>
{
    struct os_unfair_lock_s _lock;
    NSMutableDictionary *_backingDictionary;
    long long _assetType;
    NSURL *_backingURL;
}

+ (CDUnknownBlockType)_backingDictionaryComparator;
+ (id)_bookSubURLWithBaseURL:(id)arg1 filename:(id)arg2;
+ (id)sinfXMLURLWithBaseURL:(id)arg1;
+ (id)iTunesArtworkBackupURLWithBaseURL:(id)arg1;
+ (id)iTunesArtworkURLWithBaseURL:(id)arg1;
+ (id)iTunesMetadataBackupURLWithBaseURL:(id)arg1;
+ (id)iTunesMetadataURLWithBaseURL:(id)arg1;
+ (BOOL)isBookURL:(id)arg1;
+ (BOOL)isAudiobookTrack:(long long)arg1;
+ (id)deserializedMetadataFromDictionary:(id)arg1 error:(id *)arg2;
+ (id)identityMetadataWithDictionary:(id)arg1 error:(id *)arg2;
+ (id)identityMetadataWithStoreID:(id)arg1 generatedID:(id)arg2 url:(id)arg3 error:(id *)arg4;
+ (id)updatesMetadataWithDictionary:(id)arg1 error:(id *)arg2;
+ (id)metadataWithURL:(id)arg1 dictionary:(id)arg2;
+ (BOOL)identityOfDictionary:(id)arg1 matchesDictionary:(id)arg2 key:(id)arg3;
+ (id)sinfPropertiesWithPurchaserID:(id)arg1 downloaderID:(id)arg2 familyID:(id)arg3;
+ (void)_propagateAggregatePart:(id)arg1 toAggregate:(id)arg2;
+ (id)assetIDsForAssets:(id)arg1;
+ (id)dictionaryRepresentation:(id)arg1 combinedWithExtraMetadataByPath:(id)arg2;
+ (id)dictionaryRepresentations:(id)arg1 combinedWithExtraMetadataByPath:(id)arg2;
+ (id)dictionaryRepresentationsForAssets:(id)arg1 flavor:(long long)arg2;
+ (id)bookTypeForAssetType:(long long)arg1;
+ (id)bookTypeForAssetAtURL:(id)arg1;
+ (long long)assetTypeForFileExtension:(id)arg1;
+ (long long)assetTypeForAssetAtURL:(id)arg1;
@property(retain, nonatomic) NSURL *backingURL; // @synthesize backingURL=_backingURL;
@property(nonatomic) long long assetType; // @synthesize assetType=_assetType;
@property(retain, nonatomic) NSMutableDictionary *backingDictionary; // @synthesize backingDictionary=_backingDictionary;
- (void).cxx_destruct;
- (id)rating;
- (id)purchaseDate;
- (id)lastOpenDate;
- (id)year;
- (id)bookDescription;
- (id)comments;
- (id)sortAuthor;
- (id)author;
- (id)sortTitle;
- (id)title;
- (id)accountID;
- (long long)discNumber;
- (id)duration;
- (id)trackTitle;
- (long long)trackNumber;
- (id)uploadError;
- (BOOL)isInDirectory:(id)arg1;
- (id)sinfXMLURL;
- (id)iTunesArtworkBackupURL;
- (id)iTunesArtworkURL;
- (id)iTunesMetadataBackupURL;
- (id)iTunesMetadataURL;
- (id)description;
- (id)identityRepresentation;
- (id)progressRepresentation;
- (id)contentLibraryRepresentation;
- (id)iTunesMetadataRepresentation;
- (id)completeExceptPartsRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)_hasAllocatedSize;
- (id)bookmarkTimeUpdateDate;
- (double)bookmarkTime;
- (unsigned long long)aggregatePartCount;
- (id)aggregatePartMatching:(id)arg1;
- (id)aggregatePartAtIndex:(unsigned long long)arg1;
- (BOOL)hasFamilyID;
- (id)familyIDTuple;
- (id)coverImageDataReplaced;
- (id)coverImageData;
- (id)mimeType;
- (id)coverImagePath;
- (id)downloadInfo;
- (double)percentComplete;
- (unsigned long long)allocatedSize;
- (id)packageHash;
- (id)assetDescription;
- (id)genre;
- (id)insertionDate;
- (id)releaseDate;
- (id)modificationDate;
- (id)updateDate;
- (unsigned long long)pageCount;
- (id)desktopSupportLevel;
- (BOOL)shouldDisableTouchEmulation;
- (BOOL)shouldDisableOptimizeSpeed;
- (id)versionNumber;
- (id)itemName;
- (id)artistName;
- (id)storeID;
- (id)permlink;
- (BOOL)isExplicit;
- (BOOL)isLocked;
- (BOOL)wasRedacted;
- (BOOL)hasPendingUpdates;
- (BOOL)isPreview;
- (unsigned long long)generationCount;
- (id)producer;
- (id)format;
- (id)displayName;
- (id)generatedID;
- (id)trashedURL;
- (id)previousURL;
- (id)sourceURL;
- (id)normalizedFilename;
- (id)aggregatePartIdentifierPrefix;
- (id)aggregateIdentifier;
- (id)aggregateAssetURL;
- (BOOL)isAggregatePart;
- (BOOL)isAggregate;
- (BOOL)isAudiobookTrack;
- (BOOL)isAudiobook;
- (BOOL)containsAssetExceptBookmarkTime:(id)arg1;
- (BOOL)containsAsset:(id)arg1;
- (id)isCompressedBookWithError:(id *)arg1;
- (BOOL)isUbiquitous;
- (BOOL)isBook;
- (BOOL)isRMT;
- (BOOL)isEPub;
- (BOOL)isApplePub;
- (BOOL)isPDF;
- (id)assetID;
- (id)bookType;
- (id)url;
- (id)itemPath;
- (unsigned long long)hash;
- (BOOL)shouldUpdateXattrMetadata;
- (BOOL)hasMatchingIdentity:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithUpdates:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURL:(id)arg1 dictionary:(id)arg2 validate:(BOOL)arg3;
- (id)dictionaryRepresentationWithFlavor:(long long)arg1;
- (id)removeAggregatePart:(id)arg1;
- (unsigned long long)_indexOfAggregatePartMatching:(id)arg1;
- (id)addToExistingAggregate:(id)arg1;
- (id)copyWithUpdatedURL:(id)arg1;
- (void)unlock;
- (void)lock;

@end

