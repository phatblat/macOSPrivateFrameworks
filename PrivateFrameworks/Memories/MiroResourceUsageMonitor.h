//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>;

__attribute__((visibility("hidden")))
@interface MiroResourceUsageMonitor : NSObject
{
    struct rusage __rusageStart;
    double __timeStart;
    long long __initialResidentMemoryBytes;
    long long __initialPeakResidentMemoryBytes;
    long long __maxResidentMemoryBytes;
    NSObject<OS_dispatch_source> *__pollingTimer;
    BOOL __isRunning;
    NSObject<OS_dispatch_queue> *__isolationQueue;
    double __processorUsage;
    long long __memoryUsage;
    long long __peakMemoryUsage;
    long long __initialResidentMemoryKBytes;
    long long __initialPeakResidentMemoryKBytes;
    long long __maxResidentMemoryKBytes;
}

+ (long long)_getResidentMemoryKBytes:(long long *)arg1;
+ (id)sharedResourceUsageMonitor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *_isolationQueue; // @synthesize _isolationQueue=__isolationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *_pollingTimer; // @synthesize _pollingTimer=__pollingTimer;
@property(nonatomic) long long _maxResidentMemoryKBytes; // @synthesize _maxResidentMemoryKBytes=__maxResidentMemoryKBytes;
@property(nonatomic) long long _initialPeakResidentMemoryKBytes; // @synthesize _initialPeakResidentMemoryKBytes=__initialPeakResidentMemoryKBytes;
@property(nonatomic) long long _initialResidentMemoryKBytes; // @synthesize _initialResidentMemoryKBytes=__initialResidentMemoryKBytes;
@property(nonatomic) double _timeStart; // @synthesize _timeStart=__timeStart;
@property(nonatomic) struct rusage _rusageStart; // @synthesize _rusageStart=__rusageStart;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long memoryUsage;
@property(readonly, nonatomic) double processorUsage;
- (BOOL)isRunning;
- (BOOL)stop;
- (BOOL)start;
- (void)_inqueue_stop;
- (void)_inqueue_start;
- (id)description;
- (void)dealloc;
- (id)init;

@end

