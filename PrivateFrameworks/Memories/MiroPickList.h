//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class NSArray, NSDictionary, NSSet;

__attribute__((visibility("hidden")))
@interface MiroPickList : NSObject <NSCopying>
{
    NSArray *_sourceAssets;
    BOOL _prioritizeCuratedSetAssets;
    BOOL _skipDistanceCalculation;
    BOOL _penalizeNonLocalAssets;
    BOOL _calculatingPickOrder;
    NSSet *_requiredAssetIDs;
    NSSet *_disallowedAssetIDs;
    NSSet *_photosCuratedAssetIDs;
    NSDictionary *_freezeRanges;
    NSDictionary *_specialInfo;
    NSArray *_sourceOrder;
    NSArray *_pickOrder;
    NSArray *_splitOrder;
    NSArray *_scoreOrder;
    NSArray *_dateOrder;
    NSArray *_adjustedPickOrder;
    NSArray *_frozenSourceAssets;
    NSArray *_frozenSourceOrder;
    NSArray *_frozenAdjustedPickOrder;
}

@property(nonatomic) BOOL calculatingPickOrder; // @synthesize calculatingPickOrder=_calculatingPickOrder;
@property(retain, nonatomic) NSArray *frozenAdjustedPickOrder; // @synthesize frozenAdjustedPickOrder=_frozenAdjustedPickOrder;
@property(retain, nonatomic) NSArray *frozenSourceOrder; // @synthesize frozenSourceOrder=_frozenSourceOrder;
@property(retain, nonatomic) NSArray *frozenSourceAssets; // @synthesize frozenSourceAssets=_frozenSourceAssets;
@property(retain, nonatomic) NSArray *adjustedPickOrder; // @synthesize adjustedPickOrder=_adjustedPickOrder;
@property(retain, nonatomic) NSArray *dateOrder; // @synthesize dateOrder=_dateOrder;
@property(retain, nonatomic) NSArray *scoreOrder; // @synthesize scoreOrder=_scoreOrder;
@property(retain, nonatomic) NSArray *splitOrder; // @synthesize splitOrder=_splitOrder;
@property(retain, nonatomic) NSArray *pickOrder; // @synthesize pickOrder=_pickOrder;
@property(retain, nonatomic) NSArray *sourceOrder; // @synthesize sourceOrder=_sourceOrder;
@property(nonatomic) BOOL penalizeNonLocalAssets; // @synthesize penalizeNonLocalAssets=_penalizeNonLocalAssets;
@property(nonatomic) BOOL skipDistanceCalculation; // @synthesize skipDistanceCalculation=_skipDistanceCalculation;
@property(copy, nonatomic) NSDictionary *specialInfo; // @synthesize specialInfo=_specialInfo;
@property(nonatomic) BOOL prioritizeCuratedSetAssets; // @synthesize prioritizeCuratedSetAssets=_prioritizeCuratedSetAssets;
@property(retain, nonatomic) NSDictionary *freezeRanges; // @synthesize freezeRanges=_freezeRanges;
@property(retain, nonatomic) NSSet *photosCuratedAssetIDs; // @synthesize photosCuratedAssetIDs=_photosCuratedAssetIDs;
@property(retain, nonatomic) NSSet *disallowedAssetIDs; // @synthesize disallowedAssetIDs=_disallowedAssetIDs;
@property(retain, nonatomic) NSSet *requiredAssetIDs; // @synthesize requiredAssetIDs=_requiredAssetIDs;
- (void).cxx_destruct;
- (void)updateAssetsWithSpecialInfo;
- (id)classifications;
- (id)people;
- (id)_pickInfosForAssetID:(id)arg1;
- (id)splitDistancesForAssetID:(id)arg1;
@property(readonly, nonatomic) BOOL isCompelling;
- (id)description;
- (id)scenesUpToCount:(long long)arg1 localOnly:(BOOL)arg2;
- (id)assetsUpToSceneCount:(long long)arg1;
@property(readonly, nonatomic) int countAtOrAboveBadT;
@property(readonly, nonatomic) int idealCount;
- (int)countAtTValue:(double)arg1;
- (double)_fractionOfPickInfo:(id)arg1 coveredByRanges:(id)arg2;
- (void)_assignTrimRangesIntelligentlyToPickInfos:(id)arg1;
- (void)_assignTrimRangesChronologicallyToPickInfos:(id)arg1;
- (id)_computeAdjustedPickOrder;
- (id)highestScoringItemToTheRightFromIndex:(long long)arg1;
- (id)highestScoringItemToTheLeftFromIndex:(long long)arg1;
- (id)highestScoringItemFromIndex:(long long)arg1 lookingRight:(BOOL)arg2;
- (id)pickOrderFromSourceOrder;
- (void)calculatePickListFromVPFrameworkResults;
- (id)sourceOrderFromSourceAssetsViaOldAPI;
- (id)sourceOrderFromSourceAssetsViaNewAPIStoppingAtCompelling:(char *)arg1;
- (id)sourceOrderFromSourceAssetsViaNewAPI;
- (id)sourceOrderFromSourceAssets;
- (id)rangesForAssets:(id)arg1;
- (id)expandVideoAssetsAndConvertToScenes:(id)arg1;
- (id)mediaAnalyzer;
- (void)calculateFullPickList;
@property(readonly, nonatomic) int freezeState;
- (void)_reset;
- (BOOL)calculateFreezeFromFrozenSourceAssets;
@property(retain, nonatomic) NSArray *sourceAssets;
- (id)photoLibrary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAssets:(id)arg1;

@end

