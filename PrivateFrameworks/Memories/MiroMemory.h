//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"

@class MiroBlueprint, MiroPickList, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSSet, NSString, NSURL, PHAsset, PHAssetCollection, PHFetchResult;

__attribute__((visibility("hidden")))
@interface MiroMemory : NSObject <NSCopying, NSSecureCoding>
{
    BOOL _hasBuildingPosterImageBegun;
    BOOL _storedPosterExists;
    BOOL _isPregenerating;
    MiroBlueprint *_blueprint;
    MiroBlueprint *_customBlueprint;
    NSURL *_localPersistentFile;
    long long _durationRange;
    double _customDuration;
    long long _savedMaxDurationRange;
    long long _schema;
    NSDate *_viewedDate;
    NSString *_localizedTitle;
    NSString *_localizedSubTitle;
    NSString *_keyAssetID;
    PHAsset *_keyAsset;
    PHAssetCollection *_assetCollection;
    NSArray *_posters;
    NSArray *_requestedKeywords;
    NSString *_requestedMoodID;
    NSDictionary *_requestedMusicGenreDistribution;
    NSString *_keywordedSongID;
    NSString *_initalKeyAssetIdentifier;
    NSSet *_manuallyAddedAssetIDs;
    NSSet *_manuallyRemovedAssetIDs;
    NSDictionary *_freezeRanges;
    NSSet *_suggestions;
    NSObject<OS_dispatch_queue> *_saveQueue;
    NSArray *_autoPickedAssetIDs;
    NSDictionary *_assetsRanges;
    MiroPickList *_pickList;
    long long _pickedItemCount;
    double _savedDuration;
    double _maximumPossibleMemoryDuration;
    double _duration;
    NSMutableDictionary *_blueprints;
    NSDictionary *_loadedFreezeRanges;
    NSArray *_featuredPeople;
    long long _allAssetCount;
    struct Buckets _buckets;
}

+ (id)grabTestKeywords;
+ (id)_displayableUuidWithUuid:(id)arg1;
+ (id)memoryWithPHAssetCollection:(id)arg1;
+ (id)_miroMoodIDForPHMemoryMood:(unsigned long long)arg1;
+ (id)memoryWithPHAssetCollection:(id)arg1 keyAsset:(id)arg2;
+ (id)_assetCollectionUniqueLocalIdentifier:(id)arg1;
+ (id)fileURLWithUuid:(id)arg1;
+ (id)_saveURL;
+ (BOOL)supportsSecureCoding;
+ (void)initialize;
@property(nonatomic) long long allAssetCount; // @synthesize allAssetCount=_allAssetCount;
@property(retain, nonatomic) NSArray *featuredPeople; // @synthesize featuredPeople=_featuredPeople;
@property(retain, nonatomic) NSDictionary *loadedFreezeRanges; // @synthesize loadedFreezeRanges=_loadedFreezeRanges;
@property(retain, nonatomic) NSMutableDictionary *blueprints; // @synthesize blueprints=_blueprints;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) struct Buckets buckets; // @synthesize buckets=_buckets;
@property(nonatomic) double maximumPossibleMemoryDuration; // @synthesize maximumPossibleMemoryDuration=_maximumPossibleMemoryDuration;
@property(nonatomic) double savedDuration; // @synthesize savedDuration=_savedDuration;
@property(nonatomic) long long pickedItemCount; // @synthesize pickedItemCount=_pickedItemCount;
@property(retain, nonatomic) MiroPickList *pickList; // @synthesize pickList=_pickList;
@property(retain, nonatomic) NSDictionary *assetsRanges; // @synthesize assetsRanges=_assetsRanges;
@property(retain, nonatomic) NSArray *autoPickedAssetIDs; // @synthesize autoPickedAssetIDs=_autoPickedAssetIDs;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *saveQueue; // @synthesize saveQueue=_saveQueue;
@property(retain, nonatomic) NSSet *suggestions; // @synthesize suggestions=_suggestions;
@property(retain, nonatomic) NSDictionary *freezeRanges; // @synthesize freezeRanges=_freezeRanges;
@property(retain, nonatomic) NSSet *manuallyRemovedAssetIDs; // @synthesize manuallyRemovedAssetIDs=_manuallyRemovedAssetIDs;
@property(retain, nonatomic) NSSet *manuallyAddedAssetIDs; // @synthesize manuallyAddedAssetIDs=_manuallyAddedAssetIDs;
@property(retain, nonatomic) NSString *initalKeyAssetIdentifier; // @synthesize initalKeyAssetIdentifier=_initalKeyAssetIdentifier;
@property(retain, nonatomic) NSString *keywordedSongID; // @synthesize keywordedSongID=_keywordedSongID;
@property(retain, nonatomic) NSDictionary *requestedMusicGenreDistribution; // @synthesize requestedMusicGenreDistribution=_requestedMusicGenreDistribution;
@property(retain, nonatomic) NSString *requestedMoodID; // @synthesize requestedMoodID=_requestedMoodID;
@property(retain, nonatomic) NSArray *requestedKeywords; // @synthesize requestedKeywords=_requestedKeywords;
@property(nonatomic) BOOL isPregenerating; // @synthesize isPregenerating=_isPregenerating;
@property(retain, nonatomic) NSArray *posters; // @synthesize posters=_posters;
@property(nonatomic) BOOL storedPosterExists; // @synthesize storedPosterExists=_storedPosterExists;
@property(nonatomic) BOOL hasBuildingPosterImageBegun; // @synthesize hasBuildingPosterImageBegun=_hasBuildingPosterImageBegun;
@property(retain, nonatomic) PHAssetCollection *assetCollection; // @synthesize assetCollection=_assetCollection;
@property(retain, nonatomic) PHAsset *keyAsset; // @synthesize keyAsset=_keyAsset;
@property(retain) NSString *keyAssetID; // @synthesize keyAssetID=_keyAssetID;
@property(retain) NSString *localizedSubTitle; // @synthesize localizedSubTitle=_localizedSubTitle;
@property(retain) NSString *localizedTitle; // @synthesize localizedTitle=_localizedTitle;
@property(retain, nonatomic) NSDate *viewedDate; // @synthesize viewedDate=_viewedDate;
@property(nonatomic) long long schema; // @synthesize schema=_schema;
@property(retain, nonatomic) NSURL *localPersistentFile; // @synthesize localPersistentFile=_localPersistentFile;
@property(retain, nonatomic) MiroBlueprint *customBlueprint; // @synthesize customBlueprint=_customBlueprint;
- (void).cxx_destruct;
- (id)trimRangesForAsset:(id)arg1;
- (id)featuredPersonsInMemoryAsFaceRangesInAsset:(id)arg1;
- (BOOL)memoryFeaturesPersonInAsset:(id)arg1;
- (BOOL)assetHasFaces:(id)arg1;
- (BOOL)memoryFeaturesPeople;
- (id)memoryClassificationKeys;
- (BOOL)memoryClassificationBased;
- (BOOL)memoryTypeDisablesCropping;
- (void)reportCollectionTypeForAggD:(BOOL)arg1;
- (id)pickedLocallyAvailableScenes;
- (id)pickedAssets;
- (BOOL)wasManuallyRemoved:(id)arg1;
- (BOOL)wasManuallyAdded:(id)arg1;
- (void)_updateAddedRemovedLists;
- (void)manuallyAdd:(id)arg1 remove:(id)arg2;
- (void)manuallyModify:(id)arg1 changeInSegmentCount:(long long)arg2;
@property(retain, nonatomic) NSString *displaySubtitle;
@property(retain, nonatomic) NSString *displayName;
- (void)adornIrisUsableToAssets:(id)arg1;
- (id)allAssetsAsArray;
@property(readonly, nonatomic) PHFetchResult *allAssets;
- (id)allAssetsIncludingAllMomentsAssets:(BOOL)arg1;
- (id)_newBlueprintWithMoodID:(id)arg1;
- (id)blueprintForMoodID:(id)arg1;
@property(retain, nonatomic) NSString *moodID;
@property(readonly, nonatomic) NSArray *moodIDs;
@property(retain, nonatomic) MiroBlueprint *blueprint; // @synthesize blueprint=_blueprint;
- (void)clearFreezeDataForPregenerate;
@property(readonly, nonatomic) double minimumPossibleMemoryDuration;
@property(readonly, nonatomic) long long maxDurationRange; // @synthesize maxDurationRange=_savedMaxDurationRange;
@property(nonatomic) long long durationRange; // @synthesize durationRange=_durationRange;
- (long long)rawDurationRange;
- (void)invalidateDuration;
- (void)invalidateCustomDuration;
@property(nonatomic) double customDuration; // @synthesize customDuration=_customDuration;
- (double)titleCardDuration;
@property(readonly, nonatomic) BOOL needsTitleCard;
- (id)currentVideoFreezeRangeForAssetID:(id)arg1 index:(int)arg2;
- (id)freezeRangesToEncode;
- (void)addSuggestionForAssetID:(id)arg1 freezeInfo:(id)arg2 assets:(id)arg3;
- (void)setRanges:(id)arg1 replaceType:(unsigned long long)arg2 forAssetID:(id)arg3;
- (id)rangesWithType:(unsigned long long)arg1 forAssetID:(id)arg2;
- (void)_initAllAssetMetadata;
- (void)_persistentRangesChanged:(id)arg1;
- (id)dataRepresentation;
- (id)initWithData:(id)arg1;
- (BOOL)isPersistable;
- (BOOL)isPending;
- (void)unPersist;
- (void)persistWithoutFreeze;
- (void)persist;
- (void)_writeMetadata:(id)arg1;
- (void)_deleteMetadata;
- (void)_saveMetadata;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)init;

@end

