//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Install/IFDocument.h>

#import "NSXMLParserDelegate.h"

@class IFCertificateIdentity, NSArray, NSBundle, NSError, NSNumber, NSPredicate, NSString, NSURL;

@interface IFDistXMLDocument : IFDocument <NSXMLParserDelegate>
{
    NSString *_containerPath;
    NSURL *_baseURL;
    NSBundle *_bundle;
    NSArray *_installableCheckResults;
    BOOL _documentReadAndValidationHaveBeenPerformed;
    BOOL _validationResult;
    NSError *_validationError;
    struct DistXMLResources *_resourceData;
    struct DistXMLParserData *_parserData;
    struct DistXMLJSRuntime *_javaRuntimeData;
    BOOL _abortParsing;
    BOOL _forSoftwareUpdate;
    BOOL _disallowInsecureOverride;
    NSString *_activeLangISO;
    NSArray *_supportedOSVersions;
    NSArray *_requiredBundles;
    BOOL _requireAllBundles;
    NSString *_descriptionOfRequiredBundles;
    NSNumber *_requiredGigaBytesOfRAM;
    NSPredicate *_requiredGLRenderer;
    NSPredicate *_requiredCLDevice;
    NSPredicate *_requiredMetalDevice;
    NSString *_descriptionOfGraphicsHardware;
    BOOL _singleGraphicsDevice;
    NSString *_requiredHardwareProperties;
    NSString *_descriptionOfHardwareProperties;
    IFCertificateIdentity *_certificateIdentity;
    int _minTrustLevel;
    int _evaluatedTrustLevel;
    NSArray *_certificateChain;
    struct __SecTrust *_trustRef;
    NSString *_pluginPath;
    NSString *_scriptsPaths;
}

+ (int)_errorCodeForTypeString:(id)arg1;
+ (id)_arrayOfSafeSubPathsToIgnoreAtPath:(id)arg1;
- (BOOL)isBackgroundImageResourceName:(id)arg1;
- (id)preinstallActions;
- (id)postinstallActions;
- (id)packagesForLocation:(id)arg1 fromSet:(id)arg2;
- (id)objectForOptionNamed:(id)arg1;
- (BOOL)getData:(id *)arg1 andMIMEType:(id *)arg2 forResourceNamed:(id)arg3 forLanguage:(id)arg4 error:(id *)arg5;
- (id)getPathWithFallbackLoc:(id)arg1 forFile:(id)arg2;
- (id)installerSectionPaths;
- (id)installerSectionOrder;
- (BOOL)canLoadResourceNamed:(id)arg1;
- (BOOL)containsResourceNamed:(id)arg1;
- (id)languagesAvailableForResource:(id)arg1;
- (id)installableCheckResults;
- (BOOL)readAndValidateDocumentReturningError:(id *)arg1;
- (BOOL)hasInsecureChecks;
- (id)title;
- (id)versionString;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1 forSoftwareUpdate:(BOOL)arg2 returningError:(id *)arg3;
- (id)initWithPath:(id)arg1 forSoftwareUpdate:(BOOL)arg2;
- (id)initWithPath:(id)arg1 returningError:(id *)arg2;
- (id)initWithPath:(id)arg1;
- (id)initWithContainer:(id)arg1 andScripts:(id)arg2 andCertificateIdentity:(id)arg3 forSoftwareUpdate:(BOOL)arg4 returningError:(id *)arg5;
- (id)initWithContainer:(id)arg1 andScripts:(id)arg2 forSoftwareUpdate:(BOOL)arg3 returningError:(id *)arg4;
- (id)initWithContainer:(id)arg1 andScripts:(id)arg2 forSoftwareUpdate:(BOOL)arg3;
- (id)initWithContainer:(id)arg1 andScripts:(id)arg2;
- (BOOL)_parseRequiredBundlesElement:(id)arg1;
- (BOOL)_parseAllowedOSVersionsElement:(id)arg1;
- (BOOL)_parseLocatorElement:(id)arg1;
- (BOOL)_validatePackageRefsInDistribution;
- (BOOL)_isBetterLanguage:(id)arg1 forResource:(id)arg2;
- (void)_setLocatorDefinitionsInPackages;
- (id)_searchForLocalizedStringForKey:(id)arg1;
- (void)_localizeChoiceAttributes;
- (BOOL)_setupAndParseScripts:(id)arg1;
- (void)_addPackagesForLocation:(id)arg1 fromSet:(id)arg2 toUniqueSet:(id)arg3 toArray:(id)arg4 withChoice:(id)arg5;
- (id)_packageForIdentifier:(id)arg1 andVersion:(id)arg2 stopParsing:(char *)arg3;
- (id)softwareUpdateChoiceID;
- (int)trustLevelReturningTrustRef:(struct __SecTrust **)arg1;
- (int)trustLevelReturningCertificateChain:(id *)arg1;
- (BOOL)evaluateTrust;
- (id)_allPkgRefsForChoice:(id)arg1;
- (id)_allPkgRefIdentifiersForChoice:(id)arg1;
- (void)setMinimumRequiredTrustLevel:(int)arg1;
- (int)minimumRequiredTrustLevel;
- (id)localizedStringForKey:(id)arg1;
- (BOOL)containsChoicesWhichCanChooseSubFolder;
- (id)certificateIdentity;
- (BOOL)isForSoftwareUpdate;
- (BOOL)isFNI;
- (BOOL)installsOperatingSystem;
- (id)_distributionScriptsPath;
- (id)_embeddedArchivePluginsPath;
- (BOOL)_readEmbeddedLocalizableStringsFile;
- (id)_localizedResourceInArchiveNamed:(id)arg1 withLocalization:(id)arg2;
- (id)_findBestResourceInArchiveNamed:(id)arg1 withPreferredLocalization:(id)arg2;
- (id)_localizationsForResourceInArchiveNamed:(id)arg1;
- (void)setAllowInsecureOverride:(BOOL)arg1;
- (id)defaultSubFolder;
- (BOOL)canChooseSubFolder;
- (id)searchDefinitions;
- (id)errorForPackage:(id)arg1 onTarget:(id)arg2 withCustomizationController:(id)arg3;
- (id)_errorForAction:(id)arg1 results:(id)arg2;
- (BOOL)_performHardwarePropertiesCheckStoringResultsIn:(id)arg1;
- (BOOL)_performGraphicsCheckStoringResultsIn:(id)arg1;
- (BOOL)_performRAMCheckStoringResultsIn:(id)arg1;
- (id)_currentArchitectureString;
- (BOOL)_performRequiredBundleCheckWithPath:(id)arg1 storingResultsIn:(id)arg2;
- (BOOL)_performOSVersionCheckWithPath:(id)arg1 storingResultsIn:(id)arg2;
- (int)enabledInstallDomains;
- (int)availableInstallDomains;
- (BOOL)isDomainInstall;
- (id)copyChoiceTreeWithScripts:(id *)arg1 andChoiceList:(id *)arg2 forTarget:(id)arg3;
- (id)scripts;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

