//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <AVConference/VCVideoCapture.h>

#import "VideoCaptureProtocol.h"

@class NSObject<OS_dispatch_queue>;

__attribute__((visibility("hidden")))
@interface VCMacScreenCapture : VCVideoCapture <VideoCaptureProtocol>
{
    struct _opaque_pthread_mutex_t _screenCaptureLock;
    NSObject<OS_dispatch_queue> *_streamQueue;
    BOOL _isPreviewing;
    BOOL _isCapturing;
    int _captureWidth;
    int _captureHeight;
    int _captureFramerate;
    unsigned long long _lastOriginHIDEventTimestamp;
    struct opaqueCMSampleBuffer *_previousCompleteFrame;
    struct CGDisplayStream *_displayStream;
    struct OpaqueCMMemoryPool *_dirtyRectsMemoryPool;
    struct __CFAllocator *_dirtyRectsArrayAllocator;
}

@property(retain) struct opaqueCMSampleBuffer *previousCompleteFrame;
- (int)frameBecameAvailableCount:(int *)arg1 figBufferQueueEmptyCount:(int *)arg2 figBufferQueueErrorCount:(int *)arg3;
- (BOOL)cameraSupportsFormatWidth:(int)arg1 height:(int)arg2;
- (BOOL)isFrontCamera;
- (int)setFrameRate:(int)arg1;
- (id)getCameraUID;
- (int)setCameraWithUID:(id)arg1;
- (int)getPreviewFrameCount:(int *)arg1 captureFrameCount:(int *)arg2 reset:(BOOL)arg3;
- (BOOL)isPreviewRunning;
- (int)copyColorInfo:(const struct __CFDictionary **)arg1;
- (int)setWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3;
- (int)stop:(BOOL)arg1;
- (int)startCaptureWithWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3;
- (int)startPreview;
- (int)_startCapture;
- (void)dealloc;
- (struct __CFArray *)newDirtyRectsWithUpdateRef:(struct CGDisplayStreamUpdate *)arg1;
- (void)setOriginHIDEventTimestamp:(unsigned long long)arg1 onBuffer:(struct __CVBuffer *)arg2;
- (id)initWithCaptureServer:(id)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4 screenDisplayID:(unsigned int)arg5 withError:(int *)arg6;
- (id)initWithCaptureServer:(id)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4 withError:(int *)arg5;

@end

