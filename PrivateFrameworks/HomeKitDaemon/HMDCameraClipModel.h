//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "HMBModel.h"

@class HMBStreamingAsset, NSArray, NSData, NSDate, NSNumber, NSString;

@interface HMDCameraClipModel : HMBModel
{
}

+ (id)countOfClipsBetweenDatesQuery;
+ (id)countOfClipsBeforeDateQuery;
+ (id)countOfClipsAfterDateQuery;
+ (id)countOfClipsQuery;
+ (id)clipsBetweenDatesQuery;
+ (id)clipsAfterDateQuery;
+ (id)clipsBeforeDateQuery;
+ (id)incompleteClipsQuery;
+ (id)sentinelParentUUID;
+ (void)load;
+ (id)hmbQueries;
+ (id)hmbExternalRecordType;
+ (id)hmbProperties;
- (id)createClipWithSignificantEvents:(id)arg1;
- (id)createClip;

// Remaining properties
@property(retain, nonatomic) NSNumber *duration; // @dynamic duration;
@property(retain, nonatomic) NSData *encryptionKey; // @dynamic encryptionKey;
@property(retain, nonatomic) NSNumber *encryptionScheme; // @dynamic encryptionScheme;
@property(retain, nonatomic) NSNumber *isComplete; // @dynamic isComplete;
@property(retain, nonatomic) NSNumber *maximumClipDuration; // @dynamic maximumClipDuration;
@property(retain, nonatomic) NSArray *posterFramesMetadata; // @dynamic posterFramesMetadata;
@property(retain, nonatomic) NSArray *posterFramesMetadataArray; // @dynamic posterFramesMetadataArray;
@property(retain, nonatomic) HMBStreamingAsset *posterFramesStreamingAsset; // @dynamic posterFramesStreamingAsset;
@property(retain, nonatomic) NSNumber *recordedLocally; // @dynamic recordedLocally;
@property(retain, nonatomic) NSDate *startDate; // @dynamic startDate;
@property(retain, nonatomic) NSString *streamingAssetVersion; // @dynamic streamingAssetVersion;
@property(retain, nonatomic) NSNumber *targetFragmentDuration; // @dynamic targetFragmentDuration;
@property(retain, nonatomic) NSArray *videoMetadata; // @dynamic videoMetadata;
@property(retain, nonatomic) NSArray *videoMetadataArray; // @dynamic videoMetadataArray;
@property(retain, nonatomic) HMBStreamingAsset *videoStreamingAsset; // @dynamic videoStreamingAsset;

@end

