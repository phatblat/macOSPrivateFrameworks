//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDictionary, NSNumber, NSString, NSURL;

@interface TMDisk : NSObject
{
    NSURL *_mountPointURL;
    struct __DADisk *_diskRef;
    short _volumeRefNum;
    struct statfs _stfs;
    NSDictionary *_diskArbDescription;
    unsigned long long _knownTraits;
    unsigned long long _traits;
    NSString *_volumeUUID;
    long long _lastSnapshotXIDSum;
    long long _lastSnapshotCount;
    long long _lastSnapshotDatalessCount;
}

+ (void)enumerateMountedDisksUsingBlock:(CDUnknownBlockType)arg1;
+ (id)diskForMountPoint:(id)arg1 error:(id *)arg2;
+ (id)diskForMountPoint:(id)arg1;
+ (id)dataDiskForVolumeGroupUUID:(id)arg1;
+ (id)systemDiskForVolumeGroupUUID:(id)arg1;
+ (id)diskForVolumeUUID:(id)arg1;
@property(readonly) struct statfs statfs; // @synthesize statfs=_stfs;
@property(readonly) NSURL *mountPointURL; // @synthesize mountPointURL=_mountPointURL;
@property(readonly) BOOL isROSPDataVolume;
@property(readonly) BOOL isROSPSystemVolume;
@property(readonly) NSNumber *apfsVolumeRole;
@property(readonly) NSString *apfsVolumeGroupUUID;
@property(readonly) NSArray *mountedDisksInVolumeGroup;
- (id)privateSizeOfAPFSSnapshotsFromStartXID:(unsigned long long)arg1 to:(unsigned long long)arg2 error:(id *)arg3;
- (id)privateSizeOfAPFSSnapshotsFrom:(id)arg1 to:(id)arg2 error:(id *)arg3;
- (BOOL)mountAPFSSnapshot:(id)arg1 atMountPoint:(id)arg2 error:(id *)arg3;
- (BOOL)makeDatalessAPFSSnapshot:(id)arg1 error:(id *)arg2;
- (BOOL)waitForSnapshotDeletionUntil:(id)arg1 error:(id *)arg2;
- (BOOL)renameAPFSSnapshot:(id)arg1 to:(id)arg2 error:(id *)arg3;
- (BOOL)deleteAPFSSnapshot:(id)arg1 error:(id *)arg2;
- (BOOL)createAPFSSnapshot:(id)arg1 error:(id *)arg2;
- (id)apfsDatalessSnapshotNames:(id *)arg1;
- (id)apfsSnapshotNames:(id *)arg1;
- (id)apfsSnapshots:(id *)arg1;
- (id)apfsSnapshotsByName:(id *)arg1;
- (BOOL)configureNetworkVolumeOptionsAndDisablePrimaryReconnect:(BOOL)arg1;
- (BOOL)configureReconnectTimeoutsAndQOSForBackup;
- (BOOL)_supportsBackupDiskImages;
@property(readonly) BOOL supportsBackupDiskImages;
- (BOOL)_supportsBackupStores;
@property(readonly) BOOL supportsBackupStores;
- (BOOL)_isRecoveryVolume;
@property(readonly) BOOL isRecoveryVolume;
- (BOOL)_isAppleBootPartition;
@property(readonly) BOOL isAppleBootPartition;
- (BOOL)_backedByDiskImage;
@property(readonly) BOOL backedByDiskImage;
- (BOOL)_includedByDefault;
@property(readonly) BOOL includedByDefault;
- (BOOL)_eligibleForBackup;
@property(readonly) BOOL eligibleForBackup;
- (BOOL)_answerForTrait:(unsigned long long)arg1 question:(CDUnknownBlockType)arg2;
- (id)calculateLiveVolumeBytesUsed;
@property(readonly) NSNumber *bytesUsed;
@property(readonly) NSNumber *bytesFree;
@property(readonly) NSNumber *capacity;
@property(readonly) struct __DADisk *liveDiskRef;
@property(readonly) NSString *apfsSnapshotName;
@property(readonly) BOOL isAPFSSnapshot;
@property(readonly) BOOL isAPFS;
@property(readonly) BOOL isWindows;
@property(readonly) BOOL isAFP;
@property(readonly) BOOL isSMB;
@property(readonly) BOOL isNTFS;
@property(readonly) BOOL isFAT;
@property(readonly) BOOL isEXFAT;
@property(readonly) BOOL isXSAN;
- (BOOL)_isCaseSensitive;
@property(readonly) BOOL isCaseSensitive;
@property(readonly) BOOL isHFSExtended;
@property(readonly) BOOL isHFS;
- (long long)fileSystemType;
- (BOOL)setIgnoringOwnership:(BOOL)arg1;
@property(readonly) BOOL ignoringOwnership;
- (BOOL)enableJournaling;
@property(readonly) BOOL isJournaled;
@property(readonly) BOOL mountedReadOnly;
@property(readonly) BOOL mountedVisibly;
@property(readonly) BOOL mountedLocally;
@property(readonly) BOOL isStartupDisk;
@property(readonly) BOOL isEncrypted;
@property(readonly) NSString *volumeName;
- (id)volumeUUID:(id *)arg1;
@property(readonly) NSString *volumeUUID;
@property(readonly) NSString *deviceNode;
@property(readonly) int device;
@property(readonly) short volumeRefNum; // @synthesize volumeRefNum=_volumeRefNum;
@property(readonly) NSDictionary *diskArbDescription;
@property(readonly) struct __DADisk *diskRef;
@property(readonly) NSString *mountPoint;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;
- (id)initWithStatfs:(struct statfs)arg1 diskRef:(struct __DADisk *)arg2;

@end

