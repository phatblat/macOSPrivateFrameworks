//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CSAudioServerCrashMonitorGibraltarDelegate.h"
#import "CSKeywordAnalyzerNDAPIScoreDelegate.h"
#import "CSKeywordAnalyzerQuasarScoreDelegate.h"
#import "CSSpeakerDetectorNDAPIDelegate.h"
#import "CSSpeechManagerDelegate.h"
#import "CSVoiceTriggerEnabledMonitorDelegate.h"
#import "CSVoiceTriggerFirstPassDelegate.h"

@class CSAsset, CSAudioCircularBuffer, CSKeywordAnalyzerNDAPI, CSKeywordAnalyzerQuasar, CSSpeakerDetectorNDAPI, CSSpeakerModel, CSSpeechManager, NSData, NSDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface CSVoiceTriggerSecondPass : NSObject <CSKeywordAnalyzerNDAPIScoreDelegate, CSSpeakerDetectorNDAPIDelegate, CSKeywordAnalyzerQuasarScoreDelegate, CSVoiceTriggerEnabledMonitorDelegate, CSAudioServerCrashMonitorGibraltarDelegate, CSSpeechManagerDelegate, CSVoiceTriggerFirstPassDelegate>
{
    BOOL _useSAT;
    BOOL _hasPendingNearMiss;
    BOOL _isRunningRecognizer;
    BOOL _recognizerResultPending;
    BOOL _hasTriggerCandidate;
    float _keywordThreshold;
    float _keywordLoggingThreshold;
    float _lastScore;
    float _recognizerScore;
    float _recognizerScoreScaleFactor;
    float _firstPassChannelSelectionDelaySeconds;
    float _firstPassMasterChannelScoreBoost;
    float _firstPassOnsetScore;
    CSSpeechManager *_speechManager;
    id <CSVoiceTriggerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    CSAsset *_currentAsset;
    CSKeywordAnalyzerNDAPI *_keywordAnalyzerNDAPI;
    CSKeywordAnalyzerQuasar *_keywordAnalyzerQuasar;
    CSSpeakerDetectorNDAPI *_speakerDetector;
    CSSpeakerModel *_speakerModel;
    unsigned long long _secondPassTimeout;
    unsigned long long _numProcessedSamples;
    unsigned long long _extraSamplesAtStart;
    unsigned long long _analyzerPrependingSamples;
    unsigned long long _analyzerTrailingSamples;
    unsigned long long _nearMissDelayTimeout;
    unsigned long long _nearMissCandidateDetectedSamples;
    NSDictionary *_lastAnalyzerResult;
    unsigned long long _recognizerWaitSamples;
    unsigned long long _earlyDetectFiredMachTime;
    unsigned long long _activeChannel;
    NSDictionary *_lastResult;
    unsigned long long _processedSampleCountsInPending;
    unsigned long long _firstPassTriggerStartSampleCount;
    unsigned long long _firstPassTriggerFireSampleCount;
    NSDictionary *_firstPassChannelSelectionScores;
    unsigned long long _firstPassOnsetChannel;
    unsigned long long _secondPassTriggerMachAbsTime;
    NSObject<OS_dispatch_queue> *_stateSerialQueue;
    double _lastAggTime;
    double _cumulativeUptime;
    double _cumulativeDowntime;
    NSData *_superVector;
    CSAudioCircularBuffer *_audioBuffer;
    unsigned long long _firstPassSource;
    NSString *_firstPassDeviceID;
}

@property(retain, nonatomic) NSString *firstPassDeviceID; // @synthesize firstPassDeviceID=_firstPassDeviceID;
@property(nonatomic) unsigned long long firstPassSource; // @synthesize firstPassSource=_firstPassSource;
@property(nonatomic) __weak CSAudioCircularBuffer *audioBuffer; // @synthesize audioBuffer=_audioBuffer;
@property(retain, nonatomic) NSData *superVector; // @synthesize superVector=_superVector;
@property(nonatomic) double cumulativeDowntime; // @synthesize cumulativeDowntime=_cumulativeDowntime;
@property(nonatomic) double cumulativeUptime; // @synthesize cumulativeUptime=_cumulativeUptime;
@property(nonatomic) double lastAggTime; // @synthesize lastAggTime=_lastAggTime;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *stateSerialQueue; // @synthesize stateSerialQueue=_stateSerialQueue;
@property(nonatomic) unsigned long long secondPassTriggerMachAbsTime; // @synthesize secondPassTriggerMachAbsTime=_secondPassTriggerMachAbsTime;
@property(nonatomic) BOOL hasTriggerCandidate; // @synthesize hasTriggerCandidate=_hasTriggerCandidate;
@property(nonatomic) unsigned long long firstPassOnsetChannel; // @synthesize firstPassOnsetChannel=_firstPassOnsetChannel;
@property(nonatomic) float firstPassOnsetScore; // @synthesize firstPassOnsetScore=_firstPassOnsetScore;
@property(nonatomic) float firstPassMasterChannelScoreBoost; // @synthesize firstPassMasterChannelScoreBoost=_firstPassMasterChannelScoreBoost;
@property(nonatomic) float firstPassChannelSelectionDelaySeconds; // @synthesize firstPassChannelSelectionDelaySeconds=_firstPassChannelSelectionDelaySeconds;
@property(retain, nonatomic) NSDictionary *firstPassChannelSelectionScores; // @synthesize firstPassChannelSelectionScores=_firstPassChannelSelectionScores;
@property(nonatomic) unsigned long long firstPassTriggerFireSampleCount; // @synthesize firstPassTriggerFireSampleCount=_firstPassTriggerFireSampleCount;
@property(nonatomic) unsigned long long firstPassTriggerStartSampleCount; // @synthesize firstPassTriggerStartSampleCount=_firstPassTriggerStartSampleCount;
@property(nonatomic) unsigned long long processedSampleCountsInPending; // @synthesize processedSampleCountsInPending=_processedSampleCountsInPending;
@property(retain, nonatomic) NSDictionary *lastResult; // @synthesize lastResult=_lastResult;
@property(nonatomic) unsigned long long activeChannel; // @synthesize activeChannel=_activeChannel;
@property(nonatomic) unsigned long long earlyDetectFiredMachTime; // @synthesize earlyDetectFiredMachTime=_earlyDetectFiredMachTime;
@property(nonatomic) unsigned long long recognizerWaitSamples; // @synthesize recognizerWaitSamples=_recognizerWaitSamples;
@property(nonatomic) float recognizerScoreScaleFactor; // @synthesize recognizerScoreScaleFactor=_recognizerScoreScaleFactor;
@property(nonatomic) BOOL recognizerResultPending; // @synthesize recognizerResultPending=_recognizerResultPending;
@property(nonatomic) BOOL isRunningRecognizer; // @synthesize isRunningRecognizer=_isRunningRecognizer;
@property(nonatomic) float recognizerScore; // @synthesize recognizerScore=_recognizerScore;
@property(retain, nonatomic) NSDictionary *lastAnalyzerResult; // @synthesize lastAnalyzerResult=_lastAnalyzerResult;
@property(nonatomic) BOOL hasPendingNearMiss; // @synthesize hasPendingNearMiss=_hasPendingNearMiss;
@property(nonatomic) unsigned long long nearMissCandidateDetectedSamples; // @synthesize nearMissCandidateDetectedSamples=_nearMissCandidateDetectedSamples;
@property(nonatomic) unsigned long long nearMissDelayTimeout; // @synthesize nearMissDelayTimeout=_nearMissDelayTimeout;
@property(nonatomic) BOOL useSAT; // @synthesize useSAT=_useSAT;
@property(nonatomic) unsigned long long analyzerTrailingSamples; // @synthesize analyzerTrailingSamples=_analyzerTrailingSamples;
@property(nonatomic) unsigned long long analyzerPrependingSamples; // @synthesize analyzerPrependingSamples=_analyzerPrependingSamples;
@property(nonatomic) unsigned long long extraSamplesAtStart; // @synthesize extraSamplesAtStart=_extraSamplesAtStart;
@property(nonatomic) float lastScore; // @synthesize lastScore=_lastScore;
@property(nonatomic) float keywordLoggingThreshold; // @synthesize keywordLoggingThreshold=_keywordLoggingThreshold;
@property(nonatomic) float keywordThreshold; // @synthesize keywordThreshold=_keywordThreshold;
@property(nonatomic) unsigned long long numProcessedSamples; // @synthesize numProcessedSamples=_numProcessedSamples;
@property(nonatomic) unsigned long long secondPassTimeout; // @synthesize secondPassTimeout=_secondPassTimeout;
@property(retain, nonatomic) CSSpeakerModel *speakerModel; // @synthesize speakerModel=_speakerModel;
@property(retain, nonatomic) CSSpeakerDetectorNDAPI *speakerDetector; // @synthesize speakerDetector=_speakerDetector;
@property(retain, nonatomic) CSKeywordAnalyzerQuasar *keywordAnalyzerQuasar; // @synthesize keywordAnalyzerQuasar=_keywordAnalyzerQuasar;
@property(retain, nonatomic) CSKeywordAnalyzerNDAPI *keywordAnalyzerNDAPI; // @synthesize keywordAnalyzerNDAPI=_keywordAnalyzerNDAPI;
@property(retain, nonatomic) CSAsset *currentAsset; // @synthesize currentAsset=_currentAsset;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <CSVoiceTriggerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak CSSpeechManager *speechManager; // @synthesize speechManager=_speechManager;
- (void).cxx_destruct;
- (void)handleServerDidRestart;
- (void)mediaserverdDidRestart;
- (void)activationEventNotifier:(id)arg1 event:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_implicitTrainingIfNeeded:(id)arg1;
- (void)CSVoiceTriggerEnabledMonitor:(id)arg1 didReceiveEnabled:(BOOL)arg2;
- (void)_resetUpTime;
- (void)_logUptimeWithVTSwitchChanged:(BOOL)arg1 VTEnabled:(BOOL)arg2;
- (void)speakerDetector:(id)arg1 didDetectSpeakerReject:(id)arg2;
- (void)speakerDetector:(id)arg1 didDetectSpeaker:(id)arg2;
- (void)_markSecondPassTriggerMachAbsoluteTime:(unsigned long long)arg1;
- (void)keywordAnalyzerQuasar:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;
- (void)keywordAnalyzerNDAPI:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;
- (void)_analyzeForKeywordDetection:(id)arg1 result:(id)arg2 forChannel:(unsigned long long)arg3 forceMaximized:(BOOL)arg4;
- (void)speechManagerDidStopForwarding:(id)arg1 forReason:(long long)arg2;
- (void)speechManagerDidStartForwarding:(id)arg1 successfully:(BOOL)arg2 error:(id)arg3;
- (void)speechManagerRecordBufferAvailable:(id)arg1 buffer:(id)arg2;
- (void)_notifySecondPassReject;
- (void)speechManagerLPCMRecordBufferAvailable:(id)arg1 chunk:(id)arg2;
- (void)voiceTriggerFirstPass:(id)arg1 from:(unsigned long long)arg2 didDetectKeyword:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_voiceTriggerFirstPassDidDetectKeywordFrom:(unsigned long long)arg1 deviceId:(id)arg2 firstPassInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handleVoiceTriggerFirstPassFromAP:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_clearTriggerCandidate;
- (void)_setAsset:(id)arg1;
- (void)setAsset:(id)arg1;
- (void)_reset;
- (void)reset;
- (void)start;
- (id)initWithManager:(id)arg1 asset:(id)arg2 audioBuffer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

