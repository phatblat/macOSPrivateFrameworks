//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CSActivationEventNotifierDelegate.h"
#import "CSSiriClientBehaviorMonitorDelegate.h"

@class CSAsset, CSAudioProvider, CSAudioStreamHolding, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface CSVoiceTriggerFirstPassHearst : NSObject <CSActivationEventNotifierDelegate, CSSiriClientBehaviorMonitorDelegate>
{
    float _remoteMicVADThreshold;
    float _remoteMicVADMyriadThreshold;
    float _minimumPhraseLengthForVADGating;
    id <CSVoiceTriggerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_hearstSecondPassRequests;
    CSAsset *_currentAsset;
    CSAudioStreamHolding *_triggeredAudioStreamHolding;
    CSAudioProvider *_triggeredAudioProvider;
    unsigned long long _secondChanceHotTillMachTime;
}

@property(nonatomic) unsigned long long secondChanceHotTillMachTime; // @synthesize secondChanceHotTillMachTime=_secondChanceHotTillMachTime;
@property(retain, nonatomic) CSAudioProvider *triggeredAudioProvider; // @synthesize triggeredAudioProvider=_triggeredAudioProvider;
@property(retain, nonatomic) CSAudioStreamHolding *triggeredAudioStreamHolding; // @synthesize triggeredAudioStreamHolding=_triggeredAudioStreamHolding;
@property(nonatomic) float minimumPhraseLengthForVADGating; // @synthesize minimumPhraseLengthForVADGating=_minimumPhraseLengthForVADGating;
@property(nonatomic) float remoteMicVADMyriadThreshold; // @synthesize remoteMicVADMyriadThreshold=_remoteMicVADMyriadThreshold;
@property(nonatomic) float remoteMicVADThreshold; // @synthesize remoteMicVADThreshold=_remoteMicVADThreshold;
@property(retain, nonatomic) CSAsset *currentAsset; // @synthesize currentAsset=_currentAsset;
@property(retain, nonatomic) NSMutableDictionary *hearstSecondPassRequests; // @synthesize hearstSecondPassRequests=_hearstSecondPassRequests;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <CSVoiceTriggerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_cancelAllAudioStreamHoldings;
- (void)_requestStartAudioStreamWitContext:(id)arg1 secondPassRequest:(id)arg2 startStreamOption:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handleSecondPassResult:(unsigned long long)arg1 secondPassRequest:(id)arg2 voiceTriggerInfo:(id)arg3 deviceId:(id)arg4 secondChanceCandidate:(BOOL)arg5 error:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)_handleRemoteMicVoiceTriggerEvent:(id)arg1 secondPassRequest:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handleRemoteMicVADEventWithSecondPassRequest:(id)arg1;
- (void)siriClientBehaviorMonitor:(id)arg1 willStopStream:(id)arg2;
- (void)siriClientBehaviorMonitor:(id)arg1 willStartStreamWithContext:(id)arg2 option:(id)arg3;
- (void)siriClientBehaviorMonitor:(id)arg1 didStopStream:(id)arg2;
- (void)siriClientBehaviorMonitor:(id)arg1 didStartStreamWithContext:(id)arg2 successfully:(BOOL)arg3 option:(id)arg4;
- (void)activationEventNotifier:(id)arg1 event:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_setAsset:(id)arg1;
- (void)setAsset:(id)arg1;
- (void)_reset;
- (void)reset;
- (void)start;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

