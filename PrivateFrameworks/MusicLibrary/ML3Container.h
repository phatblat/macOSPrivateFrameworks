//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <MusicLibrary/ML3Entity.h>

@class ML3Predicate, NSArray, NSString;

@interface ML3Container : ML3Entity
{
}

+ (id)_allStaticItemContainersInLibrary:(id)arg1 usingConnection:(id)arg2;
+ (void)reloadContainedMediaTypesForContainerWithPersistID:(long long)arg1 usingConnection:(id)arg2;
+ (void)removeNonLibraryItemsFromContainer:(id)arg1 usingConnection:(id)arg2;
+ (void)removeNonLibraryItemsFromContainersInLibrary:(id)arg1 usingConnection:(id)arg2;
+ (void)removeAnyNonLibraryItemsInPersistentIDs:(id)arg1 fromContainersInLibrary:(id)arg2 usingConnection:(id)arg3;
+ (void)populateMediaTypesOfStaticContainersInLibrary:(id)arg1;
+ (void)_removeMediaTypesFromContainerWithPersistentID:(long long)arg1 mediaTypes:(id)arg2 connection:(id)arg3;
+ (void)_addMediaTypesToContainerWithPersistentID:(long long)arg1 mediaTypes:(id)arg2 connection:(id)arg3;
+ (void)_clearContainerMediaTypeInContainerWithPersistentID:(long long)arg1 connection:(id)arg2;
+ (id)_mediaTypesForTracksInContainerWithPersistentID:(long long)arg1 connection:(id)arg2;
+ (id)_mediaTypesForTracksWithPersistentIDs:(id)arg1 usingConnection:(id)arg2;
+ (void)_updateContainedMediaTypeInContainerWithPersistentID:(long long)arg1 connection:(id)arg2 itemUpdateBlock:(CDUnknownBlockType)arg3;
+ (BOOL)deleteFromLibrary:(id)arg1 deletionType:(int)arg2 persistentIDs:(const long long *)arg3 count:(unsigned long long)arg4;
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)arg1;
+ (BOOL)updateBuiltInSmartPlaylistNamesForCurrentLanguage:(id)arg1;
+ (void)populateSortOrdersOfPropertyValues:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3;
+ (BOOL)smartCriteriaCanBeEvaluated:(id)arg1;
+ (id)nextFilepathForPlaylistType:(int)arg1 withPersistentID:(unsigned long long)arg2 inLibrary:(id)arg3;
+ (BOOL)libraryContentsChangeForProperty:(id)arg1;
+ (BOOL)libraryDynamicChangeForProperty:(id)arg1;
+ (id)defaultFilterPredicates;
+ (id)persistentIDColumnForTable:(id)arg1;
+ (id)extraTablesToDelete;
+ (id)foreignColumnForProperty:(id)arg1;
+ (id)foreignDatabaseTableForProperty:(id)arg1;
+ (id)sectionPropertyForProperty:(id)arg1;
+ (id)joinClausesForProperty:(id)arg1;
+ (id)defaultOrderingTerms;
+ (long long)revisionTrackingCode;
+ (id)databaseTable;
+ (void)initialize;
+ (int)protocolSortTypeFromTrackOrder:(unsigned int)arg1;
+ (unsigned int)trackOrderFromProtocolSortType:(int)arg1;
- (BOOL)_setItemPersistentIDs:(id)arg1 reloadContainedMediaTypes:(BOOL)arg2 removedMediaTypes:(id)arg3 addedMediaTypes:(id)arg4 notify:(BOOL)arg5 incrementEntityRevision:(BOOL)arg6 usingConnection:(id)arg7;
- (BOOL)_supportsOrderedTrackOperations;
- (void)_setContainerSeedItemPersistentIDValue:(id)arg1;
- (BOOL)_removeTracksAtIndexes:(id)arg1 notify:(BOOL)arg2 usingConnection:(id)arg3;
- (BOOL)_reloadContainedMediaTypes:(BOOL)arg1 removedMediaTypes:(id)arg2 addedMediaTypes:(id)arg3 notify:(BOOL)arg4 incrementEntityRevision:(BOOL)arg5 usingConnection:(id)arg6;
- (long long)_maxPositionForTracksUsingConnection:(id)arg1;
- (BOOL)isBuiltInSmartPlaylist;
- (id)childPlaylistPersistentIds;
- (id)trackPersistentIds;
- (BOOL)removeFirstTrack;
- (BOOL)removeTracksAtIndexes:(id)arg1 notify:(BOOL)arg2;
- (BOOL)moveTrackFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (BOOL)appendTracksWithPersistentIDs:(id)arg1 notify:(BOOL)arg2;
- (BOOL)setTracksWithPersistentIDs:(id)arg1 notify:(BOOL)arg2;
- (BOOL)removeAllTracks;
@property(readonly, copy) NSArray *displayOrderingTerms;
@property(readonly, copy) NSArray *cloudDisplayOrderingTerms;
@property(readonly) long long limitValue;
@property(readonly, copy) NSArray *limitOrderingTerms;
- (id)evaluationOrderingTerms;
@property(readonly, copy) NSString *limitingProperty;
@property(readonly, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;
@property(readonly, getter=isLimitedByCount) BOOL limitedByCount;
- (BOOL)isEvaluationOrderingDescending;
@property(readonly) ML3Predicate *smartCriteriaPredicate;
- (void)setValues:(id)arg1 forProperties:(id)arg2 async:(BOOL)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (id)initWithDictionary:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3 usingConnection:(id)arg4;
- (id)protocolItem;
- (id)multiverseIdentifier;
- (id)criteriaListDescription;

@end

