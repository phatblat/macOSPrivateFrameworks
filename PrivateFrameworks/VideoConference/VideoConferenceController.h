//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NATTraversal, NSMutableDictionary, NSString, VCNotificationGateway;

@interface VideoConferenceController : NSObject
{
    NSString *_localIPAddress;
    NSString *_userName;
    BOOL _allowsVideoRecv;
    BOOL _allowsAudioRecv;
    BOOL _allowsVideoSend;
    BOOL _allowsAudioSend;
    BOOL _enableEchoCancellation;
    BOOL _enableOldAudioProcessing;
    BOOL _enableNewAudioProcessing;
    unsigned int _bitrate;
    unsigned int _framerate;
    unsigned int _keyrate;
    unsigned int _maxBitrate;
    unsigned int _maxFramerate;
    int _optimalImageSize;
    BOOL _doNotDisturb;
    BOOL _preFilter;
    BOOL _postFilter;
    int _lightingProfile;
    int _defaultPayload;
    int _defaultWidth;
    int _defaultHeight;
    NSString *_remoteUserName;
    int _audioQuality;
    BOOL _useEncryption;
    struct __SecIdentity *_localSecIdentityRef;
    BOOL _autoDetectBandwidth;
    NSMutableDictionary *_statsDictionary;
    VCNotificationGateway *_notificationGateway;
    NATTraversal *_NATTraversal;
    struct __SCDynamicStore *_dynamicStore;
    NSMutableDictionary *_connectionDataAndCallIDDictionary;
    BOOL _oneWayOnly;
    BOOL _SDForced;
    NSString *_cameraName;
    NSString *_cameraGUID;
    unsigned int _cameraDeviceID;
}

+ (id)soundOutputDeviceList;
+ (id)speakerList;
+ (id)micList;
+ (id)microphoneList;
+ (id)cameraList;
+ (id)newcameraList;
+ (void)initialize;
- (void)releaseRouterMappings;
- (void)shutdownAV;
- (id)getErrorReport;
- (int)properConfIndexForUser:(id)arg1;
- (void)setSNATMAPData:(id)arg1;
- (id)snatmapDataObj;
- (void)iChatDidFileTransfer;
- (void)iChatWillFileTransfer;
- (int)lightingProfile;
- (void)setLightingProfile:(int)arg1;
- (float)sharpness;
- (BOOL)setSharpness:(float)arg1;
- (float)focus;
- (BOOL)setFocus:(float)arg1;
- (float)contrast;
- (BOOL)setContrast:(float)arg1;
- (float)brightness;
- (BOOL)setBrightness:(float)arg1;
- (float)color;
- (BOOL)setColor:(float)arg1;
- (id)soundOutputDeviceName;
- (BOOL)selectSoundOutputDevice:(id)arg1;
- (id)selectedSpeaker;
- (BOOL)selectSpeaker:(id)arg1;
- (id)micName;
- (BOOL)selectMic:(id)arg1;
- (id)findMovieMic;
- (id)selectedMicrophone;
- (BOOL)selectMicrophone:(id)arg1;
- (id)cameraName;
- (BOOL)selectCamera:(id)arg1;
- (id)selectedCamera;
- (BOOL)selectCameraWithCMIODeviceID:(unsigned int)arg1;
- (BOOL)selectCameraWithTundraDeviceID:(unsigned int)arg1;
- (BOOL)selectCameraByGUID:(id)arg1;
- (BOOL)closeCamera;
- (BOOL)openCamera;
- (int)upstreamAudioBandwidthToUserID:(id)arg1;
- (int)upstreamBandwidthToUserID:(id)arg1;
- (float)speakerLevel;
- (float)microphoneLevel;
- (float)microphoneGain;
- (int)setMicrophoneGain:(float)arg1;
- (int)cancelPreview;
- (void)handleFrameworkNotification:(id)arg1;
- (void)handleWorkspaceNotification:(id)arg1;
- (void)VCSendMessageProc:(id)arg1;
- (float)audioVolume;
- (int)setAudioVolume:(float)arg1;
- (BOOL)isPartyPaused:(int)arg1;
- (void)pauseParty:(int)arg1 shouldPause:(BOOL)arg2;
- (BOOL)isPartyMuted:(int)arg1;
- (void)muteParty:(int)arg1 shouldMute:(BOOL)arg2;
- (int)DoVCIncomingConference:(void *)arg1;
- (int)cancelInitiatedConferenceCallWithRemoteIPAddress:(id)arg1 remoteSIPPort:(unsigned short)arg2;
- (BOOL)doNotDisturb;
- (void)setDoNotDisturb:(BOOL)arg1;
- (BOOL)autoDetectBandwidth;
- (void)setAutoDetectBandwidth:(BOOL)arg1;
- (int)audioQuality;
- (void)setAudioQuality:(int)arg1;
- (BOOL)fixCameraFeature:(int)arg1 isFixed:(BOOL)arg2;
- (BOOL)fixCameraProperties:(BOOL)arg1;
- (int)startPreview;
- (BOOL)canStartPreview;
- (id)remoteUserName;
- (void)setRemoteUserName:(id)arg1;
- (void)dealloc;
- (id)externalIPAddress;
- (unsigned int)externalSIPPort;
- (unsigned int)localSIPPort;
- (BOOL)ignoreNoRemotePackets;
- (void)setIgnoreNoRemotePackets:(BOOL)arg1;
- (BOOL)enableNoiseReduction;
- (void)setEnableNoiseReduction:(BOOL)arg1;
- (BOOL)enableEchoCancellation;
- (void)setEnableEchoCancellation:(BOOL)arg1;
- (unsigned int)maxFramerate;
- (void)setMaxFramerate:(unsigned int)arg1;
- (unsigned int)maxBitrate;
- (void)setMaxBitrate:(unsigned int)arg1;
- (int)optimalImageSize;
- (void)setOptimalImageSize:(int)arg1;
- (unsigned int)keyrate;
- (void)setKeyrate:(unsigned int)arg1;
- (unsigned int)framerate;
- (void)setFramerate:(unsigned int)arg1;
- (unsigned int)bitrate;
- (void)setBitrate:(unsigned int)arg1;
- (BOOL)allowsAudioRecv;
- (void)setAllowsAudioRecv:(BOOL)arg1;
- (BOOL)allowsVideoRecv;
- (void)setAllowsVideoRecv:(BOOL)arg1;
- (BOOL)allowsAudioSend;
- (void)setAllowsAudioSend:(BOOL)arg1;
- (BOOL)allowsVideoSend;
- (void)setAllowsVideoSend:(BOOL)arg1;
- (BOOL)allowsAudio;
- (void)setAllowsAudio:(BOOL)arg1;
- (BOOL)allowsVideo;
- (void)setAllowsVideo:(BOOL)arg1;
- (id)userName;
- (void)setUserName:(id)arg1;
- (id)localIPAddress;
- (void)setLocalIPAddress:(id)arg1;
- (id)initWithLocalIPAddress:(id)arg1;
- (void)setCPUResize:(int)arg1;
- (void)setRectTexture:(int)arg1;
- (id)initWithRectTexture:(int)arg1;
- (id)init;
- (void)updateCPUPower:(float)arg1 cpuCount:(int)arg2 scheduleLimit:(float)arg3;
- (void)doInitialCPUUpdate;
- (void)cpuUpdateProc:(id)arg1;
- (void)freeVars;
- (void)resetVars;
- (id)renderDelegate;
- (void)setRenderDelegate:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)discardPreservedPortBindingForCallID:(int)arg1;
- (BOOL)selectMovieMic;
- (void)setInternalSamplingRateFromDefaults;
- (int)processCVPixelBuffer:(void *)arg1 intoCVPixelBuffer:(void *)arg2 withHint:(id)arg3;
- (void)setCurrentCameraDeviceID:(unsigned int)arg1;
- (unsigned int)currentCameraDeviceID;
- (void)setCurrentCameraGUID:(id)arg1;
- (id)currentCameraGUID;
- (void)setCurrentCameraName:(id)arg1;
- (id)currentCameraName;
- (void)setConferenceBitrate:(int)arg1;
- (id)_selectedCamera;
- (BOOL)_selectCameraWithCMIODeviceID:(unsigned int)arg1;
- (BOOL)_selectCameraByGUID:(id)arg1;
- (BOOL)_closeCamera;
- (BOOL)_openCamera;
- (BOOL)hasCamera;
- (id)getSIPDataAndIPListFromRemoteIPAndPortData:(id)arg1 ipList:(id)arg2;
- (BOOL)setAudioAndVideoPayload:(id)arg1 forConferenceIndex:(int)arg2 forUserAgent:(id)arg3 forPeerSDP:(id)arg4;
- (BOOL)setAudioAndVideoPayload:(id)arg1 forConferenceIndex:(int)arg2 forUserAgent:(id)arg3;
- (int)getNATMappedPorts:(struct tagIPPORT **)arg1 numPortsOut:(int *)arg2;
- (void)createUPnPMappings;
- (int)createVTPAndGetRealPort:(unsigned short *)arg1 forInterface:(struct tagIPPORT *)arg2;
- (id)bandwidthDictionaryForUserID:(id)arg1;
- (int)sendChatMessage:(id)arg1;
- (BOOL)enableFocus:(BOOL)arg1;
- (BOOL)setCameraSettingsData:(id)arg1;
- (id)cameraSettingsData;
- (BOOL)postFilter;
- (void)setPostFilter:(BOOL)arg1;
- (BOOL)preFilter:(int)arg1;
- (void)setPreFilter:(int)arg1 enabled:(BOOL)arg2;
- (BOOL)newAudioProcessing;
- (void)setNewAudioProcessing:(BOOL)arg1;
- (BOOL)oldAudioProcessing;
- (void)setOldAudioProcessing:(BOOL)arg1;
- (BOOL)AGC;
- (void)setAGC:(BOOL)arg1;
- (BOOL)echoCancellation;
- (void)setEchoCancellation:(BOOL)arg1;
- (BOOL)encryption;
- (void)setEncryption:(BOOL)arg1;
- (int)getCameraAreaOfInterestDefaults:(float *)arg1 y:(float *)arg2 width:(float *)arg3 height:(float *)arg4;
- (int)getCameraAreaOfInterest:(float *)arg1 y:(float *)arg2 width:(float *)arg3 height:(float *)arg4;
- (int)setCameraAreaOfInterest:(float)arg1 y:(float)arg2 width:(float)arg3 height:(float)arg4;
- (int)getCameraFocusPointDefaults:(float *)arg1 y:(float *)arg2;
- (int)getCameraFocusPoint:(float *)arg1 y:(float *)arg2;
- (int)setCameraFocusPoint:(float)arg1 y:(float)arg2;
- (int)getCameraFeatureRange:(int)arg1 minValue:(float *)arg2 maxValue:(float *)arg3 hasManual:(int *)arg4 hasAuto:(int *)arg5;
- (int)getCameraFeatureDefaults:(int)arg1 enabled:(int *)arg2 value:(float *)arg3 automatic:(int *)arg4;
- (int)getCameraFeature:(int)arg1 enabled:(int *)arg2 value:(float *)arg3 automatic:(int *)arg4;
- (int)setCameraFeature:(int)arg1 enabled:(int)arg2 value:(float)arg3 automatic:(int)arg4;
- (int)cameraFeatureID:(id)arg1;
- (void)allowPureVoice:(BOOL)arg1;
- (void)allowG711:(BOOL)arg1;
- (void)allowGSM:(BOOL)arg1;
- (id)dictionaryForPeer;
- (id)dictionaryForUserID:(id)arg1;
- (void)updateDictionaryForUserID:(id)arg1 withSubKey:(id)arg2 andValue:(id)arg3;
- (BOOL)existUserIDInUserIDMap:(id)arg1;
- (void)invalidateCallIDForUserID:(id)arg1;
- (void)clearUserIDToCallIDMap;
- (int)userIDMapCount;
- (BOOL)removeUserIDFromMap:(id)arg1;
- (BOOL)addUserIDToMap:(id)arg1 withInfo:(id)arg2;
- (void)sendHardwareCapsChange:(BOOL)arg1;
- (void)disableU2Input;
- (BOOL)enableU2Input;
- (struct CGSize)auxVideoBufferSizeForParty:(id)arg1 replacementOnly:(BOOL)arg2;
- (float)auxiliaryAudioVolume;
- (void)setAuxiliaryAudioVolume:(float)arg1;
- (void)muteAuxiliaryAudioLocalPlayback:(BOOL)arg1;
- (void)muteAuxiliaryAudio:(BOOL)arg1;
- (void)stopAuxiliaryReflector;
- (int)startAuxiliaryReflector;
- (BOOL)requestReflectorChannels:(id)arg1;
- (id)audioReflectorChannels:(int)arg1;
- (int)audioReflectorChannel;
- (id)audioReflectorGUID;
- (void)disableAuxiliaryVideoInput;
- (void)auxiliaryInputReady;
- (void)setAuxiliaryVideoInputMode:(int)arg1;
- (void)requestAuxiliaryVideoInput;
- (void)disableReplacementInput;
- (BOOL)enableReplacementVideoInputWithName:(id)arg1;
- (BOOL)IsSideShowAvailable;
- (BOOL)isSDForced;
- (void)setSDForced:(BOOL)arg1;

@end

